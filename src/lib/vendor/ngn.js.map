{"version":3,"file":"ngn.js","sources":["../../../src/exception.js","../../../src/core.js","../../../src/emitter/BrowserEmitter.js","../../../src/emitter/core.js","../../../src/queue/task.js","../../../src/queue/queue.js","../../../src/utility/Lexer.js","../../../src/utility/Tokenizer.js","../../../src/utility/Set.js","../../../src/net/utility.js","../../../src/net/Request.js","../../../src/net/Network.js","../../../src/net/Resource.js","../../../src/net/core.js","../../../src/data/DiffEngine.js","../../../src/data/Utility.js","../../../src/data/index/BTree.js","../../../src/data/schema/JSON.js","../../../src/data/TransactionLog.js","../../../src/data/rule/Rule.js","../../../src/data/rule/RangeRule.js","../../../src/data/field/Field.js","../../../src/data/field/VirtualField.js","../../../src/data/field/Relationship.js","../../../src/data/field/FieldMap.js","../../../src/data/Model.js","../../../src/data/index/Index.js","../../../src/data/Store.js","../../../src/data/core.js","../../../src/main.js"],"sourcesContent":["export default class CustomException extends Error { // eslint-disable-line\r\n  constructor (config) {\r\n    super()\r\n\r\n    Object.defineProperty(this, 'frameFilter', NGN.privateconst((frame) => {\r\n      return NGN.nodelike\r\n        ? frame.getFileName() !== __filename && frame.getFileName()\r\n        : frame.getFileName()\r\n    }))\r\n\r\n    config = config || {}\r\n    config = typeof config === 'string' ? { message: config } : config\r\n    config.custom = config.custom || {}\r\n\r\n    let me = this\r\n\r\n    this.name = config.name || 'NgnError'\r\n    this.type = config.type || 'TypeError'\r\n    this.severity = config.severity || 'minor'\r\n    this.message = config.message || 'Unknown Error'\r\n    this.category = config.category || 'operational' // Alternative is \"programmer\"\r\n\r\n    // Cleanup name\r\n    this.name = this.name.replace(/[^a-zA-Z0-9_]/gi, '')\r\n\r\n    // Add any custom properties\r\n    for (let attr in config.custom) {\r\n      if (config.custom.hasOwnProperty(attr)) {\r\n        this[attr] = config.custom[attr]\r\n      }\r\n    }\r\n\r\n    this.hasOwnProperty('custom') && delete this.custom\r\n\r\n    if (NGN.nodelike || Error.prepareStackTrace) {\r\n      // Capture the stack trace on a new error so the detail can be saved as a structured trace.\r\n      Error.prepareStackTrace = function (_, stack) { return stack }\r\n\r\n      let _err = new Error()\r\n\r\n      Error.captureStackTrace(_err, this)\r\n\r\n      this.rawstack = _err.stack\r\n\r\n      Error.prepareStackTrace = function (err, stack) { // eslint-disable-line handle-callback-err\r\n        me.cause && console.warn(me.cause)\r\n        me.help && console.info(me.help)\r\n\r\n        return `${me.name}: ${me.message}\\n` + stack.filter(me.frameFilter).map((el) => {\r\n          return `    at ${el}`\r\n        }).join('\\n')\r\n      }\r\n\r\n      // Enable stack trace\r\n      Error.captureStackTrace(this)\r\n    }\r\n  }\r\n\r\n  /*\r\n   * @property {Array} trace\r\n   * The structured data of the stacktrace. Each array element is a JSON object corresponding to\r\n   * the full stack trace:\r\n   *\r\n   * ```js\r\n   * {\r\n   *   filename: String,\r\n   *   line: Number,\r\n   *   column: Number,\r\n   *   functionname: String,\r\n   *   native: Boolean,\r\n   *   eval: Boolean,\r\n   *   type: String\r\n   * }\r\n   * ```\r\n   * @readonly\r\n   */\r\n  get trace () {\r\n    return this.rawstack.filter(this.frameFilter).map((frame) => {\r\n      return {\r\n        filename: frame.getFileName(),\r\n        line: frame.getLineNumber(),\r\n        column: frame.getColumnNumber(),\r\n        functionname: frame.getFunctionName(),\r\n        native: frame.isNative(),\r\n        eval: frame.isEval(),\r\n        type: frame.getTypeName()\r\n      }\r\n    })\r\n  }\r\n}\r\n","import CustomException from './exception'\r\n\r\n/**\r\n * @namespace NGN\r\n */\r\nlet NGN = Object.defineProperties({\r\n  // Establish a globally recognized namespace for browser or node-like environment.\r\n  get global () {\r\n    try { return window } catch (e) { return global }\r\n  }\r\n}, {\r\n  /**\r\n  * @method define\r\n  * Create an object definition for a property.\r\n  * For example:\r\n  *\r\n  * ```\r\n  * Object.defineProperty('attr', NGN.define(true, false, true, 'value'))\r\n  *\r\n  * // The snippet above is the same as:\r\n  * Object.defineProperty(this, 'attr', {\r\n  *  enumberable: true,\r\n  *  writable: false,\r\n  *  configurable: true,\r\n  *  value: 'value'\r\n  * })\r\n  * ```\r\n  * @param  {boolean} enumerable\r\n  * Determines if the attribute is considered an accessible part of the object.\r\n  * Making an attribute enumerable will make it show up as a key in an object,\r\n  * which can be iterated over (ex: `Object.keys()`). A non-enumerable asset is\r\n  * treated as a private attribute.\r\n  * @param  {boolean} writable\r\n  * Determines whether the value can be changed.\r\n  * @param  {boolean} configurable\r\n  * Determines whether the attribute can be removed from the object.\r\n  * @param  {any} value\r\n  * The actual value of the attribute.\r\n  * @private\r\n  */\r\n  define: {\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n    value: function (enumerable, writable, configurable, value) {\r\n      return {\r\n        enumerable,\r\n        writable,\r\n        configurable,\r\n        value\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nObject.defineProperties(NGN, {\r\n  /**\r\n   * @method public\r\n   * Create a `public` property definition for an object.\r\n   * Example:\r\n   *\r\n   * ```\r\n   * Object.defineProperty(this, 'attr', NGN.public('somevalue'))\r\n   *\r\n   * // Longhand equivalent\r\n   * Object.defineProperty(this, 'attr', {\r\n   *  enumerable: true,\r\n   *  writable: true,\r\n   *  configurable: false,\r\n   *  value: 'somevalue'\r\n   * })\r\n   * ```\r\n   * @param  {any} value\r\n   * Any valid JavaScript value (function, boolean, number, string, etc)\r\n   * used as the value for the object attribute.\r\n   * @private\r\n   */\r\n  public: NGN.define(false, false, false, function (value) {\r\n    return NGN.define(true, typeof value !== 'function', false, value)\r\n  }),\r\n\r\n  /**\r\n   * @method private\r\n   * Create a `private` property definition for an object.\r\n   * Example:\r\n   *\r\n   * ```\r\n   * Object.defineProperty(this, 'attr', NGN.private('somevalue'))\r\n   *\r\n   * // Longhand equivalent\r\n   * Object.defineProperty(this, 'attr', {\r\n   *  enumerable: false,\r\n   *  writable: true,\r\n   *  configurable: false,\r\n   *  value: 'somevalue'\r\n   * })\r\n   * ```\r\n   * @param  {any} value\r\n   * Any valid JavaScript value (function, boolean, number, string, etc)\r\n   * used as the value for the object attribute.\r\n   * @private\r\n   */\r\n  private: NGN.define(false, false, false, function (value) {\r\n    return NGN.define(false, typeof value !== 'function', false, value)\r\n  }),\r\n\r\n  /**\r\n   * @method const\r\n   * Create a `public` constant property definition for an object.\r\n   * Example:\r\n   *\r\n   * ```\r\n   * Object.defineProperty(this, 'attr', NGN.const('somevalue'))\r\n   *\r\n   * // Longhand equivalent\r\n   * Object.defineProperty(this, 'attr', {\r\n   *  enumerable: true,\r\n   *  writable: false,\r\n   *  configurable: false,\r\n   *  value: 'somevalue'\r\n   * })\r\n   * ```\r\n   * @param  {any} value\r\n   * Any valid JavaScript value (function, boolean, number, string, etc)\r\n   * used as the value for the object attribute.\r\n   * @private\r\n   */\r\n  const: NGN.define(false, false, false, function (value) {\r\n    return NGN.define(true, false, false, value)\r\n  }),\r\n\r\n  /**\r\n   * @method privateconst\r\n   * Create a `private` constant property definition for an object.\r\n   * Example:\r\n   *\r\n   * ```\r\n   * Object.defineProperty(this, 'attr', NGN.privateconst('somevalue'))\r\n   *\r\n   * // Longhand equivalent\r\n   * Object.defineProperty(this, 'attr', {\r\n   *  enumerable: false,\r\n   *  writable: false,\r\n   *  configurable: false,\r\n   *  value: 'somevalue'\r\n   * })\r\n   * ```\r\n   * @param  {any} value\r\n   * Any valid JavaScript value (function, boolean, number, string, etc)\r\n   * used as the value for the object attribute.\r\n   * @private\r\n   */\r\n  privateconst: NGN.define(false, false, false, function (value) {\r\n    return NGN.define(false, false, false, value)\r\n  }),\r\n\r\n  /**\r\n   * @method get\r\n   * Create a private `getter` property definition for an object.\r\n   * Public getters are part of the ES2015 class spec.\r\n   *\r\n   * Example:\r\n   *\r\n   * ```\r\n   * let myFunction = function () {\r\n   *  return 'somevalue'\r\n   * }\r\n   *\r\n   * // Longhand equivalent\r\n   * Object.defineProperty(this, 'attr', {\r\n   *  enumerable: false,\r\n   *  get: function () {\r\n   *    return 'somevalue'\r\n   *  }\r\n   * })\r\n   * ```\r\n   * @param  {function} fn\r\n   * Any valid async JavaScript function with a `return` value.\r\n   * @private\r\n   */\r\n  get: NGN.define(false, false, false, function (fn) {\r\n    return {\r\n      enumerable: false,\r\n      get: fn\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method set\r\n   * Create a private `setter` property definition for an object.\r\n   * Public setters are part of the ES2015 class spec.\r\n   *\r\n   * Example:\r\n   *\r\n   * ```\r\n   * let myFunction = function () {\r\n   *  return 'somevalue'\r\n   * }\r\n   *\r\n   * // Longhand equivalent\r\n   * Object.defineProperty(this, 'attr', {\r\n   *  enumerable: false,\r\n   *  set: function (value) {\r\n   *    somethingElse = value\r\n   *  }\r\n   * })\r\n   * ```\r\n   * @param  {function} fn\r\n   * Any valid JavaScript function that accepts a single argument (value).\r\n   * @private\r\n   */\r\n  set: NGN.define(false, false, false, function (fn) {\r\n    return {\r\n      enumerable: false,\r\n      set: fn\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method getset\r\n   * Create a private property defintion containing both a `getter` and `setter`\r\n   * for the specified attribute.\r\n   * @param  {function} getFn\r\n   * Any valid async JavaScript function with a `return` value.\r\n   * @param  {function} setFn\r\n   * Any valid JavaScript function that accepts a single argument (value).\r\n   * @private\r\n   */\r\n  getset: NGN.define(false, false, false, (getterFn, setterFn) => {\r\n    return {\r\n      enumerable: false,\r\n      get: getterFn,\r\n      set: setterFn\r\n    }\r\n  }),\r\n\r\n  LEDGER_EVENT: NGN.define(false, false, false, (EVENT) => {\r\n    return function () {\r\n      NGN.BUS.emit(EVENT, ...arguments)\r\n    }\r\n  })\r\n})\r\n\r\nObject.defineProperties(NGN, {\r\n  /**\r\n   * @method extend\r\n   * Extend the NGN core object. Extending NGN is the equivalent of:\r\n   *\r\n   * Example:\r\n   * ```\r\n   * NGN.extend('greet', NGN.public(function (recipient) {\r\n   *  return 'Hello, ' + recipient + '!'\r\n   * }))\r\n   *\r\n   * // Equivalent of:\r\n   *\r\n   * Object.defineProperty(NGN, 'greet', {\r\n   *  enumerable: true,\r\n   *  writable: false,\r\n   *  configurable: false,\r\n   *  value: function (recipient) {\r\n   *    return 'Hello, ' + recipient + '!'\r\n   *  }\r\n   * })\r\n   * ```\r\n   * The example above produces a public function available from NGN:\r\n   *\r\n   * ```\r\n   * console.log(NGN.greet('world')) // outputs Hello, world!\r\n   * @param  {string} attribute\r\n   * Name of the attribute to add to the object.\r\n   * @param  {Object} descriptor\r\n   * The object descriptor, i.e.\r\n   * ```\r\n   * {\r\n   *  enumerable: true/false,\r\n   *  writable: true/false,\r\n   *  configurable: true/false,\r\n   *  value: {any}\r\n   * }\r\n   *\r\n   * // OR\r\n   *\r\n   * {\r\n   *  enumerable: true/false,\r\n   *  get: function () { return ... },\r\n   *  set: function (value) { some = value ... }\r\n   * }\r\n   * ```\r\n   * @private\r\n   */\r\n  extend: NGN.privateconst(function (attribute, descriptor) {\r\n    // If no descriptor is provided, multiple properties are being defined.\r\n    if (typeof attribute === 'object') {\r\n      Object.defineProperties(this, attribute)\r\n    } else {\r\n      Object.defineProperty(this, attribute, descriptor)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method inherit\r\n   * Inherit the properties of another object/class.\r\n   * @param  {object|function} source\r\n   * The source object (i.e. what gets copied)\r\n   * @param  {object|function} destination\r\n   * The object properties get copied to.\r\n   */\r\n  inherit: NGN.const(function (source = null, dest = null) {\r\n    if (source && dest) {\r\n      source = typeof source === 'function' ? source.prototype : source\r\n      dest = typeof dest === 'function' ? dest.prototype : dest\r\n\r\n      Object.getOwnPropertyNames(source).forEach(function (attr) {\r\n        const definition = Object.getOwnPropertyDescriptor(source, attr)\r\n        Object.defineProperty(dest, attr, definition)\r\n      })\r\n\r\n      const prototype = Object.getOwnPropertyNames(Object.getPrototypeOf(source)).filter((attr) => {\r\n        return attr.trim().toLowerCase() !== 'constructor' && !dest.hasOwnProperty(attr)\r\n      })\r\n\r\n      prototype.forEach((attr) => {\r\n        const cfg = Object.getOwnPropertyDescriptor(source, attr)\r\n\r\n        if (cfg === undefined && typeof source[attr] === 'function') {\r\n          Object.defineProperty(dest, attr, NGN.public(function () {\r\n            return source[attr].apply(this, arguments)\r\n          }))\r\n        }\r\n      })\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method slice\r\n   * Converts an array-like object to an array.\r\n   *\r\n   * Example:\r\n   * ```\r\n   * function () {\r\n   *  return NGN.slice(arguments)\r\n   * }\r\n   * ```\r\n   * @param  {Object} obj\r\n   * The object to slice into an array.\r\n   * @return {array}\r\n   * @private\r\n   */\r\n  slice: NGN.private(function (obj) {\r\n    return Array.prototype.slice.call(obj)\r\n  }),\r\n\r\n  /**\r\n   * @method splice\r\n   * Converts an array-like object to a spliced array.\r\n   *\r\n   * Example:\r\n   * ```\r\n   * function () {\r\n   *  return NGN.splice(arguments)\r\n   * }\r\n   * ```\r\n   * @param  {Object} obj\r\n   * The object to splice into an array.\r\n   * @return {array}\r\n   * @private\r\n   */\r\n  splice: NGN.private(function (obj) {\r\n    return Array.prototype.splice.call(obj)\r\n  }),\r\n\r\n  /**\r\n   * @method nullIf\r\n   * Returns a null value if the two specified expressions are equal.\r\n   * ```js\r\n   * if (NGN.nullIf(myvar, 'value') === null) {\r\n   *   console.log('Variable had a value of \"value\", which is considered null')\r\n   * }\r\n   *\r\n   * // or\r\n   *\r\n   * if (NGN.nullIf(myvar) === null) {\r\n   *   console.log('Empty variable whose trimmed length is 0')\r\n   * }\r\n   * ```\r\n   * @param {any} sourceExpression\r\n   * The variable or value to check.\r\n   * @param {any} [comparisonExpression = '']\r\n   * The variable or value to compare the source expression against.\r\n   * @return {any}\r\n   * If the source expression matches the comparison expression, `null` will\r\n   * be returned. If they do not match, the source expression will be returned.\r\n   */\r\n  nullIf: NGN.public(function (sourceExpression, comparisonExpression = '') {\r\n    try {\r\n      // If the values aren't equal, make sure it's not due to blank values\r\n      // or hidden characters.\r\n      if (sourceExpression !== comparisonExpression) {\r\n        // Different data types indicate different values.\r\n        if (typeof sourceExpression !== typeof comparisonExpression) {\r\n          return sourceExpression\r\n        }\r\n\r\n        if (typeof sourceExpression === 'string') {\r\n          if (sourceExpression.trim() !== comparisonExpression.trim()) {\r\n            return sourceExpression\r\n          }\r\n        }\r\n      }\r\n\r\n      return null\r\n    } catch (e) {\r\n      return null\r\n    }\r\n  }),\r\n\r\n  // Private alias for nullIf\r\n  nullif: NGN.public(function () {\r\n    return this.nullIf(...arguments)\r\n  }),\r\n\r\n  /**\r\n   * @method converge\r\n   * Provides a basic coalesce. Expects the first parameter to be a boolean\r\n   * value. `true` will wrap arguments in a nullIf operator. `false` will not.\r\n   * @private\r\n   */\r\n  converge: NGN.private(function () {\r\n    if (arguments.length < 2) {\r\n      return null\r\n    } else if (arguments.length === 2) {\r\n      if (arguments[1] === undefined) {\r\n        return null\r\n      } else if (arguments[0]) {\r\n        return NGN.nullIf(arguments[1])\r\n      } else {\r\n        return arguments[1]\r\n      }\r\n    }\r\n\r\n    for (let arg = 1; arg < arguments.length; arg++) {\r\n      // try {\r\n      if (arguments[arg] !== undefined &&\r\n        (\r\n          arguments[0] ? NGN.nullIf(arguments[arg]) : arguments[arg]\r\n        ) !== null\r\n      ) {\r\n        if (arguments[arg] !== undefined) {\r\n          return arguments[arg]\r\n        }\r\n      }\r\n      // } catch (e) {}\r\n    }\r\n\r\n    return null\r\n  }),\r\n\r\n  /**\r\n   * @method coalesce\r\n   * Finds the first non-null/defined value in a list of arguments.\r\n   * This can be used with {@link Boolean Boolean} values, since `true`/`false` is a\r\n   * non-null/defined value.\r\n   * @param {Mixed} args\r\n   * Any number of arguments can be passed to this method.\r\n   * @return {Any}\r\n   * Returns the first non-null/defined value. If non exist, `null` is retutned.\r\n   */\r\n  coalesce: NGN.public(function () {\r\n    return NGN.converge(false, ...arguments)\r\n  }),\r\n\r\n  /**\r\n   * @method coalesceb\r\n   * Provides the same functionality as #coalesce, except **b**lank/empty arguments\r\n   * are treated as `null` values.\r\n   * @param {Mixed} args\r\n   * Any number of arguments can be passed to this method.\r\n   */\r\n  coalesceb: NGN.public(function () {\r\n    return NGN.converge(true, ...arguments)\r\n  }),\r\n\r\n  /**\r\n   * @property {boolean} nodelike\r\n   * Indicates NGN is running in a node-like environment supporting\r\n   * the `require` statement. This will detect node, io.js, Electron,\r\n   * NW.js, and other environments presumably supporting Node.js.\r\n   * @private\r\n   */\r\n  nodelike: NGN.const(NGN.global.process !== undefined),\r\n\r\n  /**\r\n   * @method dedupe\r\n   * Deduplicate a simple array.\r\n   * @param {array} array\r\n   * The array to deduplicate.\r\n   * @return {array}\r\n   * The array with unique records.\r\n   * @private\r\n   */\r\n  dedupe: NGN.const((array) => {\r\n    let matches = []\r\n\r\n    // This is more performant than array.filter in most cases.\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (array.indexOf(array[i]) === i) {\r\n        matches.push(array[i])\r\n      }\r\n    }\r\n\r\n    array = null\r\n\r\n    return matches\r\n  }),\r\n\r\n  /**\r\n   * @method typeof\r\n   * A more specific typeof method.\r\n   * @param  {any} element\r\n   * The element to determine the type of.\r\n   * @return {string}\r\n   * Returns the type (all lower case).\r\n   */\r\n  typeof: NGN.const((el) => {\r\n    if (el === undefined) {\r\n      return 'undefined'\r\n    } else if (el === null) {\r\n      return 'null'\r\n    }\r\n\r\n    let value = Object.prototype.toString.call(el).split(' ')[1].replace(/[^A-Za-z]/gi, '').toLowerCase()\r\n\r\n    if (value === 'function') {\r\n      if (!el.name) {\r\n        return NGN.coalesceb(el.toString().replace(/\\n/gi, '').replace(/^function\\s|\\(.*$/mgi, '').toLowerCase(), 'function')\r\n      } else {\r\n        value = NGN.coalesceb(el.name, 'function')\r\n      }\r\n    }\r\n\r\n    return value.toLowerCase()\r\n  }),\r\n\r\n  /**\r\n   * @method forceArray\r\n   * Forces a value to become an array if it is not already one. For example:\r\n   *\r\n   * ```js\r\n   * let x = 'value'\r\n   *\r\n   * x = NGN.forceArray(x)\r\n   *\r\n   * console.log(x) // Outputs ['value']\r\n   * ```\r\n   * @param {any} expression\r\n   * The value being forced to be an array.\r\n   * @private\r\n   */\r\n  forceArray: NGN.const((value) => {\r\n    if (value === null) {\r\n      return []\r\n    }\r\n\r\n    return NGN.typeof(value) === 'array' ? value : [value]\r\n  }),\r\n\r\n  /**\r\n   * @method forceBoolean\r\n   * Forces a value to become a boolean if it is not already one. For example:\r\n   *\r\n   * ```js\r\n   * let x = NGN.forceBoolean('false') // String ==> Boolean\r\n   * console.log(x) // Outputs false\r\n   *\r\n   * let y = NGN.forceBoolean('text') // String ==> Boolean\r\n   * console.log(y) // Outputs true (any non-blank text results in true, except the word \"false\")\r\n   *\r\n   * let z = NGN.forceBoolean(0) // Number ==> Boolean (0 = false, 1 = true)\r\n   * console.log(z) // Outputs false\r\n   * ```\r\n   *\r\n   * All other types will yield a `true` value, except for `null`. A `null`\r\n   * value is treated as `false`.\r\n   * @param {any} expression\r\n   * The value being forced to be a boolean.\r\n   * @private\r\n   */\r\n  forceBoolean: NGN.const((value) => {\r\n    switch (NGN.typeof(value)) {\r\n      case 'boolean':\r\n        return value\r\n\r\n      case 'number':\r\n        return value === 0 ? false : true // eslint-disable-line no-unneeded-ternary\r\n\r\n      case 'string':\r\n        value = value.trim().toLowerCase()\r\n\r\n        if (value === 'false') {\r\n          return false\r\n        }\r\n\r\n        return true\r\n\r\n      default:\r\n        return NGN.coalesceb(value) !== null\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method forceNumber\r\n   * Forces a value to become a number if it is not already one. For example:\r\n   *\r\n   * ```js\r\n   * let x = NGN.forceNumber('10') // String ==> Number\r\n   * console.log(x === 10) // Outputs true\r\n   *\r\n   * let y = NGN.forceNumber(true) // Boolean ==> Number\r\n   * console.log(y) // Output 1\r\n   *\r\n   * let z = NGN.forceNumber(false) // Boolean ==> Number\r\n   * console.log(y) // Output 0\r\n   * ```\r\n   *\r\n   * All other types will yield a `NaN` value. This has no effect on\r\n   * @param {any} expression\r\n   * The value being forced to be a number. If the expression is a date,\r\n   * the result will be the number of milliseconds passed since the epoch.\r\n   * See [Date.getTime()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime)\r\n   * for details.\r\n   * @param {number} [radix]\r\n   * An integer between 2 and 36 that represents the radix (the base in\r\n   * mathematical numeral systems) of the expression.\r\n   * Specify 10 for the decimal numeral system commonly used by humans.\r\n   * Always specify this parameter to eliminate reader confusion and to\r\n   * guarantee predictable behavior. Different implementations produce\r\n   * different results when a radix is not specified, usually defaulting the\r\n   * value to 10.\r\n   *\r\n   * **If no radix is supplied**, the `parseFloat` will be used to identify\r\n   * the numeric value. When a radix is supplied, `parseInt` is used.\r\n   * @private\r\n   */\r\n  forceNumber: NGN.const((value, radix = null) => {\r\n    try {\r\n      switch (NGN.typeof(value)) {\r\n        case 'boolean':\r\n          return value ? 1 : 0\r\n\r\n        case 'number':\r\n          return value\r\n\r\n        case 'date':\r\n          return value.getTime()\r\n\r\n        case 'string':\r\n          return radix !== null ? parseInt(value, radix) : parseFloat(value)\r\n\r\n        default:\r\n          return NaN\r\n      }\r\n    } catch (e) {\r\n      NGN.ERROR(e)\r\n      return NaN\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method stack\r\n   * Retrieve the stack trace from a specific code location without throwing\r\n   * an exception. Files are always listed from the root. This is the default\r\n   * order in browsers, but the reverse of the normal stack order in node-like\r\n   * environments.\r\n   *\r\n   * For example, the following stack on node shows `_test.js` as the last item\r\n   * in the array. In node-like environments, the `_test.js` would normally be\r\n   * the first item in the stacktrace.\r\n   *\r\n   * ```js\r\n   * [\r\n   *   { path: 'node.js:348:7', file: 'node.js', line: 348, column: 7 },\r\n   *   { path: 'module.js:575:10',\r\n   *     file: 'module.js',\r\n   *     line: 575,\r\n   *     column: 10 },\r\n   *   { path: 'module.js:550:10',\r\n   *     file: 'module.js',\r\n   *     line: 550,\r\n   *     column: 10 },\r\n   *   { path: 'module.js:541:32',\r\n   *     file: 'module.js',\r\n   *     line: 541,\r\n   *     column: 32 },\r\n   *   { path: '/_test.js:8:14', file: '/_test.js', line: 8, column: 14 }\r\n   * ]\r\n   * ```\r\n   *\r\n   * By standardizing the order of the stack trace, it is easier to programmatically\r\n   * identify sources of problems. This method does not prevent developers from\r\n   * accessing a normal stacktrace.\r\n   * @private\r\n   * @returns {array}\r\n   * Returns an array of objects. Each object contains the file, line, column,\r\n   * and path within the stack. For example:\r\n   *\r\n   * ```\r\n   * {\r\n   *   path: 'path/to/file.js:127:14'\r\n   *   file: 'path/to/file.js',\r\n   *   line: 127,\r\n   *   column: 14\r\n   * }\r\n   * ```\r\n   *\r\n   * If a stacktrace is unavailable for any reason, the array will contain a\r\n   * single element like:\r\n   *\r\n   * ```js\r\n   * {\r\n   *   path: 'unknown',\r\n   *   file: 'unknown',\r\n   *   line: 0,\r\n   *   column: 0\r\n   * }\r\n   * ```\r\n   */\r\n  processStackItem: NGN.privateconst(function (item, uri) {\r\n    return item.replace(/at.*\\(|\\)/gi, '')\r\n      .replace(uri, './')\r\n      .replace(/\\/{2,100}/gi, '/')\r\n      .trim().split(':')\r\n  }),\r\n\r\n  stack: NGN.get(function () {\r\n    const originalStack = (new Error).stack.split('\\n') // eslint-disable-line\r\n    let stack = (new Error()).stack.split('\\n') || []\r\n    let fnRegex = /at.*\\(/gi\r\n\r\n    stack = stack.filter((item) => {\r\n      return item.split(':').length > 1\r\n    }).map((item) => {\r\n      let operation = fnRegex.exec(item)\r\n\r\n      if (operation) {\r\n        operation = operation[0].replace(/^at\\s{1,100}|\\s{1,100}\\($/gi, '').replace('<anonymous>', 'console')\r\n      }\r\n\r\n      if (this.nodelike) {\r\n        item = this.processStackItem(item.toString(), process.cwd())\r\n\r\n        return {\r\n          path: item.join(':').replace('./', process.cwd() + '/'),\r\n          // path: item[0].substr(0, item[0].length) + ':' + item[1] + ':' + item[2],\r\n          file: item[0].substr(0, item[0].length),\r\n          line: parseInt(item[1], 10),\r\n          column: parseInt(item[2], 10),\r\n          operation: operation\r\n        }\r\n      } else {\r\n        item = this.processStackItem(item.toString(), window.location.origin)\r\n\r\n        return {\r\n          path: item[0].substr(1, item[0].length - 1) + ':' + item[1] + ':' + item[2],\r\n          file: item[0].substr(1, item[0].length - 1),\r\n          line: parseInt(item[1], 10),\r\n          column: parseInt(item[2], 10),\r\n          operation: operation\r\n        }\r\n      }\r\n    })\r\n\r\n    return stack.length !== 0\r\n      ? (this.nodelike ? stack.reverse() : stack)\r\n      : [{\r\n        path: 'unknown',\r\n        file: 'unknown',\r\n        line: 0,\r\n        column: 0\r\n      }]\r\n  }),\r\n\r\n  /**\r\n   * @method isFn\r\n   * A shortcut method for determining if a variable is a function.\r\n   * This is useful for identifying the existance of callback methods.\r\n   * @param {any} variable\r\n   * The variable to identify as a function.\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  isFn: NGN.privateconst((v) => {\r\n    return typeof v === 'function'\r\n  }),\r\n\r\n  /**\r\n   * @method wrap\r\n   * Executes a **synchronous** method before invoking a standard function.\r\n   * This is primarily designed for displaying warnings, but can also be\r\n   * used for other operations like migration layers.\r\n   * @param {function} preMethod\r\n   * The **synchronous** function to invoke before the class is instantiated. This\r\n   * method receives the same arguments passed to the class.\r\n   * @param {function} method\r\n   * The function to wrap.\r\n   * @return {function}\r\n   * @private\r\n   */\r\n  wrap: NGN.privateconst(function (preFn, fn) {\r\n    return function () {\r\n      preFn(...arguments)\r\n      fn(...arguments)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method wrapClass\r\n   * Executes a **synchronous** method before returning an instantiated class.\r\n   * It runs a function first, then returns the equivalent of\r\n   * `new MyClass(...)`. This is primarily designed for displaying warnings,\r\n   * but can also be used for other operations like migration layers.\r\n   * @param {function} preMethod\r\n   * The **synchronous** method to invoke before the class is instantiated. This\r\n   * method receives the same arguments passed to the class.\r\n   * @param {function} class\r\n   * The class to wrap.\r\n   * @return {Class}\r\n   * @private\r\n   */\r\n  wrapClass: NGN.privateconst(function (preFn, ClassFn) {\r\n    return function () {\r\n      preFn(...arguments)\r\n      return new ClassFn(...arguments)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method deprecate\r\n   * Fires an event (if NGN.BUS is available) or logs a warning indicating the\r\n   * method is deprecated.\r\n   * @param {function} method\r\n   * The method to return/execute.\r\n   * @param {string} [message='The method has been deprecated.']\r\n   * The warning displayed to the user.\r\n   * @return {function}\r\n   * @fires DEPRECATED.METHOD\r\n   * Fires `DEPRECATED.METHOD` on the NGN.BUS. The message is delivered to\r\n   * the event handler.\r\n   */\r\n  deprecate: NGN.privateconst(function (fn, message = 'The method has been deprecated.') {\r\n    return this.wrap(() => NGN.WARN('DEPRECATED.METHOD', message), fn)\r\n  }),\r\n\r\n  /**\r\n   * @method deprecateClass\r\n   * Logs a warning indicating the class is deprecated. This differs from\r\n   * #deprecate by extending & preserving the original class (the resulting\r\n   * class can be used with the `new` operator).\r\n   * @param {function} class\r\n   * The class to return/execute.\r\n   * @param {string} [message='The class has been deprecated.']\r\n   * The warning displayed to the user.\r\n   * @fires DEPRECATED.CLASS\r\n   * Fires `DEPRECATED.CLASS` on the NGN.BUS. The message is delivered to\r\n   * the event handler.\r\n   * @return {Class}\r\n   */\r\n  deprecateClass: NGN.privateconst(function (classFn, message = 'The class has been deprecated.') {\r\n    return this.wrapClass(() => NGN.WARN('DEPRECATED.CLASS', message), classFn)\r\n  }),\r\n\r\n  /**\r\n   * @method needs\r\n   * A method to check for the existance of required attributes in an object.\r\n   * This is designed to check for namespace existance.\r\n   *\r\n   * ```js\r\n   * NGN.needs('DOM','BUS', 'NET', 'JUNK') // Throws an error because \"JUNK\" doesn't exist.\r\n   * ```\r\n   * @param {Object} namespace\r\n   * The object to check.\r\n   * @param {String[]} attributes\r\n   * A list of attributes to check for.\r\n   * @throws {MissingNgnDependencyError}\r\n   * Throws an error if the namespace is missing an attribute dependency.\r\n   * @private\r\n   */\r\n  needs: NGN.private(function () {\r\n    let missing = NGN.getObjectMissingPropertyNames(NGN, ...arguments)\r\n\r\n    if (missing.length === 0) {\r\n      return\r\n    }\r\n\r\n    // Throw an error if there are any missing attributes.\r\n    if (missing.length > 0) {\r\n      throw new MissingNgnDependencyError(`Missing NGN dependencies: ${missing.join(', ')}`.replace(/\\s{2,100}/gi, ' '))\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method getObjectMissingPropertyNames\r\n   * Given a list, returns which list items are not present in an\r\n   * object's enumerable properties.\r\n   *\r\n   * ```js\r\n   * let obj = { a: 1, b: 2 }\r\n   * let missing = NGN.getObjectMissingPropertyNames(obj, 'a', 'b', 'c')\r\n   *\r\n   * console.log(missing) // Outputs ['c']\r\n   * ```\r\n   * @param {Object} object\r\n   * The object to check.\r\n   * @return {String[]}\r\n   * @private\r\n   */\r\n  getObjectMissingPropertyNames: NGN.private(function () {\r\n    let missing = []\r\n    let properties = Object.keys(arguments[0])\r\n\r\n    for (let i = 1; i < arguments.length; i++) {\r\n      if (properties.indexOf(arguments[i]) < 0) {\r\n        missing.push(arguments[i])\r\n      }\r\n    }\r\n\r\n    return missing\r\n  }),\r\n\r\n  /**\r\n   * @method getObjectExtraneousPropertyNames\r\n   * Given a list, returns which enumerable object properties\r\n   * are not in the list.\r\n   *\r\n   * ```js\r\n   * let obj = { a: 1, b: 2, d: 4 }\r\n   * let extra = NGN.getObjectExtraneousPropertyNames(obj, 'a', 'b', 'c')\r\n   *\r\n   * console.log(extra) // Outputs ['d']\r\n   * ```\r\n   * @param {Object} object\r\n   * The object to check.\r\n   * @return {String[]}\r\n   * @private\r\n   */\r\n  getObjectExtraneousPropertyNames: NGN.private(function () {\r\n    let properties = Object.keys(arguments[0])\r\n\r\n    for (let i = 1; i < arguments.length; i++) {\r\n      let index = properties.indexOf(arguments[i])\r\n\r\n      if (index >= 0) {\r\n        properties.splice(index, 1)\r\n      }\r\n    }\r\n\r\n    return properties\r\n  }),\r\n\r\n  /**\r\n   * @method objectHasAll\r\n   * Determines whether the specified object has _all_ of the provided properties.\r\n   * This only accounts for enumerable properties. It also decorates the Boolean\r\n   * result with a property called `properties`, which contains any missing property\r\n   * names.\r\n   *\r\n   * **Example**\r\n   * ```js\r\n   * let check = NGN.objectHasAll(NGN, 'BUS', 'NET')\r\n   *\r\n   * console.log(check) // Outputs: true\r\n   * ```\r\n   *\r\n   * ```js\r\n   * let check = NGN.objectHasAll(NGN, 'BUS', 'NET', 'JUNK')\r\n   *\r\n   * console.log(check) // Outputs: false\r\n   * console.log(check.properties) // Outputs ['JUNK']\r\n   * ```js\r\n   * @param {Object} object\r\n   * The object to check.\r\n   * @return {Boolean}\r\n   */\r\n  objectHasAll: NGN.const(function () {\r\n    let properties = Object.keys(arguments[0])\r\n\r\n    for (let i = 1; i < arguments.length; i++) {\r\n      if (properties.indexOf(arguments[i]) < 0) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }),\r\n\r\n  /**\r\n   * @method objectHasAny\r\n   * Determines whether the specified object has _any_ of the requested properties.\r\n   * This only accounts for enumerable properties.\r\n   *\r\n   * **Example**\r\n   * ```js\r\n   * let check = NGN.objectHasAny(NGN, 'BUS', 'NET', 'MORE')\r\n   *\r\n   * console.log(check) // Outputs: true\r\n   * ```\r\n   *\r\n   * ```js\r\n   * let check = NGN.objectHasAny(NGN, 'JUNK1', 'JUNK2', 'JUNK3')\r\n   *\r\n   * console.log(check) // Outputs: false\r\n   * ```js\r\n   * @param {Object} object\r\n   * The object to check.\r\n   * @return {Boolean}\r\n   */\r\n  objectHasAny: NGN.const(function () {\r\n    let properties = Object.keys(arguments[0])\r\n\r\n    for (let i = 1; i < arguments.length; i++) {\r\n      if (properties.indexOf(arguments[i]) >= 0) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }),\r\n\r\n  /**\r\n   * @method objectHasExactly\r\n   * Determines whether the specified object has _only_ the requested properties.\r\n   * This only accounts for enumerable properties.\r\n   *\r\n   * **Example**\r\n   * ```js\r\n   * let obj = { a: 1, b: 2 }\r\n   * let check = NGN.objectHasExactly(obj, 'a', 'b')\r\n   *\r\n   * console.log(check) // Outputs: true\r\n   * ```\r\n   *\r\n   * ```js\r\n   * let obj = { a: 1, b: 2, d: 4 }\r\n   * let check = NGN.objectHasExactly(obj, 'a', 'b', 'c')\r\n   *\r\n   * console.log(check) // Outputs: false\r\n   * ```js\r\n   * @param {Object} object\r\n   * The object to check.\r\n   * @return {Boolean}\r\n   */\r\n  objectHasExactly: NGN.const(function () {\r\n    // If there are missing properties, it's not an exact match.\r\n    if (this.getObjectMissingPropertyNames(arguments[0]).length !== 0) {\r\n      return false\r\n    }\r\n\r\n    let properties = Object.keys(arguments[0])\r\n    let args = NGN.slice(arguments)\r\n\r\n    args.shift()\r\n\r\n    // Check for extra properties on the object\r\n    for (let i = 0; i < properties.length; i++) {\r\n      if (args.indexOf(properties[i]) < 0) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    // Make sure there are enough properties.\r\n    for (let i = 0; i < args.length; i++) {\r\n      if (properties.indexOf(args[i]) < 0) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }),\r\n\r\n  /**\r\n   * @method objectRequires\r\n   * This is the same as #objectHasAll, but will throw an\r\n   * error if the object is missing any properties.\r\n   * @throws Error\r\n   */\r\n  objectRequires: NGN.const(function () {\r\n    let check = this.objectHasAll(...arguments)\r\n\r\n    if (!check) {\r\n      throw new Error(`${arguments[0].constructor.name} is missing the following attributes: ${check.missing.join(', ')}`)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method createAlias\r\n   * A helper method to alias a value on an object. This is the equivalent of:\r\n   * ```js\r\n   * Object.defineProperty(namespace, name, NGN.get(() => {\r\n   *   return value\r\n   * }))\r\n   * ```\r\n   * @param  {Object} namespace\r\n   * The object to apply the alias property to.\r\n   * @param  {String} name\r\n   * The alias name.\r\n   * @param  {Any} value\r\n   * The value to return.\r\n   * @private\r\n   */\r\n  createAlias: NGN.private(function (namespace, name, value) {\r\n    Object.defineProperty(namespace, name, NGN.get(() => {\r\n      return value\r\n    }))\r\n  }),\r\n\r\n  /**\r\n   * @method WARN\r\n   * This method is used to emit special info events.\r\n   * The NGN.BUS can listen for all events using the NGN.WARN global symbol.\r\n   *\r\n   * ```js\r\n   * NGN.BUS.on(NGN.WARNING_EVENT, function () => {\r\n   *   console.warn(...arguments)\r\n   * })\r\n   * ```\r\n   *\r\n   * See NGN.EventEmitter#emit for detailed parameter usage.\r\n   * @private\r\n   */\r\n  WARNING_EVENT: NGN.privateconst(Symbol('NGN.WARN')),\r\n  WARN: NGN.privateconst(msg => NGN.LEDGER_EVENT(NGN.WARNING_EVENT)(msg)),\r\n\r\n  /**\r\n   * @method INFO\r\n   * This method is used to emit special warning events.\r\n   * The NGN.BUS can listen for all events using the NGN.INFO global symbol.\r\n   *\r\n   * ```js\r\n   * NGN.BUS.on(NGN.INFO_EVENT, function () => {\r\n   *   console.info(...arguments)\r\n   * })\r\n   * ```\r\n   *\r\n   * See NGN.EventEmitter#emit for detailed parameter usage.\r\n   * @private\r\n   */\r\n  INFO_EVENT: NGN.privateconst(Symbol.for('NGN.INFO')),\r\n  INFO: NGN.privateconst(msg => NGN.LEDGER_EVENT(NGN.INFO_EVENT)(msg)),\r\n\r\n  /**\r\n   * @method ERROR\r\n   * This method is used to emit special soft error events. A soft error\r\n   * is one that does not throw, but does get logged (typically non-critical).\r\n   * The NGN.BUS can listen for all events using the NGN.ERROR global symbol.\r\n   *\r\n   * ```js\r\n   * NGN.BUS.on(NGN.ERROR_EVENT, function () => {\r\n   *   console.info(...arguments)\r\n   * })\r\n   * ```\r\n   *\r\n   * See NGN.EventEmitter#emit for detailed parameter usage.\r\n   * @private\r\n   */\r\n  ERROR_EVENT: NGN.privateconst(Symbol.for('NGN.ERROR')),\r\n  ERROR: NGN.privateconst(msg => NGN.LEDGER_EVENT(NGN.ERROR_EVENT)(msg)),\r\n\r\n  /**\r\n   * @method createException\r\n   * Create a custom global exception (custom error).\r\n   * @param {Object} config\r\n   * The configuration of the new error.\r\n   * @param {String} [config.name=NgnError]\r\n   * The pretty name of the exception. Alphanumeric characters only (underscore is acceptable).\r\n   * @param {String} [config.type=TypeError]\r\n   * The type of error. This is commonly `TypeError` or `ReferenceError`, but\r\n   * it can be any custom value.\r\n   * @param {String} [config.severity=minor]\r\n   * A descriptive \"level\" indicating how critical the error is.\r\n   * @param {String} [config.message=Unknown Error]\r\n   * The default message to output when none is specified.\r\n   * @param {Object} [config.custom]\r\n   * Provide a key/value object of custom attributes for the error.\r\n   * There are two \"special\" custom attributes: `help` and `cause`.\r\n   * When provided, these will be written to stdout whenever the error's\r\n   * stack is viewed.\r\n   *\r\n   * For example:\r\n   *\r\n   * ```js\r\n   * NGN.createException({\r\n   *   name: 'Test Problem',\r\n   *   message: 'An example error.',\r\n   *   custom: {\r\n   *     help: 'Remove the throw statement.',\r\n   *     cause: 'Testing the error output.'\r\n   *   }\r\n   * });\r\n   *\r\n   * throw TestProblem()\r\n   * ```\r\n   * The code above generates the following console output:\r\n   *\r\n   * ```sh\r\n   * Testing the error output.\r\n   * Remove the throw statement.\r\n   * /path/to/test.js:12\r\n   *    throw TestProblem();\r\n   *    ^\r\n   *\r\n   * TestProblem: An example error.\r\n   *    at null._onTimeout (/path/to/test.js:12:11)\r\n   *    at Timer.listOnTimeout (timers.js:92:15)\r\n   * ```\r\n   */\r\n  createException: NGN.const(function (config) {\r\n    config = config || {}\r\n    config = typeof config === 'string' ? { message: config } : config\r\n    config.name = config.name || 'NgnError'\r\n\r\n    // Create the error as a function\r\n    NGN.global[config.name] = function () {\r\n      if (arguments.length > 0) {\r\n        config.message = arguments[0]\r\n      }\r\n\r\n      return new CustomException(config)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * @method getType\r\n   * Returns the primitive object/function of the specified type.\r\n   * For example:\r\n   *\r\n   * ```js\r\n   * let type = NGN.getType('number') // Returns Number\r\n   * let type = NGN.getType('string') // Returns String\r\n   * ```\r\n   */\r\n  getType: NGN.const(function (type, defaultType) {\r\n    switch (type.trim().toLowerCase()) {\r\n      case 'number':\r\n        return Number\r\n\r\n      case 'regex':\r\n        NGN.WARN('regex is not a valid JavaScript type. Using regexp instead.')\r\n\r\n      case 'regexp': // eslint-disable-line no-fallthrough\r\n        return RegExp\r\n\r\n      case 'boolean':\r\n        return Boolean\r\n\r\n      case 'symbol':\r\n        return Symbol\r\n\r\n      case 'date':\r\n        return Date\r\n\r\n      case 'array':\r\n        return Array\r\n\r\n      case 'object':\r\n        return Object\r\n\r\n      case 'function':\r\n        return Function\r\n\r\n      case 'string':\r\n        return String\r\n\r\n      default:\r\n        if (defaultType) {\r\n          return defaultType\r\n        }\r\n\r\n        return undefined\r\n    }\r\n  })\r\n})\r\n\r\n// Standard NGN Exceptions\r\nNGN.createException({\r\n  name: 'MissingNgnDependencyError',\r\n  type: 'MissingNgnDependencyError',\r\n  severity: 'critical',\r\n  message: 'An NGN dependency is missing or could not be found.',\r\n  category: 'programmer',\r\n  custom: {\r\n    help: 'Include the missing library.',\r\n    cause: 'A required dependency was not included, or it was not included in the correct sequence.'\r\n  }\r\n})\r\n\r\nNGN.createException({\r\n  name: 'ReservedWordError',\r\n  type: 'ReservedWordError',\r\n  severity: 'critical',\r\n  message: 'An attempt to use a reserved word failed.',\r\n  category: 'programmer',\r\n  custom: {\r\n    help: 'Use an alternative word.',\r\n    cause: 'A word was used to define an attribute, method, field, or other element that already exists.'\r\n  }\r\n})\r\n\r\nNGN.createException({\r\n  name: 'InvalidConfigurationError',\r\n  type: 'InvalidConfigurationError',\r\n  severity: 'critical',\r\n  message: 'Invalid configuration.',\r\n  category: 'programmer',\r\n  custom: {\r\n    help: 'See the documentation for the proper configuration.',\r\n    cause: 'The configuration specified was marked as invalid or caused an error during instantiation.'\r\n  }\r\n})\r\n\r\n// Self reference to make NGN global in any environment.\r\nNGN.global.NGN = NGN\r\n\r\nexport { NGN as default }\r\n","/**\r\n * @class EventEmitterBase\r\n * This is an extendable generic class used to apply event management\r\n * to non-DOM objects, such as data models, logging, and other common\r\n * elements of JavaScript programming.\r\n * @protected\r\n */\r\nexport default class BrowserEmitter { // eslint-disable-line no-unused-vars\r\n  /**\r\n   * @constructor\r\n   * ```\r\n   * let EE = new EventEmitter()\r\n   * ```\r\n   * This is a protected class. It is most commonly instantiated through\r\n   * the NGN namespace (i.e. `new NGN.EventEmitter()`). However; it is\r\n   * designed for use within the NGN library, not directly as an event emitter.\r\n   * Use with caution.\r\n   */\r\n  constructor (cfg) {\r\n    cfg = cfg || {}\r\n\r\n    Object.defineProperties(this, {\r\n      handlers: NGN.private({}),\r\n      adhoc: NGN.private({}),\r\n      maxlisteners: NGN.private(cfg.defaultMaxListeners || 25)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @property {object} subscribers\r\n   * An array of all subscribers which currently have a registered event handler.\r\n   * @warning This is a UI-only method.\r\n   */\r\n  get subscribers () {\r\n    let subscriberList = {}\r\n\r\n    for (let eventName in this.handlers) {\r\n      subscriberList[eventName] = {\r\n        handler: this.handlers[eventName].length,\r\n        adhoc: 0\r\n      }\r\n    }\r\n\r\n    for (let eventName in this.adhoc) {\r\n      subscriberList[eventName] = subscriberList[eventName] || {\r\n        handler: 0\r\n      }\r\n\r\n      subscriberList[eventName].adhoc = this.adhoc[eventName].length\r\n    }\r\n\r\n    return subscriberList\r\n  }\r\n\r\n  /**\r\n   * @property defaultMaxListeners\r\n   * The maximum number of listeners for a single event.\r\n   */\r\n  get defaultMaxListeners () {\r\n    return this.maxlisteners\r\n  }\r\n\r\n  set defaultMaxListeners (value) {\r\n    this.maxlisteners = value\r\n  }\r\n\r\n  /**\r\n   * @method {number} listenerCount\r\n   * The number of listeners for a specific event.\r\n   * @param {string} eventName\r\n   * The name of the event to count listeners for.\r\n   */\r\n  listenerCount (eventName) {\r\n    return (this.handlers[eventName] || []).length +\r\n      (this.adhoc[eventName] || []).length\r\n  }\r\n\r\n  /**\r\n   * @method getMaxListeners\r\n   * A node-like reference to the #defaultMaxListeners value.\r\n   * @return {number}\r\n   */\r\n  getMaxListeners () {\r\n    return this.defaultMaxListeners\r\n  }\r\n\r\n  /**\r\n   * @method setMaxListeners\r\n   * A node-like reference to the #defaultMaxListeners value (setter).\r\n   */\r\n  setMaxListeners (value) {\r\n    this.defaultMaxListeners = value\r\n  }\r\n\r\n  /**\r\n   * @method eventNames\r\n   * A node-like reference providing an array of recognized event names.\r\n   * @return {array}\r\n   */\r\n  eventNames () {\r\n    let handlers = Object.keys(this.handlers)\r\n    let adhoc = Object.keys(this.adhoc)\r\n    return NGN.dedupe(handlers.concat(adhoc))\r\n  }\r\n\r\n  /**\r\n   * @method listeners\r\n   * Returns the raw listener methods for the event.\r\n   * @param {string} eventName\r\n   * Name of the event to retrieve listeners for.\r\n   * @return {array}\r\n   */\r\n  listeners (eventName) {\r\n    let handlers = this.handlers[eventName] || []\r\n    let adhoc = this.adhoc[eventName] || []\r\n    return handlers.concat(adhoc)\r\n  }\r\n\r\n  /**\r\n   * @method addListener\r\n   * Create a new event handler for the specified event.\r\n   * @param  {string|object} eventName\r\n   * Name of the event to listen for.\r\n   * If an object is passed, this method will automatically setup a #pool.\r\n   * @param  {Function} handler\r\n   * The method responsible for responding to the event.\r\n   * This is ignored if eventName is an object.\r\n   */\r\n  addListener (eventName, callback) {\r\n    if (typeof eventName === 'object') {\r\n      return this.pool(eventName)\r\n    }\r\n\r\n    this.handlers[eventName] = this.handlers[eventName] || []\r\n    this.handlers[eventName].unshift(callback)\r\n    this.emit('newListener', eventName, callback)\r\n\r\n    if (this.listenerCount(eventName) > this.maxlisteners) {\r\n      throw new Error('Maximum event listeners exceeded. Use setMaxListeners() to adjust the level.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method prependListener\r\n   * This is the same as #addListener, except the event handler is added to the end of the queue.\r\n   * @param  {string|object} eventName\r\n   * Name of the event to listen for.\r\n   * If an object is passed, this method will automatically setup a #pool.\r\n   * @param  {Function} handler\r\n   * The method responsible for responding to the event.\r\n   * This is ignored if eventName is an object.\r\n   */\r\n  prependListener (eventName, callback) {\r\n    if (typeof eventName === 'object') {\r\n      return this.pool(eventName)\r\n    }\r\n\r\n    this.handlers[eventName] = this.handlers[eventName] || []\r\n    this.handlers[eventName].push(callback)\r\n    this.emit('newListener', eventName, callback)\r\n\r\n    if (this.listenerCount(eventName) > this.maxlisteners) {\r\n      throw new Error('Maximum event listeners exceeded. Use setMaxListeners() to adjust the level.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method onceListener\r\n   * Create a new event handler for the specified event. The\r\n   * handler will be removed immediately after it is executed. This\r\n   * effectively listens for an event to happen once and only once\r\n   * before the handler is destroyed.\r\n   * @param  {string} eventName\r\n   * Name of the event to listen for.\r\n   * @param  {Function} handler\r\n   * The method responsible for responding to the event.\r\n   */\r\n  once (eventName, callback) {\r\n    this.adhoc[eventName] = this.adhoc[eventName] || []\r\n    this.adhoc[eventName].push(callback)\r\n    this.emit('newListener', eventName, callback)\r\n\r\n    if (this.listenerCount(eventName) > this.maxlisteners) {\r\n      throw new Error('Maximum event listeners exceeded. Use setMaxListeners() to adjust the level.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method prependOnceListener\r\n   * A node-like reference to the #once method, adding events to the\r\n   * beginning of the event list (processed before others) instead of the end.\r\n   * @param  {string} eventName\r\n   * Name of the event to listen for.\r\n   * @param  {Function} handler\r\n   * The method responsible for responding to the event.\r\n   */\r\n  prependOnceListener (eventName, callback) {\r\n    this.adhoc[eventName] = this.adhoc[eventName] || []\r\n    this.adhoc[eventName].unshift(callback)\r\n    this.emit('newListener', eventName, callback)\r\n\r\n    if (this.listenerCount(eventName) > this.maxlisteners) {\r\n      throw new Error('Maximum event listeners exceeded. Use setMaxListeners() to adjust the level.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method removeListener\r\n   * Remove an event handler. If no handler is specified, all handlers for\r\n   * the specified event will be removed.\r\n   * @param {string} eventName\r\n   * Name of the event to remove.\r\n   * @param {function} [handlerFn]\r\n   * The handler function to remove from the event handlers.\r\n   */\r\n  removeListener (eventName, handlerFn) {\r\n    this.deleteEventHandler('handlers', eventName, handlerFn)\r\n    this.deleteEventHandler('adhoc', eventName, handlerFn)\r\n  }\r\n\r\n  /**\r\n   * @method deleteEventHandler\r\n   * Remove a specific event handler.\r\n   * @param {string} type\r\n   * Either `handler` (multi-use events) or `adhoc` (one-time events)\r\n   * @param {string} eventName\r\n   * Name of the event to remove.\r\n   * @param {function} handlerFn\r\n   * The handler function to remove from the event handlers.\r\n   * @private\r\n   */\r\n  deleteEventHandler (type, eventName, handlerFn) {\r\n    let scope = this[type]\r\n\r\n    if (scope[eventName]) {\r\n      if (!handlerFn) {\r\n        delete scope[eventName]\r\n        return\r\n      }\r\n\r\n      let result = []\r\n      scope[eventName].forEach((handler) => {\r\n        if (handler.toString() !== handlerFn.toString()) {\r\n          result.push(handler)\r\n        }\r\n      })\r\n\r\n      if (result.length === 0) {\r\n        delete scope[eventName]\r\n        return\r\n      }\r\n\r\n      scope[eventName] = result\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method removeAllListeners\r\n   * Remove all event handlers from the EventEmitter (both regular and adhoc).\r\n   */\r\n  removeAllListeners (eventName = null) {\r\n    if (eventName !== null) {\r\n      delete this.handlers[eventName]\r\n      delete this.adhoc[eventName]\r\n    } else {\r\n      this.handlers = {}\r\n      this.adhoc = {}\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method emit\r\n   * Fires an event. This method accepts one or more arguments. The\r\n   * first argument is always the event name, followed by any number\r\n   * of payload arguments.\r\n   *\r\n   * Example:\r\n   * ```\r\n   * const EE = new NGN.EventEmitter()\r\n   *\r\n   * EE.emit('someevent', {payload: 1}, {payload: 2})\r\n   * ```\r\n   * The example above triggers an event called `someevent` and applies\r\n   * the remaining two arguments to any event handlers.\r\n   * @param {string} eventName\r\n   * The name of the event to trigger.\r\n   */\r\n  emit () {\r\n    let args = NGN.slice(arguments)\r\n    const eventName = args.shift()\r\n    const events = this.getAllEvents(eventName)\r\n\r\n    if (typeof eventName === 'symbol') {\r\n      events.push(eventName)\r\n    }\r\n\r\n    let scope = {\r\n      event: eventName\r\n    }\r\n\r\n    for (let name = 0; name < events.length; name++) {\r\n      let adhocEvent = this.adhoc[events[name]]\r\n\r\n      // Adhoc event handling\r\n      if (adhocEvent) {\r\n        delete this.adhoc[events[name]]\r\n\r\n        while (adhocEvent.length > 0) {\r\n          let fn = adhocEvent.pop()\r\n\r\n          scope.handler = fn\r\n\r\n          fn.apply(scope, args)\r\n        }\r\n      }\r\n\r\n      // Regular event handling\r\n      let handler = this.handlers[events[name]]\r\n\r\n      if (handler) {\r\n        for (let fn = 0; fn < handler.length; fn++) {\r\n          scope.handler = handler[fn]\r\n          handler[fn].apply(scope, args)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method getAllEvents\r\n   * Returns all of the events that match an event name. The event name\r\n   * may contain wildcards (i.e. `*`) or it can be a regular expression.\r\n   * @param  {string|regexp} eventName\r\n   * A string or regular expression defining which event names to identify.\r\n   * A string value containing an asterisk (*) will be converted to a regular\r\n   * expression for simplistic wildcard event handling purposes.\r\n   * @return {array}\r\n   * An array of unique event names with handlers or adhoc handlers.\r\n   * @private\r\n   */\r\n  getAllEvents (eventName) {\r\n    const regularEvents = Object.keys(this.handlers)\r\n    const adhocEvents = Object.keys(this.adhoc)\r\n    let allEvents = NGN.dedupe(regularEvents.concat(adhocEvents))\r\n\r\n    allEvents = allEvents.filter(function (event) {\r\n      // If the event is an exact match, don't filter it out.\r\n      if (event === eventName) {\r\n        return true\r\n      }\r\n\r\n      // If the event is a regexp/wildcard, further processing is necessary.\r\n      if (NGN.typeof(event) === 'regexp' || event.indexOf('*') >= 0) {\r\n        // Convert wildcard events to a regular expression.\r\n        if (NGN.typeof(event) !== 'regexp') {\r\n          event = new RegExp(event.replace(/\\./g, '\\\\.').replace(/\\*/g, '.*'), 'g')\r\n        }\r\n        // If the event name matches the event, keep it.\r\n        return event.test(eventName)\r\n      }\r\n\r\n      // None of the criteria were met. Ignore the event.\r\n      return false\r\n    })\r\n\r\n    return allEvents\r\n  }\r\n}\r\n","// This chunk of awful is courtesy the StandardJS library!\r\n// We love the lib, except for its failure to allow disabling\r\n// a parsing error's OUTPUT.\r\n/* browser-only */\r\nimport EE from './BrowserEmitter'\r\n/* end-browser-only */\r\nlet EEmitter\r\n/* node-only */\r\nEEmitter = require('events').EventEmitter\r\n/* end-node-only */\r\n/* browser-only */\r\nEEmitter = EE\r\n/* end-browser-only */\r\n\r\n/**\r\n * @class NGN.EventEmitter\r\n * The EventEmitter is an extandable event driver non-DOM objects, such as\r\n * data models, objects, and other common elements of JavaScript programming.\r\n *\r\n * The NGN.EventEmitter is based on and compatible with the [Node.js EventEmitter](https://nodejs.org/dist/latest/docs/api/events.html#events_class_eventemitter).\r\n * It contains additional event management capabilities, which are available\r\n * in browser _and_ Node.js environments.\r\n */\r\nexport default class EventEmitter extends EEmitter {\r\n  constructor () {\r\n    super()\r\n\r\n    // const INSTANCE = Symbol('instance')\r\n\r\n    Object.defineProperties(this, {\r\n      // META: NGN.get(() => this[INSTANCE]),\r\n\r\n      META: NGN.private({\r\n        queued: {},\r\n        collectionQueue: {},\r\n        thresholdQueue: {},\r\n        defaultTTL: -1,\r\n        wildcardEvents: new Set()\r\n      }),\r\n\r\n      /**\r\n       * @method setTTL\r\n       * Set a default time-to-live for event handlers (in milliseconds).\r\n       * After the TTL period elapses, event handlers are removed.\r\n       * By default, there is no TTL (`-1`).\r\n       * @param {number} ttl\r\n       * The number of milliseconds before an event handler is automatically\r\n       * removed. This value may be `-1` (no TTL/never expires) or a value\r\n       * greater than `0`.\r\n       */\r\n      setTTL: NGN.const((ttl = -1) => {\r\n        if (ttl === 0) {\r\n          NGN.WARN('NGN.EventEmitter#TTL cannot be 0.')\r\n          return\r\n        }\r\n\r\n        this.META.defaultTTL = ttl\r\n      }),\r\n\r\n      /**\r\n       * @alias off\r\n       * Remove an event handler. If no handler is specified, all handlers for\r\n       * the specified event will be removed.\r\n       * This is a shortcut for #removeListener.\r\n       * @param {string} eventName\r\n       * Name of the event to remove.\r\n       * @param {function} [handlerFn]\r\n       * The handler function to remove from the event handlers.\r\n       */\r\n      off: NGN.public((eventName, handlerFn) => {\r\n        if (NGN.typeof(eventName) === 'array') {\r\n          for (let i = 0; i < eventName.length; i++) {\r\n            this.off(eventName[i], handlerFn)\r\n          }\r\n\r\n          return\r\n        }\r\n\r\n        let l = this.listeners(eventName)\r\n\r\n        if (!NGN.isFn(handlerFn)) {\r\n          return this.clear(eventName)\r\n        }\r\n\r\n        let wrappedHandlerFn = this.wrapEventHandlerWithScope(eventName, handlerFn)\r\n\r\n        if (l.indexOf(wrappedHandlerFn) < 0) {\r\n          for (let i = 0; i < l.length; i++) {\r\n            if (l[i].toString() === wrappedHandlerFn.toString()) {\r\n              this.META.wildcardEvents.delete(eventName)\r\n              // this.removeListener(eventName, handlerFn)\r\n              this.removeListener(eventName, l[i], false)\r\n              break\r\n            }\r\n          }\r\n        } else {\r\n          this.META.wildcardEvents.delete(eventName)\r\n          this.removeListener(eventName, handlerFn)\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * @method deprecate\r\n       * Provides a deprecation notice for the specified event.\r\n       * Automatically emits the appropriate \"replacement\" event\r\n       * if a replacement event is configured. If no replacement\r\n       * event is configured, the deprecation notice will be written\r\n       * to the console but no replacement event will be triggered.\r\n       * @param {string} deprecatedEventName\r\n       * The name of the deprecated event.\r\n       * @param {string} [replacementEventName]\r\n       * The name of the new event.\r\n       */\r\n      deprecate: NGN.const((deprecatedEventName, replacementEventName) => {\r\n        const me = this\r\n\r\n        this.on(deprecatedEventName, function () {\r\n          NGN.WARN(`${deprecatedEventName} is deprecated. ` + (!replacementEventName ? '' : `Use ${replacementEventName} instead.`))\r\n\r\n          if (replacementEventName) {\r\n            let args = NGN.slice(arguments)\r\n\r\n            args.shift()\r\n            args.unshift(replacementEventName)\r\n\r\n            me.emit.apply(me, args)\r\n          }\r\n        })\r\n      }),\r\n\r\n      /**\r\n       * @method pool\r\n       * A helper command to create multiple related subscribers\r\n       * all at once. This is a convenience function.\r\n       * @property {string} [prefix]\r\n       * Supply a prefix to be added to every event. For example,\r\n       * `myScope.` would turn `someEvent` into `myScope.someEvent`.\r\n       * @property {Object} subscriberObject\r\n       * A key:value object where the key is the name of the\r\n       * unprefixed event and the key is the handler function.\r\n       * A value can be an object, allowing for nesting events. For example:\r\n       *\r\n       * ```js\r\n       * NGN.BUS.pool('prefix.', {\r\n       *   deep: {\r\n       *     nested: {\r\n       *       eventName: function () {\r\n       *         console.log('event triggered')\r\n       *       }\r\n       *     }\r\n       *   }\r\n       * })\r\n       *\r\n       * NGN.BUS.emit('prefix.deep.nested.eventName') // <-- Outputs \"event triggered\"\r\n       * ```\r\n       * @private\r\n       */\r\n      pool: NGN.privateconst(function (prefix, group) {\r\n        if (typeof prefix !== 'string') {\r\n          group = prefix\r\n          prefix = ''\r\n        }\r\n\r\n        let pool = {}\r\n\r\n        for (let eventName in group) {\r\n          let topic = `${NGN.coalesce(prefix, '')}${eventName}`\r\n\r\n          if (NGN.isFn(group[eventName])) {\r\n            this.increaseMaxListeners()\r\n\r\n            pool[eventName] = this.on(topic, group[eventName])\r\n          } else if (typeof group[eventName] === 'object') {\r\n            this.pool(`${topic}.`, group[eventName])\r\n          } else {\r\n            NGN.WARN(`${topic} could not be pooled in the event emitter because it's value is not a function.`)\r\n          }\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * @method attach\r\n       * Attach a function to a topic. This can be used\r\n       * to forward events in response to asynchronous functions.\r\n       *\r\n       * For example:\r\n       *\r\n       * ```js\r\n       * myAsyncDataFetch(NGN.BUS.attach('topicName'))\r\n       * ```\r\n       *\r\n       * This is the same as:\r\n       *\r\n       * ```js\r\n       * myAsyncCall(function(data){\r\n       *  NGN.BUS.emit('topicName', data)\r\n       * })\r\n       * ```\r\n       * @param {string} eventName\r\n       * The name of the event to attach a handler method to.\r\n       * @param {boolean} [preventDefaultAction=false]\r\n       * Setting this to `true` will execute a `event.preventDefault()` before\r\n       * attaching the handler.\r\n       * @returns {function}\r\n       * Returns a function that will automatically be associated with an event.\r\n       */\r\n      attach: NGN.const(function (eventName, preventDefaultAction) {\r\n        preventDefaultAction = NGN.coalesce(preventDefaultAction, false)\r\n\r\n        return (e) => {\r\n          if (preventDefaultAction && !NGN.nodelike) {\r\n            e.preventDefault()\r\n          }\r\n\r\n          this.emit(eventName, ...arguments)\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * @method increaseMaxListeners\r\n       * Increase the number of maximum listeners.\r\n       * @param {Number} [value = 1]\r\n       * The number of events the max listener account will be increased by.\r\n       * @private\r\n       */\r\n      increaseMaxListeners: NGN.private((count = 1) => {\r\n        this.setMaxListeners(this.getMaxListeners() + count)\r\n      }),\r\n\r\n      /**\r\n       * @method decreaseMaxListeners\r\n       * Decrease the number of maximum listeners.\r\n       * @param {Number} [value = 1]\r\n       * The number of events the max listener account will be decreased by.\r\n       * @private\r\n       */\r\n      decreaseMaxListeners: NGN.private((count = 1) => {\r\n        this.setMaxListeners(this.getMaxListeners() - count)\r\n      }),\r\n\r\n      /**\r\n       * @method forward\r\n       * A special subscriber that fires one or more event in response to\r\n       * to an event. This is used to bubble events up/down an event chain.\r\n       *\r\n       * For example:\r\n       *\r\n       * ```js\r\n       * NGN.BUS.forward('sourceEvent', ['someEvent','anotherEvent'], {payload:true})\r\n       * ```\r\n       * When `sourceEvent` is published, the bind method triggers `someEvent` and\r\n       * `anotherEvent`, passing the payload object to `someEvent` and\r\n       * `anotherEvent` subscribers simultaneously.\r\n       *\r\n       * To forward an event to another EventEmitter, see #relay.\r\n       * @param {String} sourceEvent\r\n       * The event to subscribe to.\r\n       * @param {String|Array} triggeredEvent\r\n       * An event or array of events to fire in response to the sourceEvent.\r\n       * @param {any} data\r\n       * Optional data to pass to each bound event handler.\r\n       * @returns {Object}\r\n       * Returns an object with a single `remove()` method.\r\n       */\r\n      forward: NGN.const(function (eventName, triggers, payload) {\r\n        triggers = NGN.forceArray(triggers)\r\n\r\n        let me = this\r\n        let listener = function () {\r\n          let args = NGN.slice(arguments)\r\n\r\n          if (payload) {\r\n            args.push(payload)\r\n          }\r\n\r\n          me.emit(triggers, ...args)\r\n        }\r\n\r\n        this.increaseMaxListeners()\r\n        this.on(eventName, listener)\r\n\r\n        // Provide handle back for removal of topic\r\n        return {\r\n          remove: () => {\r\n            this.decreaseMaxListeners()\r\n            this.off(eventName, listener)\r\n          }\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * This relays an entire event to a different event emitter.\r\n       * For example:\r\n       *\r\n       * ```js\r\n       * let emitterA = new NGN.EventEmitter()\r\n       * let emitterB = new NGN.EventEmitter()\r\n       *\r\n       * emitterA.relay('my.event', emitterB)\r\n       *\r\n       * emitterB.on('my.event', () => { console.log('Emitter B heard the event!') })\r\n       *\r\n       * emitterA.emit('my.event') // Outputs \"Emitter B heard the event!\"\r\n       * ```\r\n       * @param  {string} eventName\r\n       * The name of the event to listen for.\r\n       * @param  {NGN.EventEmitter} targetEmitter\r\n       * The emitter to relay the event to.\r\n       * @param {string} [prefix]\r\n       * An optional prefix to prepend to the eventName.\r\n       * @param {string} [postfix]\r\n       * An optional postfix to append to the eventName.\r\n       */\r\n      relay: NGN.const(function (eventName, targetEmitter, prefix = null, postfix = null) {\r\n        let eventNameList = NGN.forceArray(eventName)\r\n\r\n        for (let i = 0; i < eventNameList.length; i++) {\r\n          let eventName = eventNameList[i]\r\n\r\n          this.on(eventName, function () {\r\n            if (NGN.typeof(this.event) === 'symbol') {\r\n              if (prefix !== null || postfix !== null) {\r\n                NGN.INFO('Cannot relay a symbol-based event with a prefix/postfix.')\r\n              }\r\n\r\n              targetEmitter.emit(...arguments)\r\n            } else {\r\n              targetEmitter.emit(`${NGN.coalesce(prefix, '')}${this.event}${NGN.coalesce(postfix, '')}`, ...arguments)\r\n            }\r\n          })\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * This relays an entire event to a different event emitter. This is\r\n       * the same as #relay, but the event handler is removed after the\r\n       * first invocation of the event.\r\n       *\r\n       * For example:\r\n       *\r\n       * ```js\r\n       * let emitterA = new NGN.EventEmitter()\r\n       * let emitterB = new NGN.EventEmitter()\r\n       *\r\n       * emitterA.relayOnce('my.event', emitterB)\r\n       *\r\n       * emitterB.on('my.event', () => { console.log('Emitter B heard the event!') })\r\n       *\r\n       * emitterA.emit('my.event') // Outputs \"Emitter B heard the event!\"\r\n       * emitterA.emit('my.event') // Does nothing\r\n       * ```\r\n       * @param  {string} eventName\r\n       * The name of the event to listen for.\r\n       * @param  {NGN.EventEmitter} targetEmitter\r\n       * The emitter to relay the event to.\r\n       * @param {string} [prefix]\r\n       * An optional prefix to prepend to the eventName.\r\n       * @param {string} [postfix]\r\n       * An optional postfix to append to the eventName.\r\n       */\r\n      relayOnce: NGN.const(function (eventName, targetEmitter, prefix = null, postfix = null) {\r\n        let eventNameList = NGN.forceArray(eventName)\r\n\r\n        for (let i = 0; i < eventNameList.length; i++) {\r\n          let eventName = eventNameList[i]\r\n\r\n          this.once(eventName, function () {\r\n            if (NGN.typeof(this.event) === 'symbol') {\r\n              if (prefix !== null || postfix !== null) {\r\n                NGN.INFO('Cannot relay a symbol-based event with a prefix/postfix.')\r\n              }\r\n\r\n              targetEmitter.emit(...arguments)\r\n            } else {\r\n              targetEmitter.emit(`${NGN.coalesce(prefix, '')}${this.event}${NGN.coalesce(postfix, '')}`, ...arguments)\r\n            }\r\n          })\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * @method delayEmit\r\n       * This method waits for the specified duration, then publishes an\r\n       * event once. This will publish the event only once at the end of the\r\n       * wait period, even if the event is triggered multiple times. This can\r\n       * be useful when working with many events triggered in rapid succession.\r\n       *\r\n       * For example, an NGN.DATA.Model representing a person may be used to\r\n       * track a user profile. The NGN.DATA.Model fires an event called `field.update`\r\n       * every time a data field is modified. In many cases, a user may update\r\n       * multiple fields of their profile using a form with a \"Save\" button.\r\n       * Instead of generating a new \"save\" (to disk, to memory, to an API, etc)\r\n       * operation for each field, the publishOnce event can wait until all\r\n       * changes are made before running the save operation.\r\n       *\r\n       * ```js\r\n       * // Create a data model representing a person.\r\n       * var Person = new NGN.DATA.Model({....})\r\n       *\r\n       * // Create a new person record for a user.\r\n       * var user = new Person()\r\n       *\r\n       * // When the user is modified, save the data.\r\n       * user.on('field.update', function () {\r\n       *   // Wait 300 milliseconds to trigger the save event\r\n       *   NGN.BUS.delayEmit('user.save', 300)\r\n       * })\r\n       *\r\n       * // Save the user using an API\r\n       * NGN.BUS.on('user.save', function () {\r\n       *   NGN.NET.put({\r\n       *     url: 'https://my.api.com/user',\r\n       *     json: user.data\r\n       *   })\r\n       * })\r\n       *\r\n       * // Modify the record attributes (which are blank by default)\r\n       * user.firstname = 'John'\r\n       * user.lastname = 'Doe'\r\n       * user.age = 42\r\n       *\r\n       * // Make another update 1 second later\r\n       * setTimeout(function () {\r\n       *   user.age = 32\r\n       * }, 1000)\r\n       * ```\r\n       *\r\n       * The code above sets up a model and record. Then it listens to the record\r\n       * for field updates. Each time it recognizes an update, it queues the \"save\"\r\n       * event. When the queue matures, it fires the `user.save` event.\r\n       *\r\n       * The first `field.update` is triggered when `user.firstname = 'John'` runs.\r\n       * This initiates a queue for `user.save`, set to mature in 300 millisenconds.\r\n       * Next, a `field.update` is triggered when `user.lastname = 'Doe'` runs.\r\n       * This time, since the queue for `user.save` is already initiated, notthing\r\n       * new happens. Finally, a `field.update` is triggered when `user.age = 42`\r\n       * runs. Just like the last one, nothing happens since the `user.save` queue\r\n       * is already active.\r\n       *\r\n       * The `user.save` queue \"matures\" after 300 milliseconds. This means after\r\n       * 300 milliseconds have elapsed, the `user.save` event is triggered. In this\r\n       * example, it means the `NGN.NET.put()` code will be executed. As a result,\r\n       * all 3 change (firstname, lastname, and age) will be complete before the\r\n       * API request is executed. The queue is cleared immediately.\r\n       *\r\n       * The final update occurs 1 second later (700 milliseconds after the queue\r\n       * matures). This triggers a `field.update`, but since the queue is no\r\n       * longer active, it is re-initiated. 300 milliseconds later, the `user.save`\r\n       * event is fired again, thus executing the API request again (1.3 seconds\r\n       * in total).\r\n       * @param {string} eventName\r\n       * The event/topic to publish/emit.\r\n       * @param {Number} [delay=300]\r\n       * The number of milliseconds to wait before firing the event.\r\n       * @param {Any} [payload]\r\n       * An optional payload, such as data to be passed to an event handler.\r\n       */\r\n      delayEmit: NGN.const(function (eventName, delay) {\r\n        if (!this.META.queued.hasOwnProperty(eventName)) {\r\n          let args = NGN.slice(arguments)\r\n          args.splice(1, 1)\r\n\r\n          this.META.queued[eventName] = setTimeout(() => {\r\n            delete this.META.queued[eventName]\r\n            this.emit(...args)\r\n          }, delay)\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * @method getInternalCollectionId\r\n       * Returns a unique ID for special collections.\r\n       * @param {object} collection\r\n       * The collection to generate an ID for.\r\n       * @private\r\n       */\r\n      getInternalCollectionId: NGN.privateconst(function (collection) {\r\n        return Symbol(collection)\r\n        // let time = (new Date()).getTime().toString()\r\n        // let rand = Math.random().toString()\r\n        // let key = Object.keys(collection).length + 1\r\n        //\r\n        // while (collection.hasOwnProperty(`${key.toString()}${time}${rand}`)) {\r\n        //   key++\r\n        // }\r\n        //\r\n        // return `${key.toString()}${time}${rand}`\r\n      }),\r\n\r\n      /**\r\n       * @method handleCollectionTrigger\r\n       * A method to manage #chain event handlers.\r\n       * @private\r\n       */\r\n      handleCollectionTrigger: NGN.privateconst(function (eventName, key) {\r\n        let me = this\r\n\r\n        return function () {\r\n          // Use setTimeout to simulate nextTick\r\n          setTimeout(() => {\r\n            let cq = me.META.collectionQueue\r\n\r\n            if (cq[key]) {\r\n              cq[key].remainingqueue.delete(eventName)\r\n\r\n              if (cq[key].remainingqueue.size === 0) {\r\n                cq[key].remainingqueue = cq[key].masterqueue\r\n\r\n                if (NGN.isFn(cq[key].eventName)) {\r\n                  cq[key].eventName(cq[key].payload)\r\n                } else {\r\n                  me.emit(cq[key].eventName, cq[key].payload)\r\n                }\r\n              }\r\n            }\r\n          }, 0)\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * @method funnel\r\n       * Emit an event after a collection of unique events have all fired.\r\n       * This can be useful in situations where multiple asynchronous actions\r\n       * must complete before another begins. For example, blending 3\r\n       * remote data sources from different API's into a single resultset\r\n       * can be achieved with this.\r\n       *\r\n       * **Example**\r\n       * ```js\r\n       * let collection = NGN.BUS.funnel(['download1done', 'download2done', 'download3done'], 'make.results')\r\n       *\r\n       * let allData = []\r\n       *\r\n       * // When all of the downloads are done, log them.\r\n       * NGN.BUS.on('make.results', () => {\r\n       *   console.log(allData)\r\n       * })\r\n       *\r\n       * // Download the first set of data asynchronously\r\n       * NGN.NET.json('http:/download1.com/data.json', (data) => {\r\n       *   allData.push(data)\r\n       *   NGN.BUS.emit('download1done')\r\n       * })\r\n       *\r\n       * // Download the second set of data asynchronously\r\n       * NGN.NET.json('http:/download2.com/data.json', (data) => {\r\n       *   allData.push(data)\r\n       *   NGN.BUS.emit('download2done')\r\n       * })\r\n       *\r\n       * // Download the third set of data asynchronously\r\n       * NGN.NET.json('http:/download3.com/data.json', (data) => {\r\n       *   allData.push(data)\r\n       *   NGN.BUS.emit('download3done')\r\n       * })\r\n       *\r\n       * // The handler can be removed with the special method:\r\n       * collection.remove()\r\n       * ```\r\n       * @param {array} eventCollection\r\n       * An array of events. Once _all_ of these events have fired,\r\n       * the triggerEventName will be fired.\r\n       * @param {string|function} triggerEventName\r\n       * The name of the event triggered after the collection has completed.\r\n       * This can also be a callback function. If a callback function is provided,\r\n       * it will receive the payload as the only argument when it is triggered.\r\n       * @param {any} [payload]\r\n       * An optional payload delivered to the #triggerEventName.\r\n       * @returns {object} collection\r\n       * Provides the key/value configuration of the collection.\r\n       * ```js\r\n       * {\r\n       *   masterqueue: ['event1', 'event2', 'etc'], // The original event array (non-editable)\r\n       *   remainingqueue: [...], // The events the BUS is still waiting for before firing the trigger event.\r\n       *   eventName: 'triggeredEventName', // Name of the event triggered after the remaining elements are flushed.\r\n       *   payload: 'anything', // OPTIONAL\r\n       *   remove: [Function]\r\n       * }\r\n       * ```\r\n       */\r\n      funnel: NGN.const((eventCollection, triggerEventName, payload = null) => {\r\n        if (NGN.typeof(eventCollection) !== 'array') {\r\n          throw new Error(`NGN.BUS.funnel expected an array of events, but received a(n) ${NGN.typeof(eventCollection)}`)\r\n        }\r\n\r\n        let collection = new Set(eventCollection)\r\n        let key = this.getInternalCollectionId(this.META.collectionQueue)\r\n\r\n        this.META.collectionQueue[key] = {}\r\n\r\n        Object.defineProperties(this.META.collectionQueue[key], {\r\n          masterqueue: NGN.const(new Set(eventCollection)),\r\n          remainingqueue: NGN.private(collection),\r\n          eventName: NGN.const(triggerEventName),\r\n          remove: NGN.const(() => {\r\n            this.META.collectionQueue[key].masterqueue.forEach(event => {\r\n              this.off(event, this.handleCollectionTrigger(event, key))\r\n            })\r\n\r\n            this.decreaseMaxListeners(this.META.collectionQueue[key].masterqueue.size)\r\n\r\n            delete this.META.collectionQueue[key]\r\n          }),\r\n          payload: NGN.const(payload)\r\n        })\r\n\r\n        this.increaseMaxListeners(collection.size)\r\n\r\n        collection.forEach(event => {\r\n          this.on(event, this.handleCollectionTrigger(event, key))\r\n        })\r\n\r\n        return this.META.collectionQueue[key]\r\n      }),\r\n\r\n      /**\r\n       * @method funnelOnce\r\n       * This provides the same functionality as #funnel, but\r\n       * removes the listener after the resultant event has fired.\r\n       * See #funnel for detailed usage.\r\n       * @param {array} eventCollection\r\n       * An array of events. Once _all_ of these events have fired,\r\n       * the triggerEventName will be fired.\r\n       * @param {string} triggerEventName\r\n       * The name of the event triggered after the collection has completed.\r\n       * @param {any} [payload]\r\n       * An optional payload delivered to the #triggerEventName.\r\n       * @returns {object} collection\r\n       * Provides the key/value configuration of the collection.\r\n       */\r\n      funnelOnce: NGN.const((eventCollection, triggerEventName, payload = null) => {\r\n        let funnelClosureEvent = `::NGNFUNNEL::${(new Date()).getTime()}::${triggerEventName}`\r\n        // let funnelClosureEvent = Symbol(triggerEventName)\r\n        let collection = this.funnel(eventCollection, funnelClosureEvent, payload)\r\n\r\n        this.increaseMaxListeners()\r\n        this.once(funnelClosureEvent, () => {\r\n          collection.remove()\r\n          collection = null\r\n          this.emit(triggerEventName, payload)\r\n        })\r\n      }),\r\n\r\n      /**\r\n       * @method threshold\r\n       * After an event is fired a predetermined number of times (the threshold),\r\n       * trigger another event or function.\r\n       *\r\n       * For example:\r\n       *\r\n       * ```js\r\n       * NGN.BUS.threshold('push.my.button', 3, 'annoyed')\r\n       *\r\n       * NGN.BUS.on('annoyed', function () {\r\n       *   console.log('We apologize for the slow response, but excessive clicking will not speed up the process.')\r\n       * })\r\n       *\r\n       * document.getElementById('#myButton').addEventListener('click', NGN.BUS.attach('push.my.button'))\r\n       * ```\r\n       *\r\n       * Once the threshold is exceeded, the final event will be triggered and\r\n       * the threshold will be reset. Using the example above, this means\r\n       * clicking 3 times on `#myButton` would trigger the `annoyed` event ONCE,\r\n       * 6 times triggers `annoyed` TWICE, 9 times triggers `annoyed` THREE times, etc.\r\n       * @param {string} thresholdEventName\r\n       * The name of the event to count.\r\n       * @param {number} limit\r\n       * The number of occurrances allowed until the final event is triggered.\r\n       * The event will be triggered at the threshold. For example, if the limit\r\n       * is `3`, the finalEvent will be triggered the 3rd time thresholdEventName is\r\n       * fired.\r\n       * @param {string|function} finalEventName\r\n       * This can be an event or callback function triggered when the threshold is crossed.\r\n       * If a callback function is specified, the payload is passed as the only argument.\r\n       * @param {any} [payload]\r\n       * An optional payload to send to the finalEvent handler(s).\r\n       * @returns {object}\r\n       * Returns an object that can be used to remove the threshold.\r\n       *\r\n       */\r\n      threshold: NGN.const(function (thresholdEventName, limit, finalEventName, payload = null) {\r\n        if (typeof thresholdEventName !== 'string') {\r\n          throw new Error('The threshold event name must be a string (received ' + (typeof thresholdEventName) + ')')\r\n        }\r\n\r\n        // let key = `${this.getInternalCollectionId(this.META.thresholdQueue)}${limit.toString()}`\r\n        let key = this.getInternalCollectionId(this.META.thresholdQueue)\r\n\r\n        this.META.thresholdQueue[key] = {}\r\n\r\n        Object.defineProperties(this.META.thresholdQueue[key], {\r\n          key: NGN.const(key),\r\n          eventName: NGN.const(thresholdEventName),\r\n          limit: NGN.const(limit),\r\n          count: NGN.private(0),\r\n          finalEventName: NGN.const(finalEventName),\r\n          remove: NGN.const(() => {\r\n            let event = this.META.thresholdQueue[key].eventName\r\n\r\n            delete this.META.thresholdQueue[key]\r\n\r\n            this.decreaseMaxListeners()\r\n            this.off(event, this.handleThresholdTrigger(key))\r\n          }),\r\n          payload: NGN.const(payload)\r\n        })\r\n\r\n        this.increaseMaxListeners()\r\n        this.on(thresholdEventName, this.handleThresholdTrigger(key))\r\n\r\n        return this.META.thresholdQueue[key]\r\n      }),\r\n\r\n      thresholdOnce: NGN.const(function (thresholdEventName, limit, finalEventName, payload = null) {\r\n        let thresholdClosureEvent = `::NGNTHRESHOLD::${(new Date()).getTime()}::${finalEventName}`\r\n        let threshold = this.threshold(thresholdEventName, limit, thresholdClosureEvent, payload)\r\n\r\n        this.once(thresholdClosureEvent, () => {\r\n          threshold.remove()\r\n          threshold = null\r\n          this.emit(finalEventName, payload)\r\n        })\r\n      }),\r\n\r\n      /**\r\n       * @method handleThresholdTrigger\r\n       * A method to manage #threshold event handlers.\r\n       * @private\r\n       */\r\n      handleThresholdTrigger: NGN.const(function (key) {\r\n        let me = this\r\n        return function () {\r\n          // Use setTimeout to simulate nextTick\r\n          setTimeout(() => {\r\n            if (me.META.thresholdQueue.hasOwnProperty(key)) {\r\n              me.META.thresholdQueue[key].count++\r\n              if (me.META.thresholdQueue[key].count === me.META.thresholdQueue[key].limit) {\r\n                if (NGN.isFn(me.META.thresholdQueue[key].finalEventName)) {\r\n                  me.META.thresholdQueue[key].finalEventName(me.META.thresholdQueue[key].payload)\r\n                } else {\r\n                  me.emit(me.META.thresholdQueue[key].finalEventName, me.META.thresholdQueue[key].payload)\r\n                }\r\n\r\n                // This if statement is required in case the event is removed\r\n                // during the reset process.\r\n                if (me.META.thresholdQueue.hasOwnProperty(key)) {\r\n                  me.META.thresholdQueue[key].count = 0\r\n                }\r\n              }\r\n            }\r\n          }, 0)\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * An internal method to wrap node-based event handlers\r\n       * with the proper scope.\r\n       * @param {string} eventName\r\n       * The name of the event being handled.\r\n       * @param {function} handlerFn\r\n       * The handler function.\r\n       */\r\n      wrapEventHandlerWithScope: NGN.privateconst((name, fn) => {\r\n        if (!NGN.nodelike) {\r\n          return fn\r\n        }\r\n\r\n        const handlerFn = fn\r\n\r\n        return function () {\r\n          let args = arguments\r\n\r\n          if (typeof args[args.length - 1] === 'symbol') {\r\n            name = args[args.length - 1].toString().replace(/Symbol\\(|\\)/gi, '')\r\n            args = NGN.slice(args)\r\n            args.pop()\r\n          }\r\n\r\n          handlerFn.apply({ event: name }, args)\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * An internal method to apply scope based on whether the handler\r\n       * is a Node-like \"once\" emitter or not.\r\n       * @param {string} eventName\r\n       * The name of the event being scoped.\r\n       * @param {function} handlerFn\r\n       * The handler function.\r\n       */\r\n      applyScope: NGN.privateconst((args) => {\r\n        if (NGN.nodelike && args.length > 1) {\r\n          if (args[args.length - 1].listener) {\r\n            args[args.length - 1].listener = this.wrapEventHandlerWithScope(\r\n              args[0],\r\n              args[args.length - 1].listener\r\n            )\r\n          } else {\r\n            args[args.length - 1] = this.wrapEventHandlerWithScope(\r\n              args[0],\r\n              args[args.length - 1]\r\n            )\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove all event handlers from the EventEmitter (both regular and adhoc).\r\n   * This is a shortcut for #removeAllListeners.\r\n   */\r\n  clear () {\r\n    let events = NGN.slice(arguments)\r\n\r\n    if (events.length === 0) {\r\n      this.META.wildcardEvents.clear()\r\n\r\n      let symbolEvents = []\r\n\r\n      if (NGN.nodelike) {\r\n        symbolEvents = Object.getOwnPropertySymbols(this._events)\r\n      } else {\r\n        symbolEvents = Object.getOwnPropertySymbols(this.adhoc)\r\n        symbolEvents = symbolEvents.concat(Object.getOwnPropertySymbols(this.handlers))\r\n      }\r\n\r\n      for (let i = 0; i < symbolEvents.length; i++) {\r\n        this.removeAllListeners(symbolEvents[i])\r\n      }\r\n\r\n      return this.removeAllListeners()\r\n    }\r\n\r\n    for (let i = 0; i < events.length; i++) {\r\n      this.META.wildcardEvents.delete(events[i])\r\n      this.removeAllListeners(events[i])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Internal method used to handle TTL and wildcard management.\r\n   * @private\r\n   */\r\n  eventHandler (eventName, callback, ttl, prepend = false) {\r\n    if (NGN.typeof(ttl) === 'boolean') {\r\n      prepend = ttl\r\n      ttl = this.META.defaultTTL\r\n    }\r\n\r\n    if (ttl === undefined) {\r\n      ttl = this.META.defaultTTL\r\n    }\r\n\r\n    if (ttl > 0) {\r\n      setTimeout(() => this.off(eventName, callback), ttl)\r\n    }\r\n\r\n    if (typeof eventName === 'string' && eventName.indexOf('*') >= 0) {\r\n      this.META.wildcardEvents.add(eventName)\r\n    }\r\n\r\n    return prepend\r\n  }\r\n\r\n  /**\r\n   * @method on\r\n   * Create a new event handler for the specified event.\r\n   * @param {string|string[]|object} eventName\r\n   * Name of the event to listen for.\r\n   * If an object is passed, this method will automatically setup a #pool.\r\n   * @param {function} handler\r\n   * The method responsible for responding to the event.\r\n   * This is ignored if eventName is an object.\r\n   * @param {number} [TTL]\r\n   * Time-To-Live is the number of milliseconds before the event handler\r\n   * is automatically removed. This is useful for automatically cleaning\r\n   * up limited-life event handlers.\r\n   * @param {boolean} [prepend=false]\r\n   * When set to `true`, the event is added to the beginning of\r\n   * the processing list instead of the end.\r\n   * This is ignored if eventName is an object.\r\n   */\r\n  on (eventName, callback, ttl, prepend = false) {\r\n    if (NGN.typeof(eventName) === 'array') {\r\n      for (let i = 0; i < eventName.length; i++) {\r\n        this.on(eventName[i], callback, ttl, prepend)\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (this.eventHandler(...arguments)) {\r\n      this.prependListener(eventName, callback)\r\n    } else {\r\n      this.addListener(eventName, callback)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method once\r\n   * Create a new event handler for the specified event. The\r\n   * handler will be removed immediately after it is executed. This\r\n   * effectively listens for an event to happen once and only once\r\n   * before the handler is destroyed.\r\n   * @param  {string} eventName\r\n   * Name of the event to listen for.\r\n   * @param  {Function} handler\r\n   * The method responsible for responding to the event.\r\n   * @param {boolean} [prepend=false]\r\n   * When set to `true`, the event is added to the beginning of\r\n   * the processing list instead of the end.\r\n   */\r\n  once (eventName, callback, ttl, prepend = false) {\r\n    if (NGN.typeof(eventName) === 'array') {\r\n      for (let i = 0; i < eventName.length; i++) {\r\n        this.once(eventName[i], callback, ttl, prepend)\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (this.eventHandler(...arguments)) {\r\n      this.prependOnceListener(eventName, callback)\r\n    } else {\r\n      super.once(eventName, this.wrapEventHandlerWithScope(eventName, callback))\r\n    }\r\n  }\r\n\r\n  // The following methods override the Node event emitter only when necessary.\r\n  prependListener () {\r\n    this.applyScope(arguments)\r\n    super.prependListener(...arguments)\r\n  }\r\n\r\n  prependOnceListener () {\r\n    this.applyScope(arguments)\r\n    super.prependOnceListener(...arguments)\r\n  }\r\n\r\n  addListener () {\r\n    this.applyScope(arguments)\r\n    super.addListener(...arguments)\r\n  }\r\n\r\n  removeListener () {\r\n    if (arguments[arguments.length - 1] !== true) {\r\n      this.applyScope(arguments)\r\n    }\r\n\r\n    super.removeListener(...arguments)\r\n  }\r\n\r\n  /**\r\n   * @method emit\r\n   * Emits an event.\r\n   * @param {string[]} eventName\r\n   * The event name can be a string or an array of strings. If an array\r\n   * of strings is specified, an event will be fired for each event name\r\n   * within the array.\r\n   * @param {any} [payload]\r\n   * An optional payload. This can be any number of additional arguments.\r\n   */\r\n  emit () {\r\n    if (NGN.typeof(arguments[0]) === 'array') {\r\n      let args = NGN.slice(arguments)\r\n      let eventNames = args.shift()\r\n\r\n      for (let i = 0; i < eventNames.length; i++) {\r\n        this.emit(eventNames[i], ...args)\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    // This catches non-string event names. NGN internally uses Symbols\r\n    // for the NGN.WARN/INFO/ERROR event names to prevent name collisions.\r\n    // This check provides support for these special events. These types\r\n    // of events will never have wildcards.\r\n    if (!NGN.nodelike || !arguments[0] || this.META.wildcardEvents.size === 0) {\r\n      super.emit(...arguments)\r\n      return\r\n    }\r\n\r\n    if (NGN.nodelike && typeof arguments[0] === 'symbol') {\r\n      super.emit(...arguments)\r\n      return\r\n    }\r\n\r\n    /**\r\n     * The NGN browser-based event emitter supports wildcards natively, but\r\n     * Node.js does not. This adds simple wildcard support for Node. The\r\n     * only wildcard character supported at this time is `*`. This feature\r\n     * will check the event name for the existance of a wildcard. If a\r\n     * wilcard character is present, the internally-maintained list of\r\n     * wildcard events is checked to see if it's a known event. If none\r\n     * of these checks pass, the standard event emitter is used, otherwise\r\n     * special wildcard handling is used.\r\n     */\r\n    let iterator = this.META.wildcardEvents.values()\r\n    let currentEvent = null\r\n    let args = NGN.slice(arguments)\r\n\r\n    args.shift()\r\n\r\n    while (currentEvent === null || !currentEvent.done) {\r\n      if (currentEvent !== null && currentEvent.value !== arguments[0]) {\r\n        let pattern = new RegExp(currentEvent.value.replace(/\\./g, '\\\\.').replace(/\\*/g, '.*'), 'g')\r\n\r\n        if (pattern.test(arguments[0])) {\r\n          super.emit(currentEvent.value, ...args, typeof arguments[0] !== 'symbol' ? Symbol(arguments[0]) : arguments[0])\r\n          break\r\n        }\r\n      }\r\n\r\n      currentEvent = iterator.next()\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from '../emitter/core'\r\n\r\n/**\r\n * @class NGN.Task\r\n * Represents a unit of work as a function. A task \"executes\"\r\n * when it's callback method is executed.\r\n * @fires start\r\n * Triggered when task execution begins. The task itself is provided\r\n * as an argument to the event handler.\r\n * @fires complete\r\n * Triggered when task execution finishes. The task itself is provided\r\n * as an argument to the event handler.\r\n * @fires skip\r\n * Triggered when task is skipped. The task itself is provided\r\n * as an argument to the event handler.\r\n * @fires timeout\r\n * Triggered when task execution time exceeds the specified timeout\r\n * limit. The task itself is provided as an argument to the event handler.\r\n */\r\nexport default class QueueItem extends EventEmitter {\r\n  constructor (config) {\r\n    config = config || {}\r\n\r\n    super(config)\r\n\r\n    Object.defineProperties(this, {\r\n      /**\r\n       * @cfg {string} name\r\n       * Descriptive name of the worker.\r\n       */\r\n      name: NGN.const(NGN.coalesce(config.name, 'Unknown')),\r\n\r\n      /**\r\n       * @cfg {function} callback\r\n       * The method to execute when the queue is ready.\r\n       */\r\n      callback: NGN.privateconst(config.callback),\r\n\r\n      /**\r\n       * @cfg {number} number\r\n       * The queue item number. This is used primarily as an ID.\r\n       */\r\n      number: NGN.const(parseInt(config.number, 10)),\r\n\r\n      timer: NGN.private(null),\r\n      _status: NGN.private(null),\r\n      bus: NGN.private(config.buz),\r\n      _skip: NGN.private(false)\r\n    })\r\n\r\n    this.on('timeout', () => {\r\n      this._status = 'timedout'\r\n    })\r\n\r\n    this.on('skip', () => {\r\n      this._status = 'skipped'\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @property {string} status\r\n   * May be `running`, `complete`, or `null` (not run yet)\r\n   */\r\n  get status () {\r\n    return this._status\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} skipped\r\n   * `true` to skip the step, `false` to execute it.\r\n   */\r\n  get skipped () {\r\n    return this._skip\r\n  }\r\n\r\n  /**\r\n   * @method run\r\n   * Execute the callback function.\r\n   * @param {string} mode\r\n   * `dev` or `prod`. When in \"dev\" mode, verbose output is written\r\n   * to the console.\r\n   */\r\n  run (mode) {\r\n    if (this.skipped) {\r\n      this.emit('skip', this)\r\n\r\n      if (mode && mode === 'dev') {\r\n        NGN.WARN('SKIPPED ' + this.name)\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    this.emit('start', this)\r\n\r\n    if (mode && mode === 'dev') {\r\n      NGN.INFO('Executing ' + this.name + ':')\r\n    }\r\n\r\n    this._status = 'running'\r\n\r\n    const me = this\r\n    const scope = {\r\n      name: this.name,\r\n      number: this.number,\r\n      timeout: function (milliseconds) {\r\n        me.timer = setTimeout(function () {\r\n          me.emit('timeout', me)\r\n        }, milliseconds)\r\n      }\r\n    }\r\n\r\n    this.callback.apply(scope, [function () {\r\n      me._status = 'complete'\r\n      me.emit('complete', me)\r\n    }])\r\n\r\n    if (this.callback.length === 0) {\r\n      me._status = 'complete'\r\n      me.emit('complete', me)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method skip\r\n   * Skip this item\r\n   */\r\n  skip () {\r\n    if (this._status === 'running') {\r\n      NGN.WARN(`Cannot skip step: ${this.name} is currently running.`)\r\n    } else if (this._status === 'timedout') {\r\n      NGN.WARN(`Cannot skip step: ${this.name} timed out.`)\r\n    } else if (this._status === 'complete') {\r\n      NGN.WARN(`Cannot skip step: ${this.name} already completed.`)\r\n    }\r\n\r\n    this._skip = true\r\n  }\r\n}\r\n","import EventEmitter from '../emitter/core'\r\n\r\n/**\r\n * @class NGN.Queue\r\n * A job runner/collection capable of parallel and sequential task processing.\r\n * @fires complete\r\n * Triggered when the entire collection of tasks has completed\r\n * processing/running.\r\n * @fires aborted\r\n * Triggered when processing is aborted before completion.\r\n * @fires aborting\r\n * Triggered when the abort sequence begins.\r\n * @fires timeout\r\n * Triggered when processing times out.\r\n * @fires taskstart\r\n * Triggered whenever a new task is started. The NGN.Task is\r\n * the only argument delivered to event handlers.\r\n * @fires taskcomplete\r\n * Triggered whenever a task completes processing. The NGN.Task is\r\n * the only argument delivered to event handlers.\r\n * @fires taskcreate\r\n * Triggered when a new NGN.Task is added to the queue. The NGN.Task is\r\n * the only argument delivered to event handlers.\r\n * @fires taskremove\r\n * Triggered when a NGN.Task is removed from the queue. The NGN.Task is\r\n * the only argument delivered to event handlers.\r\n * @fires tasktimeout\r\n * Triggered when an NGN.Task times out during processing. The NGN.Task is\r\n * the only argument delivered to event handlers.\r\n */\r\nexport default class Queue extends EventEmitter {\r\n  /**\r\n   * @constructor\r\n   * @param {string} [mode=production]\r\n   * Set this to `dev` for verbose console output.\r\n   */\r\n  constructor (mode = 'production') {\r\n    super()\r\n\r\n    Object.defineProperties(this, {\r\n      steps: NGN.private([]),\r\n      completed: NGN.private(0),\r\n      timeout: NGN.private(null),\r\n      _mode: NGN.private(mode),\r\n      _cancel: NGN.private(false),\r\n      processing: NGN.private(false),\r\n      timer: NGN.private(null),\r\n      sequential: NGN.private(false)\r\n    })\r\n\r\n    this.on('taskcomplete', (step) => {\r\n      // Disallow duplicates\r\n      if (this.sequential || step.status === 'completed') {\r\n        return\r\n      }\r\n\r\n      step._status = 'complete'\r\n\r\n      // When the step is done, tally it\r\n      this.completed++\r\n\r\n      if (this.mode === 'dev') {\r\n        NGN.INFO(step.name + ' completed.')\r\n      }\r\n\r\n      // If all of the queries have been tallied, we're done.\r\n      if (this.completed === this.steps.length) {\r\n        this.processing = false\r\n\r\n        Object.keys(this.steps).forEach((step) => {\r\n          clearTimeout(this.steps[step].timer)\r\n        })\r\n\r\n        this.emit('complete')\r\n      }\r\n    })\r\n\r\n    this.on('aborting', () => {\r\n      this._cancel = true\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @property {Array} list\r\n   * A list of tasks within the collection. This is an array of\r\n   * objects, where each object contains the `id`, `name`, and\r\n   * `status` of the task.\r\n   *\r\n   * ```js\r\n   * {\r\n   *   id: <Number>,\r\n   *   name: <String>,\r\n   *   status: <String>\r\n   * }\r\n   * ```\r\n   */\r\n  get list () {\r\n    return this.steps.map(function (s) {\r\n      return {\r\n        id: s.number,\r\n        name: s.name,\r\n        status: s.status\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @property {string} mode\r\n   * The type of processing (dev, production, etc). Setting this to\r\n   * `dev` enables verbose logging.\r\n   */\r\n  get mode () {\r\n    return this._mode\r\n  }\r\n\r\n  set mode (value) {\r\n    if (value.toLowerCase().substr(0, 3) === 'dev') {\r\n      this._mode = 'dev'\r\n    } else {\r\n      this._mode = 'production'\r\n    }\r\n  }\r\n\r\n  get cancelled () {\r\n    return this._cancel\r\n  }\r\n\r\n  onTimeout () {\r\n    let log = []\r\n\r\n    if (this.steps.length > 0) {\r\n      this.steps.forEach((s) => {\r\n        log.push(s.name, s.status === null ? 'NOT STARTED' : s.status)\r\n      })\r\n    }\r\n\r\n    this.emit('timeout', {\r\n      process: log\r\n    })\r\n\r\n    log = null\r\n  }\r\n\r\n  /**\r\n   * @method add\r\n   * Add a task to the list.\r\n   * @param {string} [name]\r\n   * A descriptive name for the queued process/task.\r\n   * @param {function} callback\r\n   * The function to queue.\r\n   * @param {function} callback.next\r\n   * This argument allows users to explicitly use asynchronous\r\n   * methods. Example:\r\n   *\r\n   * ```\r\n   * let tasks = new NGN.Tasks()\r\n   *\r\n   * tasks.add('Descriptive Title', function (next) {\r\n   *   myAsyncMethod(function () {\r\n   *     console.log('Ran something async.')\r\n   *     next()\r\n   *   })\r\n   * })\r\n   * @returns {NGN.Task}\r\n   * Returns the task object added to the queue.\r\n   */\r\n  add (name, fn) {\r\n    if (this.processing) {\r\n      return NGN.WARN('Cannot add a step while processing.')\r\n    }\r\n\r\n    if (typeof name === 'function') {\r\n      fn = name\r\n      name = 'Step ' + (parseInt(this.steps.length) + 1)\r\n    }\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('No processing method defined for step ' + (parseInt(this.steps.length) + 1) + '.')\r\n    }\r\n\r\n    const queue = new NGN.Task({\r\n      name: name,\r\n      callback: fn,\r\n      number: (this.steps.length > 0 ? this.steps[this.steps.length - 1].number : 0) + 1\r\n    })\r\n\r\n    queue.on('complete', (step) => this.emit('taskcomplete', step))\r\n\r\n    queue.on('timeout', (step) => {\r\n      if (step.status === 'running' || step.status === 'timedout') {\r\n        this.emit('tasktimeout', step)\r\n      }\r\n    })\r\n\r\n    this.steps.push(queue)\r\n    this.emit('taskcreate', queue)\r\n\r\n    return queue\r\n  }\r\n\r\n  /**\r\n   * @method getAt\r\n   * @param  {number} index\r\n   * Retrieve a queue item by it's index/queue number.\r\n   * @return {Queue}\r\n   */\r\n  getAt (index) {\r\n    return this.steps[index]\r\n  }\r\n\r\n  /**\r\n   * @method get\r\n   * Retrieve a specific queue item.\r\n   * @param  {string} requestedStepTitle\r\n   * The descriptie name of the queue item to retrieve.\r\n   * @return {Queue}\r\n   */\r\n  get (requestedStep) {\r\n    // Get by Name\r\n    let element = this.steps.filter((step) => {\r\n      return step.name === requestedStep\r\n    })\r\n\r\n    if (element.length === 1) {\r\n      return element[0]\r\n    }\r\n\r\n    // Get by index\r\n    element = this.steps.filter((step) => {\r\n      return step.number === requestedStep\r\n    })\r\n\r\n    if (element.length === 1) {\r\n      return element[0]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method remove\r\n   * Remove a queue item by name or number.\r\n   * @param  {string} requestedStepTitle\r\n   * The descriptive name of the queue item to retrieve.\r\n   * @return {Queue}\r\n   * Returns the item that was removed.\r\n   */\r\n  remove (requestedStep) {\r\n    if (this.processing) {\r\n      return NGN.WARN('Cannot add a step while processing.')\r\n    }\r\n\r\n    // Remove by name\r\n    let element = this.steps.filter((step) => {\r\n      return step.name === requestedStep\r\n    })\r\n\r\n    if (element.length === 1) {\r\n      this.steps = this.steps.filter((step) => {\r\n        return step.name !== requestedStep\r\n      })\r\n\r\n      this.emit('taskremove', element[0])\r\n      return element[0]\r\n    }\r\n\r\n    // Remove by ID\r\n    element = this.steps.filter((step) => {\r\n      return step.number === requestedStep\r\n    })\r\n\r\n    if (element.length === 1) {\r\n      this.steps = this.steps.filter((step) => {\r\n        return step.number !== requestedStep\r\n      })\r\n\r\n      this.emit('taskremove', element[0])\r\n      return element[0]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method removeAt\r\n   * Removes a queue item from the specific index.\r\n   * @param  {number} requestedStepIndex\r\n   * The queue index/number.\r\n   * @return {Queue}\r\n   * Returns the item that was removed.\r\n   */\r\n  removeAt (requestedStep) {\r\n    if (this.processing) {\r\n      return NGN.WARN('Cannot add a step while processing.')\r\n    }\r\n\r\n    // Remove by index\r\n    if (typeof requestedStep !== 'number') {\r\n      return console.error('Failed to remove step: ' + requestedStep)\r\n    }\r\n\r\n    if (requestedStep < 0 || requestedStep >= this.steps.length) {\r\n      return console.error('Step index ' + requestedStep + ' could not be found or does not exist.')\r\n    }\r\n\r\n    return this.steps.splice(requestedStep, 1)[0]\r\n  }\r\n\r\n  /**\r\n   * @method reset\r\n   * Resets all cancelled/skipped steps, essentially resetting the queue\r\n   * to it's pre-aborted state.\r\n   */\r\n  reset () {\r\n    if (this.processing) {\r\n      return NGN.WARN('Cannot reset a running queue. Abort or wait for the process to complete before resetting.')\r\n    }\r\n\r\n    // Refresh cancelled steps\r\n    this.steps.forEach((step) => {\r\n      step._skip = false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @method process\r\n   * Run the queued processes in order.\r\n   * @param {boolean} [sequential=false]\r\n   * Set to `true` to run the queue items in a synchronous-like manner.\r\n   * This will execute each method one after the other. Each method must\r\n   * complete before the next is started.\r\n   */\r\n  process (sequential = false) {\r\n    if (this.processing) {\r\n      return NGN.WARN('Cannot start processing (already running). Please wait for this process to complete before calling process() again.')\r\n    }\r\n\r\n    if (this.steps.length === 0) {\r\n      return this.emit('complete')\r\n    }\r\n\r\n    this.processing = true\r\n    this._cancel = false\r\n\r\n    if (this.timeout !== null) {\r\n      this.timer = setTimeout(() => this.onTimeout(), this.timeout)\r\n    }\r\n\r\n    this.sequential = typeof sequential === 'boolean' ? sequential : false\r\n    if (!this.sequential) {\r\n      for (let i = 0; i < this.steps.length; i++) {\r\n        this.steps[i].run(this.mode)\r\n      }\r\n    } else {\r\n      let queue = this.steps\r\n      let listener = new NGN.EventEmitter()\r\n\r\n      listener.on('taskcomplete', () => {\r\n        if (queue.length > 0) {\r\n          const currentTask = queue.shift()\r\n\r\n          if (currentTask.skipped) {\r\n            return listener.emit('taskcomplete')\r\n          }\r\n\r\n          currentTask.on('complete', () => listener.emit('taskcomplete'))\r\n          currentTask.on('start', () => this.emit('taskstart', currentTask))\r\n\r\n          currentTask.run(this.mode)\r\n        } else {\r\n          this.emit('complete')\r\n        }\r\n      })\r\n\r\n      let currentStep = queue.shift()\r\n\r\n      currentStep.on('complete', () => listener.emit('taskcomplete'))\r\n      currentStep.on('start', () => this.emit('taskstart', currentStep))\r\n\r\n      currentStep.run(this.mode)\r\n    }\r\n  }\r\n\r\n  // Alias for process\r\n  run () {\r\n    this.process(...arguments)\r\n  }\r\n\r\n  /**\r\n   * @method abort\r\n   * Abort/cancel processing. This prevents further steps from processing.\r\n   */\r\n  abort () {\r\n    this.emit('aborting')\r\n\r\n    // Make sure the steps are skipped.\r\n    this.each((step) => {\r\n      if (['completed', 'running', 'timedout'].indexOf(step.status) < 0 && !step.skipped) {\r\n        step.skip()\r\n      }\r\n    })\r\n\r\n    this.once('complete', () => this.emit('aborted'))\r\n  }\r\n\r\n  /**\r\n   * @method each\r\n   * Apply a method to each step.\r\n   * @param {function} method\r\n   * @private\r\n   */\r\n  each (fn) {\r\n    for (let i = 0; i < this.steps.length; i++) {\r\n      fn(this.steps[i])\r\n    }\r\n  }\r\n\r\n  // Alias for abort\r\n  cancel () {\r\n    this.abort(...arguments)\r\n  }\r\n}\r\n","/**\r\n * @class NGN.UTILITY.Lexer\r\n * This class performs scans static text for tokens, based on a grammar.\r\n * It is designed to work with NGN.UTILITY.Tokenizer to convert text into\r\n * a sequence of tokens (strings with an identified \"meaning\").\r\n *\r\n * This class was inspired by https://github.com/aaditmshah/lexer (MIT).\r\n *\r\n * ```js\r\n * let lexer = new NGN.UTILITY.Lexer('hello\\nworld\\nand moon')\r\n *\r\n * lexer.addRule(/hello/i, function (str) {\r\n *   return 'hi' // \"hi\" is the name of the token\r\n * })\r\n *\r\n * lexer.addRule(/world/i, function (str) {\r\n *   return 'planet'\r\n * })\r\n *\r\n * // Create an error if a rule passes. In this case, prevent the word \"moon\".\r\n * lexer.addRule(/moon/i, function (str) {\r\n *   this.error()\r\n * })\r\n *\r\n * console.log(lexer.next())\r\n *\r\n * // OUTPUT\r\n * // {\r\n * //   line: 1,\r\n * //   column: 1,\r\n * //   index: 0,\r\n * //   token: 'hi',\r\n * //   length: 5,\r\n * //   input: 'hello'\r\n * // }\r\n *\r\n * lexer.next() // Returns the next token\r\n * ```\r\n *\r\n * The lexer contains two built-in rules to determine the beginning of\r\n * file/content (token `BOF`) and the end of file content (token `EOF`).\r\n */\r\nexport default class NGNLexer { // eslint-disable-line no-unused-vars\r\n  /**\r\n   * Create a new lexer instance.\r\n   * @param  {String} [input='']\r\n   * Initialize with text input.\r\n   */\r\n  constructor (statement = '') {\r\n    Object.defineProperties(this, {\r\n      tokens: NGN.private([]),\r\n      rules: NGN.private([]),\r\n      remove: NGN.private(0),\r\n      state: NGN.private(0),\r\n      index: NGN.private(0),\r\n      statement: NGN.private(statement),\r\n      reject: NGN.private(false),\r\n      lastLineIndex: NGN.private(0),\r\n      currentLength: NGN.private(0),\r\n      currentMatch: NGN.private(null),\r\n      row: NGN.private(1),\r\n      unrecognizedCharacters: NGN.private(false)\r\n    })\r\n\r\n    // Identify beginning of file/statement\r\n    this.addRule(/^/, function () {\r\n      return 'BOF'\r\n    })\r\n\r\n    // Identify end of file/statement\r\n    this.addRule(/$/, function () {\r\n      return 'EOF'\r\n    })\r\n\r\n    if (statement && statement.length > 0) {\r\n      this.input = statement\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {String} value\r\n   * The input text to analyze. Changing this automatically resets the lexer.\r\n   */\r\n  set input (value) {\r\n    this.remove = 0\r\n    this.state = 0\r\n    this.index = 0\r\n    this.currentMatch = null\r\n    this.tokens = []\r\n    this.row = 1\r\n    this.statement = value\r\n  }\r\n\r\n  get input () {\r\n    return this.statement\r\n  }\r\n\r\n  /**\r\n   * @property {number} lines\r\n   * The number of lines in the input text.\r\n   */\r\n  get lines () {\r\n    return this.statement.split('\\n').length\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} unrecognized\r\n   * Set this to `true` within a rule if a value is unrecognized.\r\n   * The more common approach is to use the #error method, which\r\n   * sets this to `true` when a rule should produce an error.\r\n   */\r\n  get unrecognized () {\r\n    return this.unrecognizedCharacters\r\n  }\r\n\r\n  set unrecognized (value) {\r\n    // TODO: NGN.forceBoolean\r\n    this.reject = true\r\n    this.unrecognizedCharacters = NGN.forceBoolean(value)\r\n  }\r\n\r\n  /**\r\n   * @property {number} currentLine\r\n   * Retrieves the current line wherever the lexer left off (i.e. last\r\n   * recognized token).\r\n   */\r\n  get currentLine () {\r\n    return this.row\r\n  }\r\n\r\n  /**\r\n   * @property {number} currentColumn\r\n   * Retrieves the current column wherever the lexer left off (i.e. last\r\n   * recognized token).\r\n   */\r\n  get currentColumn () {\r\n    let col = (this.index - this.lastLineIndex) - this.currentLength\r\n\r\n    return col === 0 ? 1 : col\r\n  }\r\n\r\n  /**\r\n   * Called within a rule to force an error. This is most commonly used\r\n   * when a block of text contains a value it shouldn't.\r\n   * @param  {String} [message]\r\n   * An optional message prefixed to the error message.\r\n   */\r\n  error (message) {\r\n    if (message) {\r\n      let col = (this.index - this.lastLineIndex) - 1\r\n\r\n      throw new Error(`${message} at line ${this.currentLine}, column ${col < 1 ? 1 : col}.`)\r\n    }\r\n\r\n    this.unrecognized = true\r\n  }\r\n\r\n  /**\r\n   * Add a rule for detecting a token.\r\n   * @param {RegExp} pattern\r\n   * The pattern is applied to the text to determine whether the action should\r\n   * be triggered or not.\r\n   * @param {Function|String} action\r\n   * The action method is executed when a pattern match is detected. If the\r\n   * action is a function, it must return the name of the token. Functions\r\n   * receive a single argument, which is the text that matched the rule.\r\n   *\r\n   * If a string is provided as the action, that string will be returned as\r\n   * the token value whenever a pattern match occurs. This is a convenient\r\n   * way to avoid repetitively writing the following type of token handler:\r\n   *\r\n   * ```js\r\n   * function () {\r\n   *   return 'token'\r\n   * }\r\n   * ```\r\n   * @param {Array} [start=[0]]\r\n   * An optional array of unsigned integers acting as\r\n   * [start conditions](http://flex.sourceforge.net/manual/Start-Conditions.html).\r\n   * By default all rules are active in the initial state (i.e. `0`).\r\n   */\r\n  addRule (pattern, action, start = [0]) {\r\n    if (!pattern.global) {\r\n      let flags = 'g'\r\n\r\n      if (pattern.multiline) {\r\n        flags += 'm'\r\n      }\r\n\r\n      if (pattern.ignoreCase) {\r\n        flags += 'i'\r\n      }\r\n\r\n      pattern = new RegExp(pattern.source, flags)\r\n    }\r\n\r\n    let actionFn\r\n    if (typeof action === 'string') {\r\n      actionFn = function () {\r\n        return action\r\n      }\r\n    } else {\r\n      actionFn = action\r\n    }\r\n\r\n    if (!NGN.isFn(actionFn)) {\r\n      throw new Error(`INVALID LEXER ATTRIBUTES: ${pattern.toString()} rule is missing a valid handler function (action) or token name.`)\r\n    }\r\n\r\n    let actionString = actionFn.toString()\r\n\r\n    if (actionString.indexOf('this.error(') >= 0 && /^\\(.*\\)\\s{0,10}=>\\s{0,10}\\{/.test(actionString)) {\r\n      throw new Error('Cannot use a non-lexical expression (arrow function) as a lexer rule.')\r\n    }\r\n\r\n    this.rules.push({\r\n      pattern,\r\n      global: pattern.global,\r\n      action: actionFn,\r\n      start\r\n    })\r\n  }\r\n\r\n  /**\r\n   * An iterator method.\r\n   * @return {Object}\r\n   * Returns the next recognized token as a detailed object:\r\n   *\r\n   * ```js\r\n   * {\r\n   *   line: 1,\r\n   *   column: 1,\r\n   *   index: 0,\r\n   *   token: 'token name',\r\n   *   length: 5,\r\n   *   input: 'original input string'\r\n   * }\r\n   */\r\n  next () {\r\n    if (this.tokens.length) {\r\n      return this.tokens.shift()\r\n    }\r\n\r\n    this.reject = true\r\n\r\n    while (this.index <= this.statement.length) {\r\n      // Count any new line & reset column\r\n      if (/\\n/i.test(this.statement.charAt(this.index))) {\r\n        this.row++\r\n        this.lastLineIndex = this.index\r\n      }\r\n\r\n      let matches = this.scan().splice(this.remove)\r\n      let index = this.index\r\n\r\n      while (matches.length) {\r\n        if (this.reject) {\r\n          let match = matches.shift()\r\n          let result = match.result\r\n          let length = match.length\r\n\r\n          this.index += length\r\n          this.currentLength = length\r\n          this.reject = false\r\n          this.remove++\r\n          let token = match.action.apply(this, result)\r\n\r\n          if (this.reject) {\r\n            this.index = result.index\r\n          } else if (token !== undefined) {\r\n            switch (NGN.typeof(token)) {\r\n              case 'array':\r\n                this.tokens = token.slice(1)\r\n                token = token[0]\r\n\r\n              default: // eslint-disable-line no-fallthrough\r\n                if (length) {\r\n                  this.remove = 0\r\n                }\r\n\r\n                return token\r\n            }\r\n          }\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n\r\n      let input = this.statement\r\n\r\n      if (index < input.length) {\r\n        if (this.reject) {\r\n          this.remove = 0\r\n\r\n          let token = this.unexpected(input.substr(this.index++, this.index + input.length))\r\n\r\n          if (token !== undefined) {\r\n            if (NGN.typeof(token) === 'array') {\r\n              this.tokens = token.slice(1)\r\n              return token[0]\r\n            } else {\r\n              return token\r\n            }\r\n          }\r\n        } else {\r\n          if (this.index !== index) {\r\n            this.remove = 0\r\n          }\r\n\r\n          this.reject = true\r\n        }\r\n      } else if (matches.length) {\r\n        this.reject = true\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scan the text and apply rules.\r\n   * @private\r\n   */\r\n  scan () {\r\n    let matches = []\r\n    let index = 0\r\n    let state = this.state\r\n    let lastIndex = this.index\r\n    let input = this.statement\r\n\r\n    for (let i = 0, length = this.rules.length; i < length; i++) {\r\n      let rule = this.rules[i]\r\n      let start = rule.start\r\n      let states = start.length\r\n\r\n      if (\r\n        (!states || start.indexOf(state) >= 0) ||\r\n          (state % 2 && states === 1 && !start[0])\r\n      ) {\r\n        let pattern = rule.pattern\r\n        pattern.lastIndex = lastIndex\r\n        let result = pattern.exec(input)\r\n\r\n        if (result && result.index === lastIndex) {\r\n          let j = matches.push({\r\n            result,\r\n            action: rule.action,\r\n            length: result[0].length\r\n          })\r\n\r\n          if (rule.global) {\r\n            index = j\r\n          }\r\n\r\n          while (--j > index) {\r\n            let k = j - 1\r\n\r\n            if (matches[j].length > matches[k].length) {\r\n              let temple = matches[j]\r\n              matches[j] = matches[k]\r\n              matches[k] = temple\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return matches\r\n  }\r\n\r\n  /**\r\n   * Handles unexpected character sequences.\r\n   * This may throw an error if the characters are unrecognized.\r\n   * @param  {String} characters\r\n   * The characters which triggered the unexpected flag.\r\n   * @private\r\n   */\r\n  unexpected (str) {\r\n    if (this.unrecognizedCharacters) {\r\n      let col = (this.index - this.lastLineIndex) - 1\r\n\r\n      throw new Error(`Unexpected syntax at line ${this.currentLine}, column ${col < 1 ? 1 : col}\\nat ${str}\\n   ^`)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @class NGN.UTILITY.Tokenizer\r\n * Given a grammar, a tokenizer will perform lexical analysis of text.\r\n * In simple terms, it will extract tokens from text. This is accomplished\r\n * by applying rules with a NGN.UTILITY.Lexer and capturing responses.\r\n *\r\n * The NGN.DATA.JQL class is an implementation of a tokenizer. It extracts\r\n * tokens from JQL queries, splitting them into tokens that can be used in\r\n * programs.\r\n */\r\nexport default class NGNTokenizer { // eslint-disable-line no-unused-vars\r\n  /**\r\n   * Create a new tokenizer. This will return an instance of itself,\r\n   * allowing for methods to be chained like `(new Tokenizker([...])).parse('...')`.\r\n   * @param  {Array}  [grammar=[]]\r\n   * A grammar is a collection of rules that are passed to\r\n   * NGN.UTILITY.Lexer#addRule.\r\n   *\r\n   * The following example provides a subset of the NGN.DATA.JQL grammar.\r\n   *\r\n   * ```js\r\n   * new Tokenizer([\r\n   *   // Disallow irrelevant keywords (SQL)\r\n   *   [\r\n   *     /FROM/i,\r\n   *     function () {\r\n   *       this.error('FROM is not a valid JQL query descriptor. Found')\r\n   *     }\r\n   *   ],\r\n   *\r\n   *   // Skip whitespace\r\n   *   [/\\s+/, function () {}],\r\n   *\r\n   *   // Common tokens\r\n   *   [/SELECT\\s{1,1000}/i, 'SELECT'],\r\n   *   [/DISTINCT\\s{1,1000}/i, 'DISTINCT'],\r\n   *   [/WHERE\\s{1,1000}/i, 'WHERE'],\r\n   *   [/ORDER BY\\s{1,1000}/i, 'ORDERBY']\r\n   * ])\r\n   * ```\r\n   */\r\n  constructor (grammar = []) {\r\n    if (grammar.length === 0) {\r\n      throw new Error('No grammaer rules specified.')\r\n    }\r\n\r\n    Object.defineProperties(this, {\r\n      statement: NGN.private(null),\r\n      rules: NGN.privateconst(grammar),\r\n\r\n      PROTECTED: NGN.privateconst({\r\n        lexer: new NGN.UTILITY.Lexer(),\r\n        activeText: null,\r\n        orderedList: new Set()\r\n      })\r\n    })\r\n\r\n    // Add rules\r\n    for (let i = 0; i < this.rules.length; i++) {\r\n      this.PROTECTED.lexer.addRule(this.rules[i][0], this.rules[i][1])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * @property {string} text\r\n   * The text being \"tokenized\".\r\n   */\r\n  get text () {\r\n    return this.PROTECTED.activeText\r\n  }\r\n\r\n  /**\r\n   * @property {Array} orderedTokenList\r\n   * An ordered list of tokens as they appear within the text.\r\n   *\r\n   * **Example Result:**\r\n   *\r\n   * ```js\r\n   * [{\r\n   *   column: 1,\r\n   *   index: 0,\r\n   *   input: 'original string',\r\n   *   length: 15,\r\n   *   line: 4,\r\n   *   token: 'mytoken'\r\n   * }, {\r\n   *   ...\r\n   * }]\r\n   * ```\r\n   */\r\n  get orderedTokenList () {\r\n    return Array.from(this.PROTECTED.orderedList).map(item => item.detail)\r\n  }\r\n\r\n  /**\r\n   * Parses text to generate a token list.\r\n   * @param  {string} text\r\n   * The text to parse.\r\n   * @param  {Boolean} [suppressXOF=true]\r\n   * By default, `BOF` (Beginning of File) and `EOF` (End of File) tokens are\r\n   * suppressed. Set this to `false` to enable them.\r\n   * @return {Array}\r\n   * Returns an array of tokens.\r\n   *\r\n   * **Example Result:**\r\n   *\r\n   * ```js\r\n   * [{\r\n   *   column: 1,\r\n   *   index: 0,\r\n   *   input: 'original string',\r\n   *   length: 15,\r\n   *   line: 4,\r\n   *   token: 'mytoken'\r\n   * }, {\r\n   *   ...\r\n   * }]\r\n   * ```\r\n   */\r\n  parse (text, ignoreXOF = true) {\r\n    if (!NGN.coalesce(text) || typeof text !== 'string') {\r\n      throw new Error('Cannot parse empty string or non-string.')\r\n    }\r\n\r\n    this.PROTECTED.activeText = text\r\n\r\n    let tokens = {}\r\n    let token\r\n\r\n    this.PROTECTED.lexer.input = text\r\n    this.PROTECTED.orderedList.clear()\r\n\r\n    while (token = this.PROTECTED.lexer.next()) { // eslint-disable-line no-cond-assign\r\n      if (!ignoreXOF || (token !== 'BOF' && token !== 'EOF')) {\r\n        tokens[token] = NGN.coalesce(tokens[token], [])\r\n\r\n        tokens[token].push({\r\n          line: this.PROTECTED.lexer.currentLine,\r\n          column: this.PROTECTED.lexer.currentColumn,\r\n          length: this.PROTECTED.lexer.currentLength,\r\n          index: this.PROTECTED.lexer.index - this.PROTECTED.lexer.currentLength,\r\n          input: this.PROTECTED.lexer.statement.substr(this.PROTECTED.lexer.index - this.PROTECTED.lexer.currentLength, this.PROTECTED.lexer.currentLength)\r\n        })\r\n\r\n        const index = tokens[token].length - 1\r\n\r\n        this.PROTECTED.orderedList.add({\r\n          index: index,\r\n          token: token,\r\n          get detail () {\r\n            return Object.assign(tokens[this.token][this.index], {token: this.token})\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    return tokens\r\n  }\r\n}\r\n","/**\r\n * @class NGN.UTILITY.Set\r\n * Provides advanced features for [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)\r\n * objects.\r\n */\r\nexport default class NGNSet { // eslint-disable-line\r\n  /**\r\n   * Indicates the subset is wholly contained within the main set.\r\n   * @param  {Set}  mainset\r\n   * @param  {Set}  subset\r\n   * @return {Boolean}\r\n   */\r\n  static isSuperSet (mainset, subset) {\r\n    if (subset.size > mainset.size || subset.size === 0) {\r\n      return false\r\n    }\r\n\r\n    let elements = mainset.values()\r\n    let element = elements.next()\r\n\r\n    while (!element.done) {\r\n      if (!mainset.has(element.value)) {\r\n        return false\r\n      }\r\n\r\n      element = elements.next()\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Join any number of sets together into a single aggregate set.\r\n   * Only unique values will be added.\r\n   * Accepts any number of Set arguments.\r\n   * @return {Set}\r\n   */\r\n  static concat () {\r\n    let aggregate = new Set(arguments[0])\r\n\r\n    for (let i = 1; i < arguments.length; i++) {\r\n      let elements = arguments[i].values()\r\n      let element = elements.next()\r\n\r\n      while (!element.done) {\r\n        aggregate.add(element.value)\r\n        element = elements.next()\r\n      }\r\n    }\r\n\r\n    return aggregate\r\n  }\r\n\r\n  /**\r\n   * Identify the intersection/overlap between two sets.\r\n   * @param  {Set} setA\r\n   * @param  {Set} setB\r\n   * @return {Set}\r\n   * Returns a Set containing the common elements of setA and setB.\r\n   */\r\n  static intersection (setA, setB) {\r\n    let intersection = new Set()\r\n    let a = setA.size < setB.size ? setA : setB\r\n    let b = setA.size < setB.size ? setB : setA\r\n    let elements = a.values()\r\n    let element = elements.next()\r\n\r\n    while (!element.done) {\r\n      if (b.has(element.value)) {\r\n        intersection.add(element.value)\r\n      }\r\n\r\n      element = elements.next()\r\n    }\r\n\r\n    return intersection\r\n  }\r\n\r\n  /**\r\n   * Identify the elements that are NOT part of both sets.\r\n   * @param  {Set} setA\r\n   * @param  {Set} setB\r\n   * @return {Set}\r\n   * Returns a set containing elements that are NOT common between setA and setB.\r\n   */\r\n  static difference (setA, setB) {\r\n    let diff = new Set(setA)\r\n    let elements = setB.values()\r\n    let element = elements.next()\r\n\r\n    while (!element.done) {\r\n      diff.delete(element.value)\r\n      element = elements.next()\r\n    }\r\n\r\n    return diff\r\n  }\r\n\r\n  /**\r\n   * Determines whether two sets contain the same values.\r\n   * @param  {Set} setA\r\n   * @param  {Set} setB\r\n   * @return {Boolean}\r\n   */\r\n  static equal (setA, setB) {\r\n    return NGN.UTILITY.Set.difference(setA, setB).size === 0\r\n  }\r\n\r\n  static equals () {\r\n    NGN.WARN('NGN.UTILITY.Set.equals() should be equal() (no s at the end).')\r\n    NGN.UTILITY.Set.equal(...arguments)\r\n  }\r\n\r\n  /**\r\n   * A convenience method for appending the Set prototype with all\r\n   * of the methods in this utility, where the first argument of\r\n   * each method automatically refers to the Set.\r\n   * @private\r\n   */\r\n  static applyAll () {\r\n    Set.prototype.isSuperSet = function (subset) { // eslint-disable-line no-extend-native\r\n      return NGN.UTILITY.Set.isSuperSet(this, subset)\r\n    }\r\n\r\n    Set.prototype.concat = function () { // eslint-disable-line no-extend-native\r\n      return NGN.UTILITY.Set.concat(this, ...arguments)\r\n    }\r\n\r\n    Set.prototype.intersection = function () { // eslint-disable-line no-extend-native\r\n      return NGN.UTILITY.Set.intersection(this, ...arguments)\r\n    }\r\n\r\n    Set.prototype.difference = function () { // eslint-disable-line no-extend-native\r\n      return NGN.UTILITY.Set.difference(this, ...arguments)\r\n    }\r\n\r\n    Set.prototype.equals = function () { // eslint-disable-line no-extend-native\r\n      return NGN.UTILITY.Set.equal(this, ...arguments)\r\n    }\r\n  }\r\n}\r\n","let hostname\r\n/* node-only */\r\nhostname = require('os').hostname() // eslint-disable-line comma-style\r\n/* end-node-only */\r\n/* browser-only */\r\nhostname = window.location.host // eslint-disable-line comma-style\r\n/* end-browser-only */\r\n\r\n// CONSTANTS USED INTERNALLY\r\n// Normalize URL syntax\r\nconst normalizeUrl = function (url) { // eslint-disable-line no-unused-vars\r\n  let uri = []\r\n\r\n  let protocol = /^(.*)\\:\\/.*/.exec(url)\r\n\r\n  protocol = protocol.length > 0 ? protocol[1] : null\r\n\r\n  if (protocol) {\r\n    url = url.replace(new RegExp(`${protocol}\\\\:\\\\/+`, 'i'), '')\r\n  }\r\n\r\n  url = url.split('/')\r\n\r\n  for (let i = 0; i < url.length; i++) {\r\n    if (url[i] === '..') {\r\n      uri.pop()\r\n    } else if (url[i] !== '.' && url[i].trim().length > 0) {\r\n      uri.push(url[i])\r\n    }\r\n  }\r\n\r\n  uri = uri.join('/').replace(/:\\/{3,50}/gi, '://')\r\n\r\n  // Handle query parameter normalization\r\n  let match = /(.*:\\/\\/.*)[?](.*)/.exec(uri)\r\n  let path = match === null ? uri : match[1]\r\n  let queryString = match !== null ? match[2] : ''\r\n\r\n  uri = path\r\n\r\n  if (queryString.trim().length > 0) {\r\n    let params = {}\r\n\r\n    queryString.split('&').forEach(attr => {\r\n      let keypair = attr.split('=')\r\n      params[keypair[0]] = keypair.length > 1 ? keypair[1] : null\r\n    })\r\n\r\n    queryString = []\r\n    Object.keys(params).forEach((param, i) => {\r\n      queryString.push(`${param}${params[param] !== null ? '=' + encodeURIComponent(params[param]) : ''}`)\r\n    })\r\n\r\n    uri = `${uri}?${queryString.join('&')}`\r\n  }\r\n\r\n  return protocol ? `${protocol}://${uri}` : uri\r\n}\r\n\r\nlet networkInterfaces = [\r\n  '127.0.0.1'\r\n  , 'localhost' // eslint-disable-line comma-style\r\n  /* node-only */\r\n  , require('os').hostname() // eslint-disable-line comma-style\r\n  /* end-node-only */\r\n  /* browser-only */\r\n  , window.location.host // eslint-disable-line comma-style\r\n  /* end-browser-only */\r\n]\r\n\r\n/* node-only */\r\n// Retreive local IP's and hostnames\r\nlet data = require('os').networkInterfaces()\r\nlet interfaces = Object.keys(data)\r\n\r\nfor (let i = 0; i < interfaces.length; i++) {\r\n  let iface = data[interfaces[i]]\r\n\r\n  for (let x = 0; x < iface.length; x++) {\r\n    if (iface[x].family === 'IPv4') {\r\n      networkInterfaces.push(iface[x].address)\r\n    }\r\n  }\r\n}\r\n/* end-node-only */\r\n\r\nnetworkInterfaces = NGN.dedupe(networkInterfaces)\r\n\r\nconst HttpMethods = [ // eslint-disable-line no-unused-vars\r\n  'OPTIONS',\r\n  'HEAD',\r\n  'GET',\r\n  'POST',\r\n  'PUT',\r\n  'DELETE',\r\n  'TRACE',\r\n  'CONNECT'\r\n]\r\n\r\nexport { hostname, normalizeUrl, networkInterfaces, HttpMethods }\r\n","import { hostname, normalizeUrl, HttpMethods, networkInterfaces } from './utility'\r\n\r\n/**\r\n * @class NGN.NET.Request\r\n * Represents a network request. This class can be used\r\n * to create and manipulate HTTP requests, but it does not\r\n * actually transmit them. To send the request, use NGN.NET#request\r\n * or one of the many common helper methods.\r\n * @private\r\n */\r\nexport default class Request { // eslint-disable-line no-unused-vars\r\n  constructor (cfg) {\r\n    cfg = cfg || {}\r\n\r\n    // Require URL and HTTP method\r\n    NGN.objectRequires(cfg, 'url')\r\n\r\n    if (NGN.objectHasAny(cfg, 'form', 'json')) {\r\n      NGN.WARN('NET.Request', '\"form\" and \"json\" configuration properties are not valid. Use \"body\" instead.')\r\n    }\r\n\r\n    Object.defineProperties(this, {\r\n      UrlPattern: NGN.privateconst(new RegExp('^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?')),\r\n\r\n      /**\r\n       * @cfgproperty {string} url (required)\r\n       * The complete URL for the request, including query parameters.\r\n       */\r\n      uri: NGN.private(null),\r\n\r\n      /**\r\n       * @cfg {string} [method=GET]\r\n       * The HTTP method to invoke when the request is sent. The standard\r\n       * RFC 2616 HTTP methods include:\r\n       *\r\n       * - OPTIONS\r\n       * - HEAD\r\n       * - GET\r\n       * - POST\r\n       * - PUT\r\n       * - DELETE\r\n       * - TRACE\r\n       * - CONNECT\r\n       *\r\n       * There are many additional non-standard methods some remote hosts\r\n       * will accept, including `PATCH`, `COPY`, `LINK`, `UNLINK`, `PURGE`,\r\n       * `LOCK`, `UNLOCK`, `VIEW`, and many others. If the remote host\r\n       * supports these methods, they may be used in an NGN.NET.Request.\r\n       * Non-standard methods will not be prevented, but NGN will trigger\r\n       * a warning event if a non-standard request is created.\r\n       */\r\n      httpmethod: NGN.private(null),\r\n\r\n      /**\r\n       * @cfg {boolean} [enforceMethodSafety=true]\r\n       * According to [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html),\r\n       * some HTTP methods are considered idempotent (safe). These methods\r\n       * should have no significance to data (i.e. read-only). For example,\r\n       * `OPTIONS`, `HEAD`, and `GET` are all idempotent. By default, NGN.NET\r\n       * loosely enforces idempotence by ignoring the #body when making a\r\n       * request. While it is not advised, nor officially supported, NGN.NET can\r\n       * technically ignore method safety, allowing a request body to be\r\n       * sent to a remote server. Set this configuration to `false` to\r\n       * prevent NGN.NET from enforcing idempotence/safety.\r\n       */\r\n      enforceMethodSafety: NGN.private(NGN.coalesce(cfg.enforceMethodSafety, cfg.enforcemethodsafety, true)),\r\n\r\n      /**\r\n       * @cfg {object} [headers]\r\n       * Optionally supply custom headers for the request. Most standard\r\n       * headers will be applied automatically (when appropriate), such\r\n       * as `Content-Type`, `Content-Length`, and `Authorization`.\r\n       * In Node-like environments, a `User-Agent` will be applied containing\r\n       * the `hostname` of the system making the request. Any custom headers\r\n       * supplied will override headers managed by NGN.NET.\r\n       */\r\n      headers: NGN.public(NGN.coalesceb(cfg.headers)),\r\n\r\n      /**\r\n       * @cfg {object|string|binary} [body]\r\n       * The body configuration supports text, an object, or a data URL or\r\n       * binary content. **For multi-part form data (file uploads), use\r\n       * the #files configuration _instead_ of this attribute.**\r\n       *\r\n       * It is also possible to construct a simple form submission\r\n       * (x-www-form-urlencoded) from a specially formatted key/value object\r\n       * conforming to the following syntax:\r\n       *\r\n       * ```json\r\n       * {\r\n       *   form: {\r\n       *     form_field_1: \"value\",\r\n       *     form_field_2: \"value\",\r\n       *     form_field_3: \"value\",\r\n       *   }\r\n       * }\r\n       * ```\r\n       * The object above will be automatically converted & url-encoded as:\r\n       *\r\n       * ```js\r\n       * form_field_1=value&form_field_2=value&form_field_3=value\r\n       * ```\r\n       *\r\n       * The appropriate request headers are automatically applied.\r\n       */\r\n      requestbody: NGN.public(NGN.coalesce(cfg.body)),\r\n\r\n      /**\r\n       * @cfgproperty {string} username\r\n       * A username to authenticate the request with (basic auth).\r\n       */\r\n      user: NGN.private(NGN.coalesceb(cfg.username)),\r\n\r\n      /**\r\n       * @cfgproperty {string} password\r\n       * A password to authenticate the request with (basic auth).\r\n       * @readonly\r\n       */\r\n      secret: NGN.private(NGN.coalesceb(cfg.password)),\r\n\r\n      /**\r\n       * @cfgproperty {string} accessToken\r\n       * An access token to authenticate the request with (Bearer auth).\r\n       * If this is configured, it will override any basic auth settings.\r\n       */\r\n      bearerAccessToken: NGN.private(NGN.coalesceb(cfg.accessToken)),\r\n\r\n      /**\r\n       * @cfgproperty {boolean} [withCredentials=false]\r\n       * Indicates whether or not cross-site `Access-Control` requests should\r\n       * be made using credentials such as cookies, authorization headers or\r\n       * TLS client certificates. Setting `withCredentials` has no effect on\r\n       * same-site requests.\r\n       *\r\n       * In addition, this flag is also used to indicate when cookies are to\r\n       * be ignored in the response. The default is `false`. XMLHttpRequest\r\n       * from a different domain cannot set cookie values for their own\r\n       * domain unless `withCredentials` is set to true before making the\r\n       * request. The third-party cookies obtained by setting `withCredentials`\r\n       * to true will still honor same-origin policy and hence can not be\r\n       * accessed by the requesting script through\r\n       * [document.cookie](https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie)\r\n       * or from response headers.\r\n       */\r\n      withCredentials: NGN.private(NGN.coalesce(cfg.withCredentials, false)),\r\n\r\n      /**\r\n       * @cfgproperty {Number} [timeout=30000]\r\n       * The number of milliseconds to wait before considering the request to\r\n       * have timed out. Defaults to `30000` (30 seconds).\r\n       */\r\n      timeout: NGN.public(NGN.coalesce(cfg.timeout, 30000)),\r\n\r\n      /**\r\n       * @method timer\r\n       * A placeholder for a timeout monitor.\r\n       * @private\r\n       */\r\n      timer: NGN.private(null),\r\n\r\n      /**\r\n       * @method isCrossOrigin\r\n       * Determine if accessing a URL is considered a cross origin request.\r\n       * @param {string} url\r\n       * The URL to identify as a COR.\r\n       * @returns {boolean}\r\n       * @private\r\n       */\r\n      isCrossOrigin: NGN.privateconst(function (url) {\r\n        /* node-only */\r\n        if (networkInterfaces.indexOf(this.host) < 0) {\r\n          return true\r\n        }\r\n        /* end-node-only */\r\n\r\n        return this.host !== hostname // eslint-disable-line no-undef\r\n      }),\r\n\r\n      /**\r\n       * @method applyAuthorizationHeader\r\n       * Generates and applies the authorization header for the request,\r\n       * based on the presence of #username, #password, or #accessToken.\r\n       * @private\r\n       */\r\n      applyAuthorizationHeader: NGN.privateconst(() => {\r\n        if (NGN.coalesceb(this.bearerAccessToken) !== null) {\r\n          this.setHeader('Authorization', `Bearer ${this.bearerAccessToken}`, true)\r\n        } else if (NGN.coalesceb(this.user) && NGN.coalesceb(this.secret)) {\r\n          this.setHeader('Authorization', this.basicAuthToken(this.user, this.secret), true)\r\n        }\r\n      }),\r\n\r\n      /**\r\n       * @method basicAuthToken\r\n       * Generates a basic authentication token from a username and password.\r\n       * @return {[type]} [description]\r\n       * @private\r\n       */\r\n      basicAuthToken: NGN.privateconst((user, secret) => {\r\n        // Binary to base64-ascii conversions\r\n        /* node-only */\r\n        return 'Basic ' + Buffer.from(`${user}:${secret}`, 'binary').toString('base64')\r\n        /* end-node-only */\r\n        /* browser-only */\r\n        return 'Basic ' + NGN.global.btoa(`${user}:${secret}`) // eslint-disable-line no-unreachable\r\n        /* end-browser-only */\r\n      }),\r\n\r\n      /**\r\n       * @method parseUri\r\n       * Parses the URI into composable parts.\r\n       * @param {string} URL\r\n       * The URI/URL to parse.\r\n       * @return {Object}\r\n       * Returns a key/value object:\r\n       *\r\n       * ```js\r\n       * {\r\n       *   protocol: 'http',\r\n       *   hostname: 'domain.com',\r\n       *   path: '/path/to/file.html',\r\n       *   query: 'a=1&b=2',\r\n       *   hash: null\r\n       * }\r\n       * ```\r\n       * @private\r\n       */\r\n      parseUri: NGN.privateconst(uri => {\r\n        let part = uri.match(this.UrlPattern)\r\n        let protocol\r\n        /* node-only */\r\n        protocol = 'http'\r\n        /* end-node-only */\r\n        /* browser-only */\r\n        protocol = window.location.protocol.replace(':', '').toLowerCase()\r\n        /* end-browser-only */\r\n        let url = {\r\n          protocol: NGN.coalesce(part[2], protocol),\r\n          hostname: NGN.coalesce(part[4], hostname),\r\n          path: NGN.coalesceb(part[5], '/'),\r\n          query: NGN.coalesceb(part[7]),\r\n          hash: NGN.coalesceb(part[9])\r\n        }\r\n\r\n        // URL contains a username/password.\r\n        if (url.hostname.indexOf('@') > 0) {\r\n          let credentials = uri.match(/^.*\\/{1,2}(.*):(.*)@/i)\r\n\r\n          url.hostname = url.hostname.split('@').pop()\r\n\r\n          this.user = credentials[1]\r\n          this.secret = credentials[2]\r\n          this.applyAuthorizationHeader()\r\n        }\r\n\r\n        url.port = NGN.coalesce(url.hostname.match(/:([0-9]{1,6})/), url.protocol === 'https' ? 443 : 80)\r\n\r\n        if (url.hostname.indexOf(':') > 0) {\r\n          url.hostname = url.hostname.split(':')[0]\r\n        }\r\n\r\n        if (url.path.charAt(0) !== '/') {\r\n          url.path = `/${url.path}`\r\n        }\r\n\r\n        return url\r\n      }),\r\n\r\n      uriParts: NGN.private(null),\r\n\r\n      /**\r\n       * @cfgproperty {Number} [maxRedirects=10]\r\n       * Set the maximum number of redirects. There is a hard-cap of 25\r\n       * redirects to prevent cyclic requests (endless loop).\r\n       */\r\n      maximumRedirects: NGN.private(10),\r\n      redirectAttempts: NGN.private(0),\r\n\r\n      prepareBody: NGN.private(() => {\r\n        // Request body management\r\n        if (this.requestbody !== null) {\r\n          if (this.headers === null) {\r\n            this.headers = {}\r\n          }\r\n\r\n          let contentType = NGN.coalesceb(this.headers['Content-Type'], this.headers['content-type'], this.headers['Content-type'])\r\n\r\n          if (typeof this.requestbody === 'object') {\r\n            if (NGN.objectHasExactly(this.requestbody, 'form')) {\r\n              let form = this.requestbody.form\r\n              let keys = Object.keys(form)\r\n              let dataString = []\r\n\r\n              for (let i = 0; i < keys.length; i++) {\r\n                if (NGN.isFn(form[keys[i]])) {\r\n                  throw new Error('Invalid form data. Form data cannot be a complex data format such as an object or function.')\r\n                } else if (typeof form[keys[i]] === 'object') {\r\n                  dataString.push(`${keys[i]}=${encodeURIComponent(JSON.stringify(form[keys[i]]))}`)\r\n                } else {\r\n                  dataString.push(`${keys[i]}:${encodeURIComponent(form[keys[i]])}`)\r\n                }\r\n              }\r\n\r\n              this.requestbody = dataString.join('&')\r\n            } else {\r\n              this.requestbody = JSON.stringify(this.requestbody).trim()\r\n              this.setHeader('Content-Length', this.requestbody.length, false)\r\n              this.setHeader('Content-Type', NGN.coalesceb(contentType, 'application/json'), false)\r\n            }\r\n          }\r\n\r\n          if (typeof this.requestbody === 'string') {\r\n            if (contentType !== null) {\r\n              // Check for form data\r\n              let match = /([^=]+)=([^&]+)/.exec(this.requestbody)\r\n\r\n              if (match !== null && this.requestbody.trim().substr(0, 5).toLowerCase() !== 'data:' && this.requestbody.trim().substr(0, 1).toLowerCase() !== '<') {\r\n                this.setHeader('Content-Type', 'application/x-www-form-urlencoded', false)\r\n              } else {\r\n                this.setHeader('Content-Type', 'text/plain')\r\n\r\n                if (this.requestbody.trim().substr(0, 5).toLowerCase() === 'data:') {\r\n                  // Crude Data URL mimetype detection\r\n                  match = /^data:(.*);/gi.exec(this.requestbody.trim())\r\n\r\n                  if (match !== null) {\r\n                    this.setHeader('Content-Type', match[1])\r\n                  }\r\n                } else if (/^<\\?xml.*/gi.test(this.requestbody.trim())) {\r\n                  // Crude XML Detection\r\n                  this.setHeader('Content-Type', 'application/xml')\r\n                } else if (/^<html.*/gi.test(this.requestbody.trim())) {\r\n                  // Crude HTML Detection\r\n                  this.setHeader('Content-Type', 'text/html')\r\n                }\r\n              }\r\n            }\r\n\r\n            this.setHeader('Content-Type', this.requestbody.length, false)\r\n          } else {\r\n            NGN.WARN('NET.Request.body', `The request body must cannot be ${typeof this.requestbody}. Please provide a string, object, or binary value for the body.`)\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    if (cfg.maxRedirects) {\r\n      this.maxRedirects = cfg.maxRedirects\r\n    }\r\n\r\n    this.url = cfg.url\r\n    this.method = NGN.coalesceb(cfg.method, 'GET')\r\n\r\n    this.prepareBody()\r\n\r\n    // Apply authorization if applicable\r\n    if (NGN.coalesce(this.user, this.secret, this.bearerAccessToken) !== null) {\r\n      this.applyAuthorizationHeader()\r\n    }\r\n  }\r\n\r\n  get maxRedirects () {\r\n    return this.maximumRedirects\r\n  }\r\n\r\n  set maxRedirects (value) {\r\n    if (value > 25) {\r\n      value = 25\r\n    }\r\n\r\n    if (value < 0) {\r\n      value = 0\r\n    }\r\n\r\n    this.maximumRedirects = value\r\n  }\r\n\r\n  /**\r\n   * @property {string} protocol\r\n   * The protocol used to make the request.\r\n   * @readonly\r\n   */\r\n  get protocol () {\r\n    return NGN.coalesce(this.uriParts.protocol, 'http')\r\n  }\r\n\r\n  /**\r\n   * @property {string} host\r\n   * The hostname/domain of the request.\r\n   */\r\n  get host () {\r\n    return NGN.coalesce(this.uriParts.hostname)\r\n  }\r\n\r\n  get hostname () {\r\n    return this.host\r\n  }\r\n\r\n  /**\r\n   * @property {number} port\r\n   * The port of the remote host.\r\n   */\r\n  get port () {\r\n    return this.uriParts.port\r\n  }\r\n\r\n  /**\r\n   * @property {string} path\r\n   * The pathname of the URL.\r\n   */\r\n  get path () {\r\n    return NGN.coalesce(this.uriParts.path, '/')\r\n  }\r\n\r\n  /**\r\n   * @property {string} query\r\n   * The raw query string of the URI. To retrieve a key/value list,\r\n   * use #queryParameters instead.\r\n   */\r\n  get query () {\r\n    return NGN.coalesce(this.uriParts.query, '')\r\n  }\r\n\r\n  /**\r\n   * @property {object} queryParameters\r\n   * Returns a key/value object containing the URL query parameters of the\r\n   * request, as defined in the #url. The paramter values (represented as keys\r\n   * in this object) may be modified, but not removed (use removeQueryParameter\r\n   * to delete a query parameter). No new query parameters can be added (use\r\n   * setQueryParameter instead).\r\n   * @readonly\r\n   */\r\n  get queryParameters () {\r\n    let params = this.query.split('&')\r\n    let resultSet = {}\r\n\r\n    for (let i = 0; i < params.length; i++) {\r\n      let keypair = params[i].split('=')\r\n      let attr = `__qp__${keypair[0]}__qp__`\r\n\r\n      Object.defineProperty(resultSet, attr, {\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: true,\r\n        value: NGN.coalesceb(keypair[1])\r\n      })\r\n\r\n      Object.defineProperty(resultSet, keypair[0], {\r\n        enumerable: true,\r\n        configurable: false,\r\n        get: () => { return resultSet[attr] },\r\n        set: (value) => {\r\n          resultSet[attr] = value\r\n          this.setQueryParameter(keypair[0], value, true)\r\n        }\r\n      })\r\n    }\r\n\r\n    return resultSet\r\n  }\r\n\r\n  /**\r\n   * @property hash\r\n   * The hash part of the URL (i.e. everything after the trailing `#`).\r\n   */\r\n  get hash () {\r\n    return NGN.coalesce(this.uriParts.hash, '')\r\n  }\r\n\r\n  /**\r\n   * @property {string} url\r\n   * The URL where the request will be sent.\r\n   */\r\n  get url () {\r\n    return this.uri\r\n  }\r\n\r\n  set url (value) {\r\n    if (NGN.coalesceb(value) === null) {\r\n      NGN.WARN('NET.Request.url', 'A blank URL was identified for a request.')\r\n    }\r\n\r\n    // If a relative URL is provided in a browser context, prepend\r\n    // the current browser location to the URI.\r\n    if (/^.*\\:\\/{2}/i.exec(value) === null && /^\\.{1,2}\\/.*/.exec(value) !== null && NGN.global.hasOwnProperty('location')) {\r\n      let loc = NGN.global.location\r\n      let href = `${loc.host}${loc.pathname}`\r\n\r\n      href = href.split('/')\r\n\r\n      if (href[href.length - 1].indexOf('.') >= 0) {\r\n        href.pop()\r\n      }\r\n\r\n      href = href.join('/')\r\n      href = href.substring(0, href.lastIndexOf('/') + 1)\r\n\r\n      value = `${NGN.global.location.protocol}//${href}/${value}`.replace(/\\/{2,1000000}/i, '/')\r\n    }\r\n\r\n    this.uri = normalizeUrl(value.trim())\r\n    this.uriParts = this.parseUri(this.uri)\r\n  }\r\n\r\n  get method () {\r\n    return this.httpmethod\r\n  }\r\n\r\n  set method (value) {\r\n    if (this.httpmethod === value) {\r\n      return\r\n    }\r\n\r\n    if (NGN.coalesceb(value) === null) {\r\n      NGN.WARN('NET.Request.method', 'No HTTP method specified.')\r\n    }\r\n\r\n    value = value.trim().toUpperCase()\r\n\r\n    if (HttpMethods.indexOf(value) < 0) {\r\n      NGN.WARN('NET.Request.method', `A non-standard HTTP method was recognized in a request: ${value}.`)\r\n    }\r\n\r\n    this.httpmethod = value\r\n  }\r\n\r\n  get body () {\r\n    return this.requestbody\r\n  }\r\n\r\n  set body (value) {\r\n    this.requestbody = value\r\n    this.prepareBody()\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} crossOriginRequest\r\n   * Indicates the request will be made to a domain outside of the\r\n   * one hosting the request.\r\n   */\r\n  get crossOriginRequest () {\r\n    return this.isCrossOrigin(this.uri)\r\n  }\r\n\r\n  /**\r\n   * @property {string} username\r\n   * The username that will be used in any basic authentication operations.\r\n   */\r\n  get username () {\r\n    return NGN.coalesce(this.user)\r\n  }\r\n\r\n  set username (user) {\r\n    user = NGN.coalesceb(user)\r\n\r\n    if (this.user !== user) {\r\n      this.user = user\r\n\r\n      if (NGN.coalesceb(this.secret) !== null) {\r\n        this.applyAuthorizationHeader()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {string} password\r\n   * It is possible to set a password for any basic authentication operations,\r\n   * but it is not possible to read a password.\r\n   * @writeonly\r\n   */\r\n  set password (secret) {\r\n    secret = NGN.coalesceb(secret)\r\n\r\n    if (this.secret !== secret) {\r\n      this.secret = secret\r\n\r\n      if (NGN.coalesceb(this.user) !== null) {\r\n        this.applyAuthorizationHeader()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {string} accessToken\r\n   * Supply a bearer access token for basic authenticaiton operations.\r\n   * @writeonly\r\n   */\r\n  set accessToken (token) {\r\n    token = NGN.coalesceb(token)\r\n\r\n    if (this.bearerAccessToken !== token) {\r\n      this.bearerAccessToken = token\r\n      this.applyAuthorizationHeader()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method setHeader\r\n   * Add a header to the request.\r\n   * @param {string} header\r\n   * The name of the header.\r\n   * @param {string} value\r\n   * Value of the header.\r\n   * @param {Boolean} [overwriteExisting=true]\r\n   * If the header already exists, setting this to `false` will prevent\r\n   * the original header from being overwritten.\r\n   */\r\n  setHeader (key, value, overwriteExisting = true) {\r\n    key = key.replace(/'|\"/gi, '').toLowerCase()\r\n\r\n    if (this.headers === null || this.headers[key] === undefined || overwriteExisting) {\r\n      if (this.headers === null) {\r\n        this.headers = {}\r\n      }\r\n\r\n      this.headers[key] = value\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method getHeader\r\n   * @param  {string} header\r\n   * The name of the header to retrieve.\r\n   * @return {string}\r\n   * Returns the current value of the specified header.\r\n   */\r\n  getHeader (key) {\r\n    if (this.headers === null) {\r\n      return undefined\r\n    }\r\n\r\n    if (!this.headers.hasOwnProperty(key.toLowerCase())) {\r\n      return undefined\r\n    }\r\n\r\n    return this.headers[key.toLowerCase()]\r\n  }\r\n\r\n  /**\r\n   * @method removeHeader\r\n   * Removes a header from the request. Nothing happens if the header does\r\n   * not exist.\r\n   * @param  {string} header\r\n   * The header to remove.\r\n   */\r\n  removeHeader (key) {\r\n    if (this.headers !== null) {\r\n      delete this.headers[key.toLowerCase()]\r\n      delete this.headers[key]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method setQueryParameter\r\n   * Add a query parameter to the request.\r\n   * @param {string} parameter\r\n   * The name of the parameter.\r\n   * @param {string} value\r\n   * Value of the parameter. The value is automatically URL encoded. If the\r\n   * value is null, only the key will be added to the URL (ex: `http://domain.com/page.html?key`)\r\n   * @param {Boolean} [overwriteExisting=true]\r\n   * If the parameter already exists, setting this to `false` will prevent\r\n   * the original parameter from being overwritten.\r\n   */\r\n  setQueryParameter (key, value, overwriteExisting = true) {\r\n    let re = new RegExp(\"^.*(\\\\?|&)(\" + key + \".*)(&.*)$|^.*(\\\\?|&)(\" + key + \".*)$\", 'i') // eslint-disable-line quotes\r\n    let exists = (re.exec(this.uri) !== null)\r\n    let match\r\n\r\n    if (exists) {\r\n      if (!overwriteExisting) {\r\n        return\r\n      }\r\n\r\n      match = re.exec(this.uri)\r\n\r\n      if (match !== null) {\r\n        this.url = this.uri.replace(`${NGN.coalesceb(match[5], match[2])}`, `${key}${value !== null ? '=' + encodeURIComponent(value) : ''}`)\r\n      }\r\n    } else {\r\n      this.url = `${this.uri}${this.query.length === 0 ? '?' : '&'}${key}${value !== null ? '=' + encodeURIComponent(value) : ''}`\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method removeQueryParameter\r\n   * Remove a query parameter from the request URI.\r\n   * @param {string} key\r\n   */\r\n  removeQueryParameter (key) {\r\n    this.url = this.uri.replace(new RegExp(`${key}=(.[^&]+)|\\\\?${key}|&${key}`, 'gi'), '')\r\n  }\r\n\r\n  startMonitor () {\r\n    if (this.timer === null) {\r\n      this.timer = setTimeout(() => {\r\n        throw new Error('Timed out retrieving ' + this.url)\r\n      }, this.timeout)\r\n    }\r\n  }\r\n\r\n  stopMonitor () {\r\n    clearTimeout(this.timer)\r\n    this.timer = null\r\n  }\r\n\r\n  /**\r\n   * @method send\r\n   * Send the request.\r\n   * @param {Function} callback\r\n   * The callback is executed when the request is complete.\r\n   * @param {Object} callback.response\r\n   * The response object returned by the server.\r\n   */\r\n  send (callback) {\r\n    let body = this.body\r\n\r\n    // Disable body when safe methods are enforced.\r\n    if (NGN.coalesce(body)) {\r\n      if (this.enforceMethodSafety && 'OPTIONS|HEAD|GET'.indexOf(this.method) >= 0) {\r\n        body = null\r\n      }\r\n    }\r\n\r\n    /* node-only */\r\n    // Run request in Node-like environments\r\n    // Support local file system retrieval in node-like environments.\r\n    // This short-circuits the request and reads the file system instead.\r\n    if (this.protocol === 'file') {\r\n      if (!NGN.isFn(callback)) {\r\n        throw new Error('A callback is required when retrieving system files in a node-like environment.')\r\n      }\r\n\r\n      let response = {\r\n        status: require('fs').existsSync(this.uri.replace('file://', '')) ? 200 : 400\r\n      }\r\n\r\n      response.responseText = response.status === 200 ? require('fs').readFileSync(this.uri.replace('file://', '')).toString() : 'File does not exist or could not be found.'\r\n\r\n      return callback(response)\r\n    }\r\n\r\n    const http = this.protocol === 'https' ? require('https') : require('http')\r\n\r\n    let params = NGN.coalesceb(this.query)\r\n    let reqOptions = {\r\n      hostname: this.hostname,\r\n      port: this.port,\r\n      method: this.method,\r\n      headers: this.headers,\r\n      path: this.path\r\n    }\r\n\r\n    if (params !== null) {\r\n      reqOptions.path = `${this.path}?${params}`\r\n    }\r\n\r\n    const req = http.request(reqOptions, (response) => {\r\n      response.setEncoding('utf8')\r\n\r\n      let body = ''\r\n      response.on('data', (chunk) => {\r\n        body += chunk\r\n      })\r\n\r\n      response.on('end', () => {\r\n        switch (response.statusCode) {\r\n          case 301:\r\n          case 302:\r\n          case 307:\r\n          case 308:\r\n            if (this.redirectAttempts > this.maxRedirects) {\r\n              this.redirectAttempts = 0\r\n\r\n              this.stopMonitor()\r\n\r\n              return callback({ // eslint-disable-line standard/no-callback-literal\r\n                status: 500,\r\n                statusText: 'Too many redirects',\r\n                responseText: 'Too many redirects',\r\n                responseXML: 'Too many redirects',\r\n                readyState: 4\r\n              })\r\n            }\r\n\r\n            if (response.headers.location === undefined) {\r\n              this.stopMonitor()\r\n\r\n              return callback({ // eslint-disable-line standard/no-callback-literal\r\n                status: 502,\r\n                statusText: 'Bad Gateway',\r\n                responseText: 'Bad Gateway',\r\n                responseXML: 'Bad Gateway',\r\n                readyState: 4\r\n              })\r\n            }\r\n\r\n            this.redirectAttempts++\r\n            this.url = response.headers.location\r\n\r\n            return this.send(callback)\r\n\r\n          default:\r\n            this.stopMonitor()\r\n\r\n            return callback({ // eslint-disable-line standard/no-callback-literal\r\n              status: response.statusCode,\r\n              statusText: NGN.coalesce(response.statusText),\r\n              responseText: body,\r\n              responseXML: body,\r\n              readyState: 4\r\n            })\r\n        }\r\n      })\r\n    })\r\n\r\n    req.on('error', (err) => {\r\n      this.stopMonitor()\r\n\r\n      if (NGN.isFn(callback)) {\r\n        callback({ // eslint-disable-line standard/no-callback-literal\r\n          status: 400,\r\n          statusText: err.message,\r\n          responseText: err.message,\r\n          responseXML: err.message,\r\n          readyState: 0\r\n        })\r\n      } else {\r\n        throw err\r\n      }\r\n    })\r\n\r\n    this.startMonitor()\r\n\r\n    if (this.body) {\r\n      req.write(this.body)\r\n    }\r\n\r\n    req.end()\r\n    /* end-node-only */\r\n    /* browser-only */\r\n    let xhr = new XMLHttpRequest()\r\n    let responded = false\r\n    let me = this\r\n\r\n    // Apply readystate change handler\r\n    xhr.onreadystatechange = function () {\r\n      if (responded) {\r\n        return\r\n      }\r\n\r\n      if (xhr.readyState === XMLHttpRequest.DONE) {\r\n        responded = true\r\n\r\n        if (xhr.status === 0) {\r\n          NGN.WARN(`Request Error: ${me.method} ${me.url} (likely a CORS issue).`)\r\n        }\r\n\r\n        if (NGN.isFn(callback)) {\r\n          callback(xhr)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Apply error handler\r\n    xhr.onerror = function (e) {\r\n      NGN.WARN('NET.error', e)\r\n\r\n      if (!responded && NGN.isFn(callback)) {\r\n        callback(xhr)\r\n      }\r\n\r\n      responded = true\r\n    }\r\n\r\n    xhr.ontimeout = function (e) {\r\n      responded = true\r\n      callback(xhr)\r\n    }\r\n\r\n    xhr.timeout = this.timeout\r\n\r\n    // Open the request\r\n    xhr.open(this.method, this.url, true)\r\n\r\n    // Apply withCredentials\r\n    xhr.withCredentials = this.withCredentials\r\n\r\n    // Apply Request Headers\r\n    if (this.headers !== null) {\r\n      let headers = Object.keys(this.headers)\r\n      for (let i = 0; i < headers.length; i++) {\r\n        xhr.setRequestHeader(headers[i], this.headers[headers[i]])\r\n      }\r\n    }\r\n\r\n    // Write the body (which may be null) & send the request\r\n    xhr.send(body)\r\n    /* end-browser-only */\r\n  }\r\n}\r\n","import { hostname } from './utility'\r\nimport Request from './Request'\r\n\r\nexport default class Network { // eslint-disable-line\r\n  constructor () {\r\n    Object.defineProperties(this, {\r\n      /**\r\n       * @method parseRequestConfiguration\r\n       * Prepare common configuration attributes for a request.\r\n       * @return {NGN.NET.Request}\r\n       * @private\r\n       */\r\n      parseRequestConfiguration: NGN.private((cfg, method = 'GET') => {\r\n        if (typeof cfg === 'string') {\r\n          cfg = {\r\n            url: cfg\r\n          }\r\n        }\r\n\r\n        cfg = cfg || {}\r\n        cfg.method = method\r\n        cfg.url = NGN.coalesceb(cfg.url, hostname) // eslint-disable-line no-undef\r\n\r\n        return new NGN.NET.Request(cfg)\r\n      }),\r\n\r\n      // Returns a scoped method for sending the request, after preparing it.\r\n      makeRequest: NGN.private((method) => {\r\n        const me = this\r\n\r\n        return function () {\r\n          let args = NGN.slice(arguments)\r\n          let callback\r\n\r\n          if (NGN.isFn(args[args.length - 1])) {\r\n            callback = args.pop()\r\n          }\r\n\r\n          args.push(method)\r\n\r\n          let request = me.parseRequestConfiguration(...args)\r\n\r\n          // Send the request\r\n          me.send(request, callback)\r\n        }\r\n      }),\r\n\r\n      // Helper aliases (undocumented)\r\n      OPTIONS: NGN.privateconst(this.options.bind(this)),\r\n      HEAD: NGN.privateconst(this.head.bind(this)),\r\n      GET: NGN.privateconst(this.get.bind(this)),\r\n      POST: NGN.privateconst(this.post.bind(this)),\r\n      PUT: NGN.privateconst(this.put.bind(this)),\r\n      DELETE: NGN.privateconst(this.delete.bind(this)),\r\n      TRACE: NGN.privateconst(this.trace.bind(this)),\r\n      JSON: NGN.privateconst(this.json.bind(this)),\r\n      JSONP: NGN.privateconst(this.jsonp.bind(this))\r\n    })\r\n  }\r\n\r\n  get Request () {\r\n    return Request\r\n  }\r\n\r\n  /**\r\n   * @method request\r\n   * Send a request. In most cases, it is easier to use one of the built-in\r\n   * request functions (#get, #post, #put, #delete, #json, etc). This method\r\n   * is available for creating custom requests.\r\n   * @param  {Object} configuration\r\n   * Provide a #NGN.NET.Request configuration.\r\n   * @param  {Function} callback\r\n   * The callback to execute when the request is complete.\r\n   */\r\n  request (cfg, callback) {\r\n    cfg = cfg || {}\r\n    cfg.method = NGN.coalesceb(cfg.method, 'GET')\r\n\r\n    if (NGN.isFn(this[cfg.method])) {\r\n      this.makeRequest(cfg.method)(...arguments)\r\n    } else {\r\n      this.send(new NGN.NET.Request(cfg), callback)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method options\r\n   * Issue a `OPTIONS` request.\r\n   * @param {string|object} url\r\n   * The URL to issue the request to, or a configuration object.\r\n   * The configuration object accepts all of the #NGN.NET.Request\r\n   * configuration options (except method, which is defined automatically).\r\n   * @param {Function} callback\r\n   * A callback method to run when the request is complete.\r\n   * This receives the response object as the only argument.\r\n   */\r\n  options () {\r\n    this.makeRequest('OPTIONS').apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * @method head\r\n   * Issue a `HEAD` request.\r\n   * @param {string|object} url\r\n   * The URL to issue the request to, or a configuration object.\r\n   * The configuration object accepts all of the #NGN.NET.Request\r\n   * configuration options (except method, which is defined automatically).\r\n   * @param {Function} callback\r\n   * A callback method to run when the request is complete.\r\n   * This receives the response object as the only argument.\r\n   */\r\n  head () {\r\n    this.makeRequest('HEAD').apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * @method get\r\n   * Issue a `GET` request.\r\n   * @param {string|object} url\r\n   * The URL to issue the request to.\r\n   * The configuration object accepts all of the #NGN.NET.Request\r\n   * configuration options (except method, which is defined automatically).\r\n   * @param {Function} callback\r\n   * A callback method to run when the request is complete.\r\n   * This receives the response object as the only argument.\r\n   */\r\n  get () {\r\n    this.makeRequest('GET').apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * @method post\r\n   * Issue a `POST` request.\r\n   * @param {string|object} url\r\n   * The URL to issue the request to.\r\n   * The configuration object accepts all of the #NGN.NET.Request\r\n   * configuration options (except method, which is defined automatically).\r\n   * @param {Function} callback\r\n   * A callback method to run when the request is complete.\r\n   * This receives the response object as the only argument.\r\n   */\r\n  post () {\r\n    this.makeRequest('POST').apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * @method put\r\n   * Issue a `PUT` request.\r\n   * @param {string|object} url\r\n   * The URL to issue the request to.\r\n   * The configuration object accepts all of the #NGN.NET.Request\r\n   * configuration options (except method, which is defined automatically).\r\n   * @param {Function} callback\r\n   * A callback method to run when the request is complete.\r\n   * This receives the response object as the only argument.\r\n   */\r\n  put () {\r\n    this.makeRequest('PUT').apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * @method delete\r\n   * Issue a `DELETE` request.\r\n   * @param {string|object} url\r\n   * The URL to issue the request to.\r\n   * The configuration object accepts all of the #NGN.NET.Request\r\n   * configuration options (except method, which is defined automatically).\r\n   * @param {Function} callback\r\n   * A callback method to run when the request is complete.\r\n   * This receives the response object as the only argument.\r\n   */\r\n  delete () {\r\n    this.makeRequest('DELETE').apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * @method trace\r\n   * Issue a `TRACE` request. This is a debugging method, which\r\n   * echoes input back to the user. It is a standard HTTP method,\r\n   * but considered a security risk by many practioners and may\r\n   * not be supported by remote hosts.\r\n   * @param {string|object} url\r\n   * The URL to issue the request to.\r\n   * The configuration object accepts all of the #NGN.NET.Request\r\n   * configuration options (except method, which is defined automatically).\r\n   * @param {Function} callback\r\n   * A callback method to run when the request is complete.\r\n   * This receives the response object as the only argument.\r\n   */\r\n  trace () {\r\n    NGN.WARN('NGN.NET.Request.method', 'An HTTP TRACE request was made.')\r\n    this.makeRequest('TRACE').apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * @method json\r\n   * This is a shortcut method for creating a `GET` request and\r\n   * auto-processing the response body into a JSON object.\r\n   * @param  {string} url\r\n   * The URL to issue the request to.\r\n   * @param  {Function} callback\r\n   * This receives a JSON response object from the server.\r\n   * @param {Error} callback.error\r\n   * If the request cannot be completed for any reason, this argument will be\r\n   * populated with the error. If the request is successful, this will be `null`.\r\n   * @param {Object} callback.data\r\n   * The JSON response from the remote URL.\r\n   */\r\n  json (url, callback) {\r\n    if (!NGN.isFn(callback)) {\r\n      throw new Error('NGN.NET.json requires a callback method.')\r\n    }\r\n\r\n    // Request method is \"GET\"\r\n    let request = this.parseRequestConfiguration({url})\r\n\r\n    this.preflight(request)\r\n\r\n    request.send((response) => {\r\n      try {\r\n        let responseData = JSON.parse(response.responseText)\r\n        callback(null, responseData)\r\n      } catch (e) {\r\n        e.response = NGN.coalesce(response.responseText)\r\n        callback(e, null)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @method jsonp\r\n   * Execute a request via JSONP. JSONP is only available in browser\r\n   * environments, since it's operation is dependent on the existance of\r\n   * the DOM. However; this may work with some headless browsers.\r\n   * @param {string} url\r\n   * The URL of the JSONP endpoint.\r\n   * @param {function} callback\r\n   * Handles the response.\r\n   * @param {Error} callback.error\r\n   * If an error occurred, this will be populated. If no error occurred, this will\r\n   * be null.\r\n   * @param {object|array} callback.response\r\n   * The response.\r\n   * @environment browser\r\n   */\r\n  jsonp (url, callback) {\r\n    /* node-only */\r\n    NGN.WARN('NET.Request', 'An unsupported JSONP request was made.')\r\n    callback(new Error('JSONP unsupported in Node-like environments.'))\r\n    /* end-node-only */\r\n    /* browser-only */\r\n    const fn = 'jsonp_callback_' + Math.round(100000 * Math.random())\r\n\r\n    window[fn] = (data) => {\r\n      delete window[fn]\r\n\r\n      document.body.removeChild(script)\r\n\r\n      return callback(null, data)\r\n    }\r\n\r\n    let script = document.createElement('script')\r\n\r\n    script.src = url + (url.indexOf('?') >= 0 ? '&' : '?') + 'callback=' + fn\r\n\r\n    script.addEventListener('error', (e) => {\r\n      delete window[fn]\r\n\r\n      return callback(new Error('The JSONP request was blocked. This may be the result of an invalid URL, cross origin restrictions, or the remote server may not be online.'))\r\n    })\r\n\r\n    document.body.appendChild(script)\r\n    /* end-browser-only */\r\n  }\r\n\r\n  // Apply a preflight request option to the network request.\r\n  send (request, callback) {\r\n    this.preflight(request)\r\n    request.send(callback)\r\n  }\r\n\r\n  /**\r\n   * @method preflight\r\n   * This is a no-op method that runs before a request is sent.\r\n   * This exists specicially to be overridden by class extensions.\r\n   */\r\n  preflight (request) {}\r\n}\r\n","import Network from './Network'\r\nimport { hostname, normalizeUrl } from './utility'\r\n\r\n/**\r\n * @class NGN.NET.Resource\r\n * Represents a remote web resource, such as a backend web server or\r\n * an API server. This class inherits everything from NGN.NET, extending\r\n * it with customizable options for working with specific remote resources.\r\n *\r\n * This class was designed for use in applications where multiple requests\r\n * are made to multiple backends. For example, a common single page application\r\n * may make multiple requests for resources (media, templates, CSS, etc)\r\n * as well as multiple requests to an API server.\r\n *\r\n * For example:\r\n *\r\n * ```js\r\n * let server = new NGN.NET.Resource({\r\n *   credentials: {\r\n *     username: 'username',\r\n *     password: 'password'\r\n *   },\r\n *   headers: {\r\n *     'x-source': 'mydomain.com'\r\n *   }\r\n * })\r\n *\r\n * let API = new NGN.NET.Resource({\r\n *   credentials: {\r\n *     token: 'secret_token'\r\n *   },\r\n *   headers: {\r\n *     'user-agent': 'mobile'\r\n *   },\r\n *   baseUrl: 'https://api.mydomain.com'\r\n * })\r\n *\r\n * server.get('./templates/home.html', (response) => { ... })\r\n * API.json('/user', (data) => { ... })\r\n * ```\r\n *\r\n * Both `server` and `API` in the example above are instances of\r\n * NGN.NET. They each use different credentials to access the\r\n * remote endpoint, using different global headers and\r\n * a different base URL.\r\n *\r\n * This can be incredibly useful anytime a migration is required,\r\n * such as running code in dev ==> staging ==> production or\r\n * switching servers. It is also useful for creating connections\r\n * to different remote services, creating custom API clients,\r\n * and generally organizing/standardizing how an application connects\r\n * to remote resources.\r\n * @extends NGN.NET\r\n */\r\nexport default class NetworkResource extends Network {\r\n  constructor (cfg) {\r\n    super()\r\n\r\n    cfg = cfg || {}\r\n\r\n    Object.defineProperties(this, {\r\n      /**\r\n       * @cfg {object} headers\r\n       * Contains headers (key/value) that are applied to all requests.\r\n       */\r\n      globalHeaders: NGN.private(NGN.coalesceb(cfg.headers, {})),\r\n\r\n      /**\r\n       * @cfg {object} credentials\r\n       * Contains credentials that are applied to all requests.\r\n       * @private\r\n       */\r\n      globalCredentials: NGN.private(NGN.coalesceb(cfg.credentials, {})),\r\n\r\n      /**\r\n       * @cfg {string} username\r\n       * Use this to set a username (instead of using #credentials).\r\n       */\r\n      user: NGN.private(NGN.coalesceb(cfg.username)),\r\n\r\n      /**\r\n       * @cfg {string} password\r\n       * Use this to set a password (instead of using #credentials).\r\n       */\r\n      secret: NGN.private(NGN.coalesceb(cfg.password)),\r\n\r\n      /**\r\n       * @cfg {string} accessToken\r\n       * Use this to set an access token (instead of using #credentials).\r\n       */\r\n      accesstoken: NGN.private(NGN.coalesceb(cfg.token, cfg.accessToken)),\r\n\r\n      /**\r\n       * @cfg {object} query\r\n       * Contains query parameters to be applied to all requests. All values\r\n       * are automatically url-encoded.\r\n       */\r\n      globalQuery: NGN.private(NGN.coalesceb(cfg.query, {})),\r\n\r\n      /**\r\n       * @cfg {string} [baseUrl=window.loction.origin]\r\n       * The root domain/base URL to apply to all requests to relative URL's.\r\n       * This was designed for uses where a backend API may be served on\r\n       * another domain (such as api.mydomain.com instead of www.mydomain.com).\r\n       * The root will only be applied to relative paths that do not begin\r\n       * with a protocol. For example, `./path/to/endpoint` **will** have\r\n       * the root applied (`{root}/path/to/endpoint`) whereas `https://domain.com/endpoint`\r\n       * will **not** have the root applied.\r\n       */\r\n      baseUrl: NGN.private(NGN.coalesce(cfg.baseUrl, cfg.baseurl, `http://${hostname}/`)),\r\n\r\n      /**\r\n       * @cfg {boolean} [nocache=false]\r\n       * Set this to `true` to add a unique cache-busting URL parameter to all requests.\r\n       */\r\n      nocache: NGN.private(NGN.coalesce(cfg.nocache, false)),\r\n\r\n      /**\r\n       * @cfg {boolean} [sslonly=false]\r\n       * Set this to true to rewrite all URL's to use HTTPS.\r\n       */\r\n      sslonly: NGN.public(NGN.coalesce(cfg.sslonly, false))\r\n    })\r\n\r\n    if (this.baseUrl.indexOf('://') < 0 || this.baseUrl.indexOf('://') > 10) {\r\n      this.baseUrl = `http${this.sslonly ? 's' : ''}://${this.baseUrl}`\r\n    } else if (this.sslonly) {\r\n      this.baseUrl = this.baseUrl.replace('http://', 'https://')\r\n    }\r\n\r\n    if (this.accesstoken !== null) {\r\n      this.credentials = {\r\n        accessToken: this.accesstoken\r\n      }\r\n    } else if (this.user !== null && this.ssecret !== null) {\r\n      this.credentials = {\r\n        username: this.user,\r\n        password: this.secret\r\n      }\r\n    }\r\n  }\r\n\r\n  get username () {\r\n    return this.user\r\n  }\r\n\r\n  set username (value) {\r\n    if (this.user !== value) {\r\n      this.user = value\r\n\r\n      if (this.secret !== null) {\r\n        this.credentials = {\r\n          username: this.user,\r\n          password: this.secret\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  set password (value) {\r\n    if (this.secret !== value) {\r\n      this.secret = value\r\n\r\n      if (this.user !== null) {\r\n        this.credentials = {\r\n          username: this.user,\r\n          password: this.secret\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {object} headers\r\n   * Represents the current global headers.\r\n   *\r\n   * This is commonly used when a remote resource requires a specific\r\n   * header on every call.\r\n   *\r\n   * **Example**\r\n   *\r\n   * ```js\r\n   * let resource = new NGN.NET.Resource(...)\r\n   *\r\n   * resource.headers = {\r\n   *   'user-agent': 'my custom agent name'\r\n   * }\r\n   * ```\r\n   */\r\n  get headers () {\r\n    return this.globalHeaders\r\n  }\r\n\r\n  set headers (value) {\r\n    this.globalHeaders = value\r\n  }\r\n\r\n  /**\r\n   * @property credentials\r\n   * Configure credentials that are applied to every request.\r\n   * This is commonly used when communicating with a RESTful API.\r\n   * This can accept a username and password or an access token.\r\n   *\r\n   * **Examples**\r\n   *\r\n   * ```js\r\n   *  let resource = new NGN.NET.Resource(...)\r\n   *\r\n   *  resource.credentials = {\r\n   *    username: 'user',\r\n   *    password: 'pass'\r\n   *  }\r\n   * ```\r\n   *\r\n   * ```js\r\n   * resource.credentials = {\r\n   *   accessToken: 'token'\r\n   * }\r\n   * ```\r\n   */\r\n  set credentials (credentials) {\r\n    if (credentials.hasOwnProperty('accesstoken') || credentials.hasOwnProperty('accessToken') || credentials.hasOwnProperty('token')) {\r\n      credentials.accessToken = NGN.coalesce(credentials.accessToken, credentials.accesstoken, credentials.token)\r\n\r\n      if (credentials.hasOwnProperty('username')) {\r\n        delete credentials.username\r\n      }\r\n\r\n      if (credentials.hasOwnProperty('password')) {\r\n        delete credentials.password\r\n      }\r\n    } else if (!(credentials.hasOwnProperty('username') && credentials.hasOwnProperty('password')) && !credentials.hasOwnProperty('accessToken')) {\r\n      throw new Error('Invalid credentials. Must contain an access token OR the combination of a username AND password.')\r\n    }\r\n\r\n    this.globalCredentials = credentials\r\n\r\n    if (credentials.username) {\r\n      this.username = credentials.username\r\n    }\r\n\r\n    if (credentials.password) {\r\n      this.password = credentials.password\r\n    }\r\n  }\r\n\r\n  // Explicitly deny credential reading.\r\n  get credentials () {\r\n    NGN.WARN('Credentials are write-only. An attempt to read credentials was denied.')\r\n    return {\r\n      username: null,\r\n      secret: null,\r\n      password: null,\r\n      accessToken: null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {object} query\r\n   * Represents the current global query paramaters.\r\n   *\r\n   * This is commonly used when a remote resource requires a specific\r\n   * query paramater on every call.\r\n   *\r\n   * **Example**\r\n   *\r\n   * ```js\r\n   * let resource = new NGN.NET.Resource(...)\r\n   *\r\n   * resource.query = {\r\n   *   'user_id': '12345'\r\n   * }\r\n   * ```\r\n   *\r\n   * All parameter values are automatically URL-encoded.\r\n   */\r\n  get query () {\r\n    return this.globalQuery\r\n  }\r\n\r\n  set query (value) {\r\n    this.globalQuery = value\r\n  }\r\n\r\n  /**\r\n   * @method prepareUrl\r\n   * Prepare a URL by applying the base URL (only when appropriate).\r\n   * @param  {string} uri\r\n   * The universal resource indicator (URI/URL) to prepare.\r\n   * @return {string}\r\n   * Returns a fully qualified URL.\r\n   * @private\r\n   */\r\n  prepareUrl (uri) {\r\n    if (uri.indexOf('://') < 0) {\r\n      uri = normalizeUrl(`${this.baseUrl}/${uri}`)\r\n    }\r\n\r\n    return uri.replace(/\\/{2,5}/gi, '/').replace(/:\\/{1}/i, '://')\r\n  }\r\n\r\n  /**\r\n   * @method preflight\r\n   * Prepares a request before it is sent.\r\n   * @param {NGN.NET.Request} request\r\n   * The request object.\r\n   * @private\r\n   */\r\n  preflight (request) {\r\n    // Apply the base URL\r\n    request.url = this.prepareUrl(request.url)\r\n\r\n    // If global query parameters have been defined, apply them.\r\n    let qp = Object.keys(this.globalQuery)\r\n    if (qp.length > 0) {\r\n      let queryString = []\r\n      for (let i = 0; i < qp.length; i++) {\r\n        queryString.push(`${qp[i]}=${encodeURIComponent(this.globalQuery[qp[i]])}`)\r\n      }\r\n\r\n      if (request.query === '') {\r\n        request.url = `${request.url}?${queryString.join('&')}`\r\n      } else {\r\n        request.url = `${request.url}&${queryString.join('&')}`\r\n      }\r\n    }\r\n\r\n    // If global credentials are available, apply them.\r\n    let gHeaders = Object.keys(this.globalHeaders)\r\n    for (let i = 0; i < gHeaders.length; i++) {\r\n      request.setHeader(gHeaders[i], this.globalHeaders[gHeaders[i]])\r\n    }\r\n\r\n    // If global headers/credentials are available, apply them.\r\n    if (this.globalCredentials.accessToken) {\r\n      request.accessToken = this.globalCredentials.accessToken\r\n    } else if (this.globalCredentials.username) {\r\n      request.username = this.globalCredentials.username\r\n      request.password = this.globalCredentials.password\r\n    }\r\n\r\n    // Add a cache buster\r\n    if (this.nocache) {\r\n      request.setQueryParameter('nocache' + (new Date()).getTime().toString() + Math.random().toString().replace('.', ''), null)\r\n    }\r\n  }\r\n}\r\n","import Request from './Request'\r\nimport Network from './Network'\r\nimport Resource from './Resource'\r\nimport * as Utility from './utility'\r\n\r\n/**\r\n * @namespace NGN.NET\r\n * A library to issue HTTP/S requests.\r\n * This acts as an AJAX library.\r\n * @author Corey Butler\r\n * @singleton\r\n */\r\n\r\nNetwork.prototype.Resource = Resource\r\n\r\nconst normalizeUrl = Utility.normalizeUrl\r\nconst networkInterfaces = Utility.networkInterfaces\r\nconst Library = new Network()\r\n\r\nexport { Library, normalizeUrl, networkInterfaces, Request, Resource }\r\n","/**\r\n * @ignore\r\n * Addition: ['+', path, value]\r\n * Deletion: ['-', path, oldValue]\r\n * Modified: ['m', path, oldValue, newValue]\r\n */\r\nexport default class ObjectDiff {\r\n  static compare (lhs, rhs, path = []) {\r\n    let differences = []\r\n    let ltype = NGN.typeof(lhs)\r\n    let rtype = NGN.typeof(rhs)\r\n\r\n    // If the comparators aren't the same type, then\r\n    // it is a replacement. This is identified as\r\n    // removal of one object and creation of the other.\r\n    if (ltype !== rtype) {\r\n      return [\r\n        ['m', path, lhs, rhs]\r\n      ]\r\n    }\r\nconsole.log('Diffing:', ltype, lhs, rhs, 'PATH', path.join('.'))\r\n    switch (ltype) {\r\n      // case 'function':\r\n      //   if (lhs.toString() !== rhs.toString()) {\r\n      //     return ['m', path, lhs, rhs]\r\n      //   }\r\n      //\r\n      //   return []\r\n\r\n      case 'object':\r\n        let keys = Object.keys(lhs)\r\n        // let relativePath\r\n\r\n        // Compare left to right for modifications and removals\r\n        for (let i = 0; i < keys.length; i++) {\r\n          // Reset the relative path\r\n          let relativePath = Object.assign([], path)\r\n\r\n          relativePath.push(keys[i])\r\n\r\n          if (!rhs.hasOwnProperty(keys[i])) {\r\n            // If no right hand argument exists, it was removed.\r\n            differences.push(['-', relativePath, lhs[keys[i]]])\r\n          } else if (NGN.typeof(lhs[keys[i]]) === 'object') {\r\n            // Recursively compare objects\r\n            differences = differences.concat(this.compare(lhs[keys[i]], rhs[keys[i]], relativePath))\r\n          } else if (lhs[keys[i]] !== rhs[keys[i]]) {\r\n            if (NGN.typeof(lhs[keys[i]]) === 'array' && NGN.typeof(rhs[keys[i]]) === 'array') {\r\n              // If the keys contain arrays, re-run the comparison.\r\n              differences = differences.concat(this.compare(lhs[keys[i]], rhs[keys[i]], relativePath))\r\n            } else {\r\n              // If the comparators exist but are different, a\r\n              // modification ocurred.\r\n              differences.push(['m', relativePath, lhs[keys[i]], rhs[keys[i]]])\r\n            }\r\n          }\r\n        }\r\n\r\n        // Compare right to left for additions\r\n        keys = Object.keys(lhs)\r\n        keys.unshift(rhs)\r\n        keys = NGN.getObjectExtraneousPropertyNames.apply(this, keys)\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n          // Reset the relative path\r\n          let relativePath = Object.assign([], path)\r\n          relativePath.push(keys[i])\r\n\r\n          differences.push(['+', relativePath, rhs[keys[i]]])\r\n        }\r\n\r\n        break\r\n\r\n      case 'array':\r\n        differences = this.compareArray(lhs, rhs)\r\n\r\n        break\r\n\r\n      case 'string':\r\n        console.log('TO DO: Add String Diff') // eslint-disable-line no-fallthrough\r\n\r\n      default:\r\n        if (lhs !== rhs) {\r\n          if (NGN.typeof(lhs) !== 'undefined' && NGN.typeof(rhs) === 'undefined') {\r\n            differences.push(['-', path, lhs])\r\n          } else if (NGN.typeof(lhs) === 'undefined' && NGN.typeof(rhs) !== 'undefined') {\r\n            differences.push(['+', path, rhs])\r\n          } else {\r\n            differences.push(['m', path, lhs, rhs])\r\n          }\r\n        }\r\n    }\r\n\r\n    return differences\r\n  }\r\n\r\n  compareArray (lhs, rhs) {\r\n    // if (lhs === rhs) {\r\n      return []\r\n    // }\r\n    //\r\n    // for (let i = 0; i < lhs.length; i++) {\r\n    //   if (false) {}\r\n    // }\r\n  }\r\n\r\n  static arraysHaveMatchByRef (array1, array2, len1, len2) {\r\n    for (let index1 = 0; index1 < len1; index1++) {\r\n      let val1 = array1[index1]\r\n\r\n      for (let index2 = 0; index2 < len2; index2++) {\r\n        let val2 = array2[index2]\r\n\r\n        if (index1 !== index2 && val1 === val2) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static matchItems (array1, array2, index1, index2, context) {\r\n    let value1 = array1[index1]\r\n    let value2 = array2[index2]\r\n\r\n    if (value1 === value2) {\r\n      return true\r\n    }\r\n\r\n    if (typeof value1 !== 'object' || typeof value2 !== 'object') {\r\n      return false\r\n    }\r\n\r\n    let objectHash = context.objectHash\r\n\r\n    if (!objectHash) {\r\n      // no way to match objects was provided, try match by position\r\n      return context.matchByPosition && index1 === index2\r\n    }\r\n\r\n    let hash1\r\n    let hash2\r\n\r\n    if (typeof index1 === 'number') {\r\n      context.hashCache1 = NGN.forceArray(context.hashCache1)\r\n      hash1 = context.hashCache1[index1]\r\n\r\n      if (typeof hash1 === 'undefined') {\r\n        context.hashCache1[index1] = hash1 = objectHash(value1, index1)\r\n      }\r\n    } else {\r\n      hash1 = objectHash(value1)\r\n    }\r\n\r\n    if (typeof hash1 === 'undefined') {\r\n      return false\r\n    }\r\n\r\n    if (typeof index2 === 'number') {\r\n      context.hashCache2 = NGN.forceArray(context.hashCache2)\r\n      hash2 = context.hashCache2[index2]\r\n\r\n      if (typeof hash2 === 'undefined') {\r\n        context.hashCache2[index2] = hash2 = objectHash(value2, index2)\r\n      }\r\n    } else {\r\n      hash2 = objectHash(value2)\r\n    }\r\n\r\n    if (typeof hash2 === 'undefined') {\r\n      return false\r\n    }\r\n\r\n    return hash1 === hash2\r\n  }\r\n\r\n  /*\r\n   * LCS implementation that supports arrays or strings\r\n   * reference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\r\n   * This code abstracted from Benjamín Eidelman's JSONDiffPatch (MIT).\r\n   */\r\n  static lcsDefaultMatch (array1, array2, index1, index2) {\r\n    return array1[index1] === array2[index2]\r\n  }\r\n\r\n  static lcsLengthMatrix (array1, array2, match, context) {\r\n    let len1 = array1.length\r\n    let len2 = array2.length\r\n    let x\r\n    let y\r\n\r\n    // initialize empty matrix of len1+1 x len2+1\r\n    let matrix = [len1 + 1]\r\n\r\n    for (x = 0; x < len1 + 1; x++) {\r\n      matrix[x] = [len2 + 1]\r\n\r\n      for (y = 0; y < len2 + 1; y++) {\r\n        matrix[x][y] = 0\r\n      }\r\n    }\r\n\r\n    matrix.match = match\r\n\r\n    // save sequence lengths for each coordinate\r\n    for (x = 1; x < len1 + 1; x++) {\r\n      for (y = 1; y < len2 + 1; y++) {\r\n        if (match(array1, array2, x - 1, y - 1, context)) {\r\n          matrix[x][y] = matrix[x - 1][y - 1] + 1\r\n        } else {\r\n          matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1])\r\n        }\r\n      }\r\n    }\r\n\r\n    return matrix\r\n  };\r\n\r\n  static lcsBacktrack (matrix, array1, array2, index1, index2, context) {\r\n    if (index1 === 0 || index2 === 0) {\r\n      return {\r\n        sequence: [],\r\n        indices1: [],\r\n        indices2: []\r\n      }\r\n    }\r\n\r\n    if (matrix.match(array1, array2, index1 - 1, index2 - 1, context)) {\r\n      let subsequence = backtrack(matrix, array1, array2, index1 - 1, index2 - 1, context)\r\n\r\n      subsequence.sequence.push(array1[index1 - 1])\r\n      subsequence.indices1.push(index1 - 1)\r\n      subsequence.indices2.push(index2 - 1)\r\n\r\n      return subsequence\r\n    }\r\n\r\n    if (matrix[index1][index2 - 1] > matrix[index1 - 1][index2]) {\r\n      return backtrack(matrix, array1, array2, index1, index2 - 1, context)\r\n    } else {\r\n      return backtrack(matrix, array1, array2, index1 - 1, index2, context)\r\n    }\r\n  };\r\n\r\n  static lcsGet (array1, array2, match, context) {\r\n    context = context || {}\r\n\r\n    let matrix = lengthMatrix(array1, array2, match || defaultMatch, context)\r\n    let result = backtrack(matrix, array1, array2, array1.length, array2.length, context)\r\n\r\n    if (typeof array1 === 'string' && typeof array2 === 'string') {\r\n      result.sequence = result.sequence.join('')\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\n\r\n// class LCS {\r\n//\r\n// }\r\n","// Difference Utilities\r\nimport ObjectDiff from './DiffEngine'\r\n\r\n// CRC table for checksum (cached)\r\nlet crcTable = null\r\n\r\n/**\r\n * Generate the CRC table for checksums. This is a fairly complex\r\n * operation that should only be executed once and cached for\r\n * repeat use.\r\n */\r\nconst makeCRCTable = function () {\r\n  let c\r\n  let crcTable = []\r\n\r\n  for (let n = 0; n < 256; n++) {\r\n    c = n\r\n\r\n    for (let k = 0; k < 8; k++) {\r\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1))\r\n    }\r\n\r\n    crcTable[n] = c\r\n  }\r\n\r\n  return crcTable\r\n}\r\n\r\n/**\r\n * @class NGN.DATA.UTILITY\r\n * A utility library of functions relevant to data management.\r\n */\r\nexport default class Utility { // eslint-disable-line\r\n  static diff () {\r\n    return ObjectDiff.compare(...arguments) // eslint-disable-line no-undef\r\n  }\r\n\r\n  /**\r\n   * @method checksum\r\n   * Create the checksum of the specified string.\r\n   * @param  {string} content\r\n   * The content to generate a checksum for.\r\n   * @return {string}\r\n   * Generates a checksum value.\r\n   */\r\n  static checksum (str) {\r\n    if (typeof str === 'object') {\r\n      str = JSON.stringify(this.serialize(str))\r\n    }\r\n\r\n    if (!crcTable) {\r\n      crcTable = makeCRCTable()\r\n    }\r\n\r\n    let crc = 0 ^ (-1)\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n      crc = (crc >>> 8) ^ crcTable[(crc ^ str.charCodeAt(i)) & 0xFF]\r\n    }\r\n\r\n    return (crc ^ (-1)) >>> 0\r\n  }\r\n\r\n  /**\r\n   * @method UUID\r\n   * Generate a universally unique identifier (v4).\r\n   *\r\n   * This is a \"fast\" UUID generator, designed to work in the browser.\r\n   * This will generate a UUID in less than 20ms on Chrome, as of Nov 6, 2017.\r\n   * Code courtesy of @broofa on StackOverflow.\r\n   *\r\n   * While this method cannot absolutely guarantee there will be no collisions\r\n   * (duplicates), the chances are 1:5.3x10^^36 (1 in over 100 quadrillion).\r\n   * You are over 30 _octillion_ times more likely to win the Powerball than to\r\n   * generate two identical \"random\" UUIDs using the version 4 scheme.\r\n   * @return {string}\r\n   * Returns a [V4 GUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_.28random.29).\r\n   */\r\n  static UUID () {\r\n    /* node-only */\r\n    return this.GUID()\r\n    /* end-node-only */\r\n    /* browser-only */\r\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => // eslint-disable-line\r\n      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16) // eslint-disable-line\r\n    )\r\n    /* end-browser-only */\r\n  }\r\n\r\n  /**\r\n   * @method GUID\r\n   * Generate a globally unique identifier. A GUID is the Microsoft\r\n   * implementation of a UUIDv4.\r\n   *\r\n   * The likelihood of an ID collision, according to the original author (Jeff\r\n   * Ward) is 1:3.26x10^15 (1 in 3.26 quadrillion). Results are generated between\r\n   * approximately 105ms (Desktop) and 726ms (Android) as of May 2016.\r\n   * @return {string} [description]\r\n   */\r\n  static GUID () {\r\n    let lut = []\r\n\r\n    for (let i = 0; i < 256; i++) {\r\n      lut[i] = (i < 16 ? '0' : '') + (i).toString(16)\r\n    }\r\n\r\n    const d0 = Math.random() * 0xffffffff | 0\r\n    const d1 = Math.random() * 0xffffffff | 0\r\n    const d2 = Math.random() * 0xffffffff | 0\r\n    const d3 = Math.random() * 0xffffffff | 0\r\n\r\n    return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] +\r\n      '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] +\r\n      lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' +\r\n      lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] +\r\n      lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff]\r\n  }\r\n\r\n  /**\r\n   * @method serialize\r\n   * Creates a JSON data object with no functions. Only uses enumerable\r\n   * attributes of the object.\r\n   *\r\n   * Functions & Setters are always ignored. Getters are evaluated recursively\r\n   * until a simple object type is found or there are no further nested\r\n   * attributes.\r\n   * @param {object|array} object\r\n   * Supports an object or array.\r\n   */\r\n  static serialize (data) {\r\n    if (typeof data !== 'object') {\r\n      throw new Error(`Cannot serialize ${NGN.typeof(data)} value. Must be an object.`)\r\n    }\r\n\r\n    // Force an object for parsing\r\n    let SERIALIZED_ARRAY_DATA = Symbol('array.data')\r\n\r\n    if (NGN.typeof(data) === 'array') {\r\n      data = {\r\n        [SERIALIZED_ARRAY_DATA]: data\r\n      }\r\n    }\r\n\r\n    let result = {}\r\n    let attribute = Object.keys(data)\r\n\r\n    for (let i = 0; i < attribute.length; i++) {\r\n      if (data[attribute[i]] !== undefined) {\r\n        switch (NGN.typeof(data[attribute[i]])) {\r\n          case 'object':\r\n            Object.defineProperty(\r\n              result,\r\n              attribute[i],\r\n              NGN.public(NGN.DATA.UTIL.serialize(data[attribute[i]]))\r\n            )\r\n\r\n            break\r\n\r\n          case 'array':\r\n            result[attribute[i]] = []\r\n\r\n            for (let a = 0; a < data[attribute[i]].length; a++) {\r\n              result[attribute[i]].push(NGN.DATA.UTIL.serialize(data[attribute[i]]))\r\n            }\r\n\r\n            break\r\n\r\n          case 'date':\r\n            Object.defineProperty(result, attribute[i], NGN.public(data[attribute[i]].toISOString()))\r\n\r\n            break\r\n\r\n          case 'symbol':\r\n            if (SERIALIZED_ARRAY_DATA !== attribute[i]) {\r\n              result[attribute[i]] = data[attribute[i]].toString()\r\n            }\r\n\r\n            break\r\n\r\n          case 'regexp':\r\n            Object.defineProperty(result, attribute[i], NGN.public(data[attribute[i]].toString()))\r\n\r\n            break\r\n\r\n          case 'weakmap':\r\n          case 'map':\r\n            let mapResult = {}\r\n\r\n            data[attribute[i]].forEach((value, key) => {\r\n              mapResult[key.toString()] = this.serialize(value)\r\n            })\r\n\r\n            result[attribute[i]] = mapResult\r\n\r\n            break\r\n\r\n          case 'weakset':\r\n          case 'set':\r\n            if (data[attribute[i]].size === 0) {\r\n              result[attribute[i]] = []\r\n              break\r\n            }\r\n\r\n            result[attribute[i]] = this.serialize(Array.from(data[attribute[i]].values()))\r\n\r\n            break\r\n\r\n          case 'function':\r\n            break\r\n\r\n          default:\r\n            result[attribute[i]] = data[attribute[i]]\r\n        }\r\n      }\r\n    }\r\n\r\n    return result[SERIALIZED_ARRAY_DATA] !== undefined ? result[SERIALIZED_ARRAY_DATA] : result\r\n  }\r\n\r\n  /**\r\n   * @method isModel\r\n   * Determines whether an object is an instance of NGN.DATA.Model.\r\n   * @param {function} PossibleModel\r\n   * The class or function to be checked.\r\n   * @returns {boolean}\r\n   */\r\n   static isDataModel (Model) {\r\n     if (Model instanceof NGN.DATA.Model || NGN.typeof(Model) === 'model') {\r\n       return true\r\n     }\r\n\r\n     if (Model.hasOwnProperty('prototype') && Model.prototype !== null) {\r\n       let currentElement = Model;\r\n       let count = 0;\r\n\r\n       while (currentElement.prototype !== null && count < 30) {\r\n         count++;\r\n\r\n         currentElement = currentElement.prototype;\r\n\r\n         if (currentElement instanceof NGN.DATA.Model || NGN.typeof(currentElement) === 'model') {\r\n           return true\r\n         }\r\n       }\r\n     }\r\n\r\n     return Model instanceof NGN.DATA.Entity\r\n   }\r\n\r\n  // /**\r\n  //  * @method objectByteSize\r\n  //  * Calculates the _estimated_ size (in bytes) of primitive key/value objects,\r\n  //  * meaning those that do not contain functions, accessors (getters/setters),\r\n  //  * or other attributes other than `String`, `Number`, or `Boolean` values.\r\n  //  * NGN treats dates as `String` values.\r\n  //  *\r\n  //  * JavaScript engines differ in how they manage memory, but most do not\r\n  //  * calculate the size of functions. If a value of type `function` is found in\r\n  //  * the object, NGN will calculate the size of it's `String` representation.\r\n  //  * This is a weak measure of function size since most JavaScript engines\r\n  //  * do not expose enough realtime heap data to know calculate with accuracy at\r\n  //  * any given point in time.\r\n  //  *\r\n  //  * This method attempts to implement similar principles to C's `sizeOf` method.\r\n  //  *\r\n  //  * Consider this method to provide a **best guess based on the available data**.\r\n  //  *\r\n  //  * @param {Object} object\r\n  //  * The primitive key/value object upon which the bytesize estimation will be made.\r\n  //  * @param {Boolean} [ignoreFunctionEstimate=false]\r\n  //  * By default, NGN will calculate the `String` representation of any functions\r\n  //  * it encounters in the key/value object. Setting this to `true` will prevent\r\n  //  * this behavior, effectively using a `0` to calculate function size.\r\n  //  */\r\n  // static objectByteSize (obj, ignore=false) {\r\n  //   switch (typeof obj) {\r\n  //     case null:\r\n  //       return 4\r\n  //\r\n  //     case 'string':\r\n  //       return obj.length * 2\r\n  //\r\n  //     case 'boolean':\r\n  //       return 4\r\n  //\r\n  //     case 'number':\r\n  //       return 8\r\n  //\r\n  //     case 'function':\r\n  //       if (!ignore) {\r\n  //         return obj.toString().length * 2\r\n  //       }\r\n  //\r\n  //       return 0\r\n  //   }\r\n  //\r\n  //   let list = []\r\n  //   let stack = [obj]\r\n  //   let bytes = 0\r\n  //\r\n  //   while (stack.length) {\r\n  //     let value = stack.pop()\r\n  //\r\n  //     if (typeof value === 'object') {\r\n  //       if (list.indexOf(value) < 0) {\r\n  //         list.push(value)\r\n  //\r\n  //         // If the object is not an array, add key sizes\r\n  //         const isArray = !Array.isArray(value)\r\n  //\r\n  //         for (let key in value) {\r\n  //           if (!isArray) {\r\n  //             bytes += (2 * key.length) + NGN.DATA.util(value[key])\r\n  //             stack.push(value[key])\r\n  //           } else {\r\n  //\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     } else {\r\n  //       bytes += NGN.DATA.UTILITY.objectByteSize(value)\r\n  //     }\r\n  //   }\r\n  //\r\n  //   return bytes\r\n  // }\r\n}\r\n\r\nexport { makeCRCTable }\r\n","import EventEmitter from '../../emitter/core'\r\n\r\n/**\r\n * Inspired by btree.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: http://github.com/dcodeIO/btree.js for details.\r\n *\r\n * Converted to ECMASCript 2016 class syntax & modified to use\r\n * NGN conventions. Separated code into multiple classes.\r\n * Copyright (c) 2018, Ecor Ventures LLC.\r\n * @hidden\r\n */\r\nclass TreeNode {\r\n  constructor (parent = null, leafs = [], nodes = [null]) {\r\n    Object.defineProperties(this, {\r\n      parent: NGN.private(parent),\r\n      leafs: NGN.private(leafs),\r\n      nodes: NGN.private(nodes),\r\n\r\n      METADATA: NGN.private({\r\n        order: null,\r\n        minOrder: null,\r\n\r\n        /**\r\n        * Compare two numbers\r\n        * @param  {number} firstNumber\r\n        * @param  {number} secondNumber\r\n        * @return {number}\r\n        * - Returns `-1` if first number is less than second.\r\n        * - Returns `0` if numbers are equal.\r\n        * - Returns `1` if first number is greater than second.\r\n        */\r\n        compare: (firstNumber, secondNumber) => {\r\n          return firstNumber < secondNumber ? -1 : (firstNumber > secondNumber ? 1 : 0)\r\n        }\r\n      })\r\n    })\r\n\r\n    // Associate leafs with parent\r\n    for (let i = 0; i < this.leafs.length; i++) {\r\n      this.leafs[i].parent = this\r\n      // Object.defineProperty(this.leafs[i], 'parent', NGN.get(() => this))\r\n    }\r\n\r\n    // Associate nodes with parent\r\n    for (let i = 0; i < this.nodes.length; i++) {\r\n      if (this.nodes[i] !== null) {\r\n        this.nodes[i].parent = this\r\n        // Object.defineProperty(this.nodes[i], 'parent', NGN.get(() => this))\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Search for the node that contains the specified key\r\n  * @param  {any} key\r\n  * @return {TreeLeaf|TreeNode}\r\n  */\r\n  search (key) {\r\n    if (this.leafs.length > 0) {\r\n      let a = this.leafs[0]\r\n\r\n      if (this.METADATA.compare(a.key, key) === 0) {\r\n        return {\r\n          leaf: a,\r\n          index: 0\r\n        }\r\n      }\r\n\r\n      if (this.METADATA.compare(key, a.key) < 0) {\r\n        if (this.nodes[0] !== null) {\r\n          return this.nodes[0].search(key) // Left\r\n        }\r\n\r\n        return { node: this, index: 0 }\r\n      }\r\n\r\n      let i\r\n      for (i = 1; i < this.leafs.length; i++) {\r\n        let b = this.leafs[i]\r\n\r\n        if (this.METADATA.compare(b.key, key) === 0) {\r\n          return {\r\n            leaf: b,\r\n            index: i\r\n          }\r\n        }\r\n\r\n        if (this.METADATA.compare(key, b.key) < 0) {\r\n          if (this.nodes[i] !== null) {\r\n            return this.nodes[i].search(key) // Inner\r\n          }\r\n\r\n          return { node: this, index: i }\r\n        }\r\n\r\n        a = b\r\n      }\r\n\r\n      if (this.nodes[i] !== null) {\r\n        return this.nodes[i].search(key) // Right\r\n      }\r\n\r\n      return { node: this, index: i }\r\n    }\r\n\r\n    return { node: this, index: 0 }\r\n  }\r\n\r\n  /**\r\n  * Retrieve the value of a key.\r\n  * @param {number} key\r\n  * @returns {NGNTreeLeaf}\r\n  * Returns `undefined` if no leaf is found.\r\n  */\r\n  get (key) {\r\n    let result = this.search(key)\r\n    return result.leaf ? result.leaf.value : undefined\r\n  }\r\n\r\n  /**\r\n  * Insert a key/value pair into the node.\r\n  * @param {number} key\r\n  * @param {any} value\r\n  * @param {boolean} [overwrite=true]\r\n  * Overwrite existing values.\r\n  */\r\n  put (key, value, overwrite = true) {\r\n    let result = this.search(key)\r\n\r\n    // Key already exists\r\n    if (result.leaf) {\r\n      if (!overwrite) {\r\n        return\r\n      }\r\n\r\n      result.leaf.value = value\r\n      return\r\n    }\r\n\r\n    let node = result.node\r\n    let index = result.index\r\n\r\n    node.leafs.splice(index, 0, new TreeLeaf(node, key, value))\r\n    node.nodes.splice(index + 1, 0, null)\r\n\r\n    if (node.leafs.length > this.METADATA.order) {\r\n      node.split()\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Delete key.\r\n  * @param {number} key\r\n  */\r\n  delete (key) {\r\n    var result = this.search(key)\r\n\r\n    if (!result.leaf) {\r\n      return\r\n    }\r\n\r\n    let leaf = result.leaf\r\n    let node = leaf.parent\r\n    let index = result.index\r\n    let left = node.nodes[index]\r\n\r\n    if (left === null) {\r\n      node.leafs.splice(index, 1)\r\n      node.nodes.splice(index, 1)\r\n      node.balance()\r\n    } else {\r\n      let max = left.leafs[left.leafs.length - 1]\r\n\r\n      left.delete(max.key)\r\n\r\n      max.parent = node\r\n\r\n      node.leafs.splice(index, 1, max)\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n  * Balance the tree.\r\n  * @private\r\n  */\r\n  balance () {\r\n    if (this.parent instanceof Tree) {\r\n      // Root has a single child and no leafs\r\n      if (this.leafs.length === 0 && this.nodes[0] !== null) {\r\n        this.parent.root = this.nodes[0]\r\n        this.parent.root.parent = this.parent\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (this.leafs.length >= this.METADATA.minOrder) {\r\n      return\r\n    }\r\n\r\n    let index = this.parent.nodes.indexOf(this)\r\n    let left = index > 0 ? this.parent.nodes[index - 1] : null\r\n    let right = this.parent.nodes.length > index + 1 ? this.parent.nodes[index + 1] : null\r\n    let sep\r\n    let leaf\r\n    let rest\r\n\r\n    if (right !== null && right.leafs.length > this.METADATA.minOrder) {\r\n      // Append the parent separator\r\n      sep = this.parent.leafs[index]\r\n      sep.parent = this\r\n\r\n      this.leafs.push(sep)\r\n\r\n      // Replace blank with the first right leaf\r\n      leaf = right.leafs.shift()\r\n      leaf.parent = this.parent\r\n\r\n      this.parent.leafs[index] = leaf\r\n\r\n      // Append the right rest\r\n      rest = right.nodes.shift()\r\n\r\n      if (rest !== null) {\r\n        rest.parent = this\r\n      }\r\n\r\n      this.nodes.push(rest)\r\n    } else if (left !== null && left.leafs.length > this.METADATA.minOrder) {\r\n      // Prepend the parent seperator\r\n      sep = this.parent.leafs[index - 1]\r\n      sep.parent = this\r\n\r\n      this.leafs.unshift(sep)\r\n\r\n      // Replace the blank with the last left leaf\r\n      leaf = left.leafs.pop()\r\n      leaf.parent = this.parent\r\n\r\n      this.parent.leafs[index - 1] = leaf\r\n\r\n      // Prepend the left rest to this\r\n      rest = left.nodes.pop()\r\n\r\n      if (rest !== null) {\r\n        rest.parent = this\r\n      }\r\n\r\n      this.nodes.unshift(rest)\r\n    } else {\r\n      let subst\r\n\r\n      if (right !== null) {\r\n        // Combine this + seperator from the parent + right\r\n        sep = this.parent.leafs[index]\r\n        subst = new TreeNode(this.parent, this.leafs.concat([sep], right.leafs), this.nodes.concat(right.nodes))\r\n        subst.METADATA.order = this.METADATA.order\r\n        subst.METADATA.minOrder = this.METADATA.minOrder\r\n\r\n        // Remove the seperator from the parent\r\n        this.parent.leafs.splice(index, 1)\r\n\r\n        // And replace the nodes it seperated with subst\r\n        this.parent.nodes.splice(index, 2, subst)\r\n      } else if (left !== null) {\r\n        // Combine left + seperator from parent + this\r\n        sep = this.parent.leafs[index - 1]\r\n        subst = new TreeNode(\r\n          this.parent,\r\n          left.leafs.concat([sep], this.leafs),\r\n          left.nodes.concat(this.nodes)\r\n        )\r\n\r\n        subst.METADATA.minOrder = this.METADATA.minOrder\r\n        subst.METADATA.order = this.METADATA.order\r\n\r\n        // Remove the seperator from the parent\r\n        this.parent.leafs.splice(index - 1, 1)\r\n\r\n        // Replace seperated nodes with subst\r\n        this.parent.nodes.splice(index - 1, 2, subst)\r\n      } else {\r\n        throw new Error(`Internal error: ${this.toString(true)} has neither a left nor a right sibling`)\r\n      }\r\n\r\n      this.parent.balance()\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Split the node.\r\n  */\r\n  split () {\r\n    let index = Math.floor(this.leafs.length / 2)\r\n\r\n    if (this.parent instanceof Tree) {\r\n      this.nodes = [\r\n        new TreeNode(this, this.leafs.slice(0, index), this.nodes.slice(0, index + 1)),\r\n        new TreeNode(this, this.leafs.slice(index + 1), this.nodes.slice(index + 1))\r\n      ]\r\n\r\n      this.leafs = [this.leafs[index]]\r\n    } else {\r\n      let leaf = this.leafs[index]\r\n      let rest = new TreeNode(\r\n        this.parent,\r\n        this.leafs.slice(index + 1),\r\n        this.nodes.slice(index + 1)\r\n      )\r\n\r\n      this.leafs = this.leafs.slice(0, index)\r\n      this.nodes = this.nodes.slice(0, index + 1)\r\n\r\n      this.parent.unsplit(leaf, rest)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Unsplits a child.\r\n  * @param {NGNTreeLeaf} leaf\r\n  * @param {NGNTreeNode} rest\r\n  * @param {number} [order=52]\r\n  * @private\r\n  */\r\n  unsplit (leaf, rest) {\r\n    leaf.parent = this\r\n    rest.parent = this\r\n\r\n    let a = this.leafs[0]\r\n\r\n    if (this.METADATA.compare(leaf.key, a.key) < 0) {\r\n      this.leafs.unshift(leaf)\r\n      this.nodes.splice(1, 0, rest)\r\n    } else {\r\n      let i\r\n      for (i = 1; i < this.leafs.length; i++) {\r\n        let b = this.leafs[i]\r\n\r\n        if (this.METADATA.compare(leaf.key, b.key) < 0) {\r\n          this.leafs.splice(i, 0, leaf)\r\n          this.nodes.splice(i + 1, 0, rest)\r\n          break\r\n        }\r\n      }\r\n\r\n      if (i === this.leafs.length) {\r\n        this.leafs.push(leaf)\r\n        this.nodes.push(rest)\r\n      }\r\n    }\r\n\r\n    if (this.leafs.length > this.METADATA.order) {\r\n      this.split()\r\n    }\r\n  }\r\n\r\n  /**\r\n  * A string representation of the node.\r\n  * @param {boolean} [includeNodes=false]\r\n  * Include sub-nodes\r\n  * @returns {string}\r\n  * @private\r\n  */\r\n  toString (includeNodes = false) {\r\n    let value = []\r\n    let i\r\n\r\n    for (i = 0; i < this.leafs.length; i++) {\r\n      value.push(this.leafs[i].key)\r\n    }\r\n\r\n    let s = `[${value.toString()}]${(this.parent instanceof Tree ? ':*' : ':')}${this.parent}`\r\n\r\n    if (includeNodes) {\r\n      for (i = 0; i < this.nodes.length; i++) {\r\n        s += ` -> ${this.nodes[i]}`\r\n      }\r\n    }\r\n\r\n    return s\r\n  }\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nclass TreeLeaf {\r\n  /**\r\n   * Constructs a new Leaf containing a value.\r\n   * @param {NGNTreeNode} parent\r\n   * @param {number} key\r\n   * @param {any} value\r\n   */\r\n  constructor (parent, key, value) {\r\n    Object.defineProperties(this, {\r\n      parent: NGN.private(parent),\r\n      key: NGN.private(key),\r\n      value: NGN.private(value)\r\n    })\r\n  }\r\n\r\n  toString () {\r\n    return this.key.toString()\r\n  }\r\n}\r\n\r\n/**\r\n * @class NGN.DATA.BTree\r\n * A O(n) B-tree data type.\r\n * @private\r\n */\r\nexport default class Tree extends EventEmitter {\r\n  constructor (order = 52) {\r\n    super()\r\n\r\n    // Sanitize input\r\n    order = order < 1 ? 1 : order\r\n\r\n    Object.defineProperties(this, {\r\n      root: NGN.private(new TreeNode(this)),\r\n\r\n      BTREE: NGN.private({}),\r\n\r\n      METADATA: NGN.private({\r\n        order: order,\r\n\r\n        minOrder: order > 1 ? Math.floor(order / 2) : 1,\r\n\r\n        compare: (firstNumber, secondNumber) => {\r\n          return firstNumber < secondNumber ? -1 : (firstNumber > secondNumber ? 1 : 0)\r\n        }\r\n      })\r\n    })\r\n\r\n    this.root.METADATA.minOrder = this.METADATA.minOrder\r\n    this.root.METADATA.order = this.METADATA.order\r\n  }\r\n\r\n  /**\r\n   * Validates a node and prints debugging info if something went wrong.\r\n   * @param {!TreeNode|!Tree} node\r\n   * @private\r\n   */\r\n  validate (node) {\r\n    if (node instanceof Tree) {\r\n      return\r\n    }\r\n\r\n    if (node.leafs.length + 1 !== node.nodes.length) {\r\n      NGN.ERROR(`Illegal leaf/node count in ${node}: ${node.leafs.length}/${node.nodes.length}`)\r\n    }\r\n\r\n    let i\r\n\r\n    for (i = 0; i < node.leafs.length; i++) {\r\n      if (!node.leafs[i]) {\r\n        NGN.ERROR(`Illegal leaf in ${node} at ${i}: ${node.leafs[i]}`)\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < node.nodes.length; i++) {\r\n      if (NGN.typeof(node.nodes[i]) === 'undefined') {\r\n        NGN.ERROR(`Illegal node in ${node} at ${i}: undefined`)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Insert a key/value pair into the tree.\r\n   * @param {number} key\r\n   * @param {any} value\r\n   * @param {boolean} [overwrite=true]\r\n   * Overwrite existing values\r\n   */\r\n  put (key, value, overwrite = true) {\r\n    if (NGN.typeof(key) !== 'number') {\r\n      throw new Error(`Illegal key: ${key}`)\r\n    }\r\n\r\n    if (value === undefined) {\r\n      throw new Error(`Illegal value: ${value}`)\r\n    }\r\n\r\n    return this.root.put(key, value, overwrite)\r\n  }\r\n\r\n  /**\r\n   * Retrieve the value for the specified key.\r\n   * @param {number} key\r\n   * @returns {any}\r\n   * If there is no such key, `undefined` is returned.\r\n   */\r\n  get (key) {\r\n    if (NGN.typeof(key) !== 'number') {\r\n      throw new Error(`Illegal key: ${key}`)\r\n    }\r\n\r\n    return this.root.get(key)\r\n  }\r\n\r\n  /**\r\n   * Delete a key from the tree.\r\n   * @param {number} key\r\n   */\r\n  delete (key) {\r\n    if (NGN.typeof(key) !== 'number') {\r\n      throw new Error(`Illegal key: ${key}`)\r\n    }\r\n\r\n    return this.root.delete(key)\r\n  }\r\n\r\n  /**\r\n   * Walk through all keys in ascending order.\r\n   * @param {number} minKey\r\n   * If omitted or NULL, starts at the beginning\r\n   * @param {number} maxKey\r\n   * If omitted or NULL, walks till the end\r\n   * @param {function} callback\r\n   * @param {number} callback.key\r\n   * The key\r\n   * @param {any} callback.value\r\n   * The value.\r\n   */\r\n  walk (minKey, maxKey, callback) {\r\n    if (this.root.leafs.length === 0) {\r\n      return\r\n    }\r\n\r\n    if (NGN.isFn(minKey)) {\r\n      callback = minKey\r\n      minKey = maxKey = null\r\n    } else if (NGN.isFn(maxKey)) {\r\n      callback = maxKey\r\n      maxKey = null\r\n    }\r\n\r\n    minKey = NGN.coalesce(minKey)\r\n    maxKey = NGN.coalesce(maxKey)\r\n\r\n    let ptr\r\n    let index\r\n\r\n    if (minKey === null) {\r\n      // No minimum limit\r\n      ptr = this.root\r\n\r\n      while (ptr.nodes[0] !== null) {\r\n        ptr = ptr.nodes[0]\r\n      }\r\n\r\n      index = 0\r\n    } else {\r\n      // lookup\r\n      let result = this.root.search(minKey)\r\n\r\n      if (result.leaf) {\r\n        // Minimum key itself exists\r\n        ptr = result.leaf.parent\r\n        index = ptr.leafs.indexOf(result.leaf)\r\n      } else {\r\n        // Key does not exist\r\n        ptr = result.node\r\n        index = result.index\r\n\r\n        if (index >= ptr.leafs.length) {\r\n          // begin at parent separator in overrun\r\n          if (ptr.parent instanceof Tree || ptr.parent.nodes.indexOf(ptr) >= ptr.parent.leafs.length) {\r\n            return\r\n          }\r\n\r\n          ptr = ptr.parent\r\n        }\r\n      }\r\n    }\r\n\r\n    // ptr/index points to first result\r\n    while (true) {\r\n      if (maxKey !== null && this.METADATA.compare(ptr.leafs[index].key, maxKey) > 0) {\r\n        break\r\n      }\r\n      if (ptr.leafs.length === 0) {\r\n        break\r\n      }\r\n\r\n      if (callback(ptr.leafs[index].key, ptr.leafs[index].value)) {\r\n        break\r\n      }\r\n\r\n      if (ptr.nodes[index + 1] !== null) {\r\n        // Descend Tree\r\n        ptr = ptr.nodes[index + 1]\r\n        index = 0\r\n\r\n        while (ptr.nodes[0] !== null) {\r\n          ptr = ptr.nodes[0]\r\n        }\r\n      } else if (ptr.leafs.length > index + 1) {\r\n        // Next\r\n        index++\r\n      } else {\r\n        // Ascend Tree\r\n        do {\r\n          if ((ptr.parent instanceof Tree)) {\r\n            return\r\n          }\r\n\r\n          index = ptr.parent.nodes.indexOf(ptr)\r\n          ptr = ptr.parent\r\n        } while (index >= ptr.leafs.length)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Walks through all keys in descending order.\r\n   * @param {number} minKey\r\n   * If omitted or NULL, starts at the beginning\r\n   * @param {number} maxKey\r\n   * If omitted or NULL, walks till the end\r\n   * @param {function} callback\r\n   * @param {number} callback.key\r\n   * The key\r\n   * @param {any} callback.value\r\n   * The value.\r\n   */\r\n  walkDesc (minKey, maxKey, callback) {\r\n    if (NGN.isFn(minKey)) {\r\n      callback = minKey\r\n      minKey = maxKey = null\r\n    } else if (NGN.isFn(maxKey)) {\r\n      callback = maxKey\r\n      maxKey = null\r\n    }\r\n\r\n    minKey = NGN.coalesce(minKey)\r\n    maxKey = NGN.coalesce(maxKey)\r\n\r\n    let ptr\r\n    let index\r\n    if (maxKey === null) {\r\n      // No maximum\r\n      ptr = this.root\r\n\r\n      while (ptr.nodes[ptr.nodes.length - 1] !== null) {\r\n        ptr = ptr.nodes[ptr.nodes.length - 1]\r\n      }\r\n\r\n      index = ptr.leafs.length - 1\r\n    } else {\r\n      // Lookup\r\n      let result = this.root.search(maxKey)\r\n\r\n      if (result.leaf) {\r\n        // Maximum key exists\r\n        ptr = result.leaf.parent\r\n        index = ptr.leafs.indexOf(result.leaf)\r\n      } else {\r\n        // Key does not exist\r\n        ptr = result.node\r\n        index = result.index - 1\r\n\r\n        while (index < 0) {\r\n          // Begin at parent separator on underrun\r\n          if (ptr.parent instanceof Tree) {\r\n            return\r\n          }\r\n\r\n          index = ptr.parent.nodes.indexOf(ptr) - 1\r\n\r\n          if (index < 0) {\r\n            return\r\n          }\r\n\r\n          ptr = ptr.parent\r\n        }\r\n      }\r\n    }\r\n\r\n    // ptr/index points to first result\r\n    while (true) {\r\n      if (minKey !== null && this.METADATA.compare(ptr.leafs[index].key, minKey) < 0) {\r\n        break\r\n      }\r\n\r\n      if (callback(ptr.leafs[index].key, ptr.leafs[index].value)) {\r\n        break\r\n      }\r\n\r\n      if (ptr.nodes[index] !== null) {\r\n        // Descend Tree\r\n        ptr = ptr.nodes[index]\r\n\r\n        while (ptr.nodes[ptr.nodes.length - 1] !== null) {\r\n          ptr = ptr.nodes[ptr.nodes.length - 1]\r\n        }\r\n\r\n        index = ptr.leafs.length - 1\r\n      } else if (index > 0) {\r\n        // Next\r\n        index--\r\n      } else {\r\n        // Ascend Tree\r\n        do {\r\n          if ((ptr.parent instanceof Tree)) {\r\n            return\r\n          }\r\n\r\n          index = ptr.parent.nodes.indexOf(ptr) - 1\r\n\r\n          ptr = ptr.parent\r\n        } while (index < 0)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The number of keys between minKey and maxKey (both inclusive).\r\n   * @param {number} minKey\r\n   * If omitted, counts from the start\r\n   * @param {number} maxKey\r\n   * If omitted, counts till the end\r\n   * @returns {number}\r\n   */\r\n  count (minKey, maxKey) {\r\n    let n = 0\r\n\r\n    this.walk(\r\n      minKey !== undefined ? minKey : null,\r\n      maxKey !== undefined ? maxKey : null,\r\n      (key, value) => { n++ }\r\n    )\r\n\r\n    return n\r\n  };\r\n\r\n  /**\r\n   * A string representation of the tree.\r\n   * @returns {string}\r\n   */\r\n  toString () {\r\n    return `Tree(${this.METADATA.order}) ${this.root.toString()}`\r\n  }\r\n\r\n  get length () {\r\n    return this.count()\r\n  }\r\n}\r\n","import EventEmitter from '../../emitter/core'\r\n\r\n/**\r\n * @class NGN.DATA.JSONSchema\r\n * Represents a JSON Schema.\r\n * @fires parsed\r\n * Triggered when the schema is parsed.\r\n */\r\nexport default class NGNJSONSchema extends EventEmitter { // eslint-disable-line no-unused-vars\r\n  /**\r\n   * Create a new JSON schema reference.\r\n   * @param  {Object|String} [schema={}]\r\n   * The schema to parse. This can be the JSON schema object itself or the URL\r\n   * of a remote JSON schema.\r\n   * @param  {NGN.NET.Resource} [NetworkResource]\r\n   * Specify a custom network resource to make the request for a remote schema.\r\n   */\r\n  constructor (schema = {}, NetworkResource = null) {\r\n    super()\r\n\r\n    Object.defineProperties(this, {\r\n      METADATA: NGN.private({\r\n        schema,\r\n        ID: null,\r\n        name: null\r\n      }),\r\n\r\n      PRIVATE: NGN.privateconst({\r\n        MODELS: null,\r\n        NET: NGN.coalesce(NetworkResource, NGN.NET),\r\n\r\n        parsed: false,\r\n\r\n        /**\r\n         * @method PRIVATE.extractCommonPropertyAttributes\r\n         * @param  {object} property\r\n         * Schema metadata object.\r\n         * @param {array} [models=[]]\r\n         * The list of known models. This is passed in because nested objects\r\n         * may exist within a property. NGN identifies these as nested models,\r\n         * even though the JSON schema does not force these to be separate\r\n         * schemas.\r\n         * @return {Object}\r\n         * Returns a clean \"NGN-ready\" field object of common properties.\r\n         */\r\n        extractCommonPropertyAttributes: (property, models = []) => {\r\n          let field = {}\r\n\r\n          // Add pattern\r\n          if (property.pattern) {\r\n            field.pattern = property.pattern\r\n          }\r\n\r\n          // Add description\r\n          if (property.description) {\r\n            field.description = property.description\r\n          }\r\n\r\n          // Add default\r\n          if (property.default) {\r\n            field.default = property.default\r\n          }\r\n\r\n          if (!property.$ref) {\r\n            if (!property.type) {\r\n              field.type = String\r\n            } else {\r\n              let type = NGN.typeof(property.type) === 'array' ? 'array' : property.type.trim().toLowerCase()\r\n\r\n              switch (type) {\r\n                case 'string':\r\n                  let format = NGN.coalesce(property.format, 'unknown').trim().toLowerCase()\r\n\r\n                  field.type = String\r\n\r\n                  switch (format) {\r\n                    case 'date':\r\n                    case 'date-time':\r\n                    case 'datetime':\r\n                    case 'format-time':\r\n                      field.type = Date\r\n                      break\r\n\r\n                    case 'ipv4':\r\n                      field.pattern = NGN.coalesce(\r\n                        property.pattern,\r\n                        /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/ // eslint-disable-line no-useless-escape\r\n                      )\r\n\r\n                      break\r\n\r\n                    case 'ipv6':\r\n                      field.pattern = NGN.coalesce(\r\n                        property.pattern,\r\n                        /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/ // eslint-disable-line no-useless-escape\r\n                      )\r\n\r\n                      break\r\n\r\n                    case 'email':\r\n                      field.pattern = NGN.coalesce(\r\n                        property.pattern,\r\n                        /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[A-Z]{2}|com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum)\\b$/\r\n                      )\r\n\r\n                      break\r\n\r\n                    case 'hostname':\r\n                      field.pattern = NGN.coalesce(\r\n                        property.pattern,\r\n                        /^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)+(\\.([a-zA-Z0-9]+(-[a-zA-Z0-9‌​]+)*))*$/ // eslint-disable-line no-irregular-whitespace\r\n                      )\r\n\r\n                      break\r\n\r\n                    case 'uri':\r\n                      field.pattern = NGN.coalesce(\r\n                        property.pattern,\r\n                        /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})/\r\n                      )\r\n\r\n                      break\r\n                  }\r\n\r\n                  break\r\n\r\n                case 'integer':\r\n                  field.type = Number\r\n                  field.pattern = /^\\d+$/\r\n                  break\r\n\r\n                case 'number':\r\n                  field.type = Number\r\n                  break\r\n\r\n                case 'object':\r\n                  if (property.properties) {\r\n                    let subschema = new NGN.DATA.JSONSchema(property)\r\n\r\n                    subschema.name = `${NGN.coalesce(this.name, 'untitled')}_${NGN.coalesce(subschema.name, 'submodel')}${models.length + 1}`\r\n\r\n                    subschema.getModelDefinitions(definitions => {\r\n                      definitions[definitions.length - 1].name = subschema.name\r\n                      models = definitions.concat(models)\r\n                    })\r\n\r\n                    field = {\r\n                      $model: subschema.name\r\n                    }\r\n                  } else {\r\n                    field.type = Object\r\n                  }\r\n\r\n                  break\r\n\r\n                default:\r\n                  field.type = String\r\n                  break\r\n              }\r\n            }\r\n          }\r\n\r\n          // String validation options\r\n          if (field.type === String || field.type === Number) {\r\n            if (NGN.coalesce(property.minLength, property.minimum)) {\r\n              field.min = NGN.coalesce(property.minLength, property.minimum)\r\n            }\r\n\r\n            if (NGN.coalesce(property.maxLength, property.maximum)) {\r\n              field.max = NGN.coalesce(property.maxLength, property.maximum)\r\n            }\r\n\r\n            // Numeric-specific validations\r\n            if (property.type === Number) {\r\n              if (property.multipleOf) {\r\n                field.multipleOf = property.multipleOf\r\n              }\r\n\r\n              if (property.exclusiveMinimum) {\r\n                field.min = (property.exclusiveMinimum + 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)\r\n              }\r\n\r\n              if (property.exclusiveMaximum) {\r\n                field.max = (property.exclusiveMaximum - 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)\r\n              }\r\n            }\r\n          }\r\n\r\n          // Array validation options\r\n          if (field.type === Array) {\r\n            // Support minimum array length\r\n            if (property.hasOwnProperty('minItems')) {\r\n              field.min = property.minItems\r\n            }\r\n\r\n            // Support maximum array length\r\n            if (property.hasOwnProperty('maxItems')) {\r\n              field.max = property.maxItems\r\n            }\r\n\r\n            if (property.hasOwnProperty('items')) {\r\n              if (NGN.typeof(property.items) === 'array') {\r\n                // Apply tuple validation\r\n                field.tuples = property.items\r\n              } else {\r\n                // Apply list validation\r\n                if (property.items.hasOwnProperty('type')) {\r\n                  field.listType = NGN.getType(property.items.type)\r\n                }\r\n\r\n                if (property.items.hasOwnProperty('enum')) {\r\n                  field.enum = property.items.enum\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return field\r\n        },\r\n\r\n        /**\r\n         * @method PRIVATE.extractModelDefinitions\r\n         * Retrieve all of the NGN.DATA.Model defitions that can be interpreted\r\n         * from this schema.\r\n         * @protected\r\n         * @private\r\n         * @param  {Object} data\r\n         * The schema object.\r\n         * @param  {Array} [models=[]]\r\n         * An array of known models. This method is used recursively, so this\r\n         * argument exists primarily for internal use.\r\n         * @param  {Function} callback\r\n         * Executed when all models have been detected.\r\n         */\r\n        extractModelDefinitions: (data, models = [], callback) => {\r\n          if (NGN.isFn(models)) {\r\n            callback = models\r\n            models = []\r\n          }\r\n\r\n          if (data.type === 'object') {\r\n            let name = NGN.coalesce(data.name, this.name, 'Untitled')\r\n\r\n            if (data.hasOwnProperty('$schema') && name === null && this.METADATA.URL) {\r\n              name = this.METADATA.URL.split(/\\/|\\\\/).pop().replace('.json', '')\r\n            }\r\n\r\n            // Configure the basic model\r\n            let model = {\r\n              name,\r\n              description: NGN.coalesce(data.description, 'No description.'),\r\n              fields: {}\r\n            }\r\n\r\n            // Flag the ID for the schema\r\n            if (data.hasOwnProperty('$schema')) {\r\n              this.METADATA.ID = NGN.coalesce(data.$id, data.$schema)\r\n            }\r\n\r\n            // Queue the tasks since several are async but sequential\r\n            let tasks = new NGN.Tasks()\r\n\r\n            // If the allOf attribute exists, the schema is extending another.\r\n            // Extract the subschema before continuing.\r\n            if (data.hasOwnProperty('allOf')) {\r\n              for (let i = 0; i < data.allOf.length; i++) {\r\n                tasks.add(`Identify base schema: ${data.allOf}`, cont => {\r\n                  let URI = NGN.coalesce(data.allOf[i].$ref, data.allOf[i].$schema)\r\n\r\n                  if (URI !== null) {\r\n                    // When a URI is specified, retrieve the remote schema\r\n                    let baseSchema = new NGN.DATA.JSONSchema(URI)\r\n\r\n                    baseSchema.getModelDefinitions(definitions => {\r\n                      let coreModel = definitions.pop()\r\n\r\n                      Object.assign(model.fields, coreModel.fields)\r\n\r\n                      // If the nested schema has additional models, apply them.\r\n                      if (definitions.length > 0) {\r\n                        models = definitions.concat(models)\r\n                      }\r\n\r\n                      this.METADATA.name = NGN.coalesce(this.METADATA.name, coreModel.name)\r\n\r\n                      cont()\r\n                    })\r\n                  } else if (data.allOf[i].hasOwnProperty('properties')) {\r\n                    // Handle additional properties\r\n                    let additionalProperties = Object.keys(data.allOf[i].properties)\r\n\r\n                    for (let prop = 0; prop < additionalProperties.length; prop++) {\r\n                      model.fields[additionalProperties[prop]] = this.extractCommonPropertyAttributes(data.allOf[i].properties[additionalProperties[prop]])\r\n                    }\r\n\r\n                    cont()\r\n                  }\r\n                })\r\n              }\r\n            }\r\n\r\n            tasks.add('Identify attributes', cont => {\r\n              // If the schema specifies dependencies, it is specifying a set of\r\n              // rules requiring the existance and non-empty value of additional\r\n              // fields. Create NGN.DATA.Rule sets to support this.\r\n              if (data.hasOwnProperty('dependencies')) {\r\n                Object.keys(data.dependencies).forEach(dependency => {\r\n                  let requiredFields = null\r\n                  let dep = data.dependencies[dependency]\r\n\r\n                  if (NGN.typeof(dep) === 'array') {\r\n                    // Simple property dependencies\r\n                    requiredFields = dep\r\n                  } else if (dep.hasOwnProperty('required')) {\r\n                    // Schema dependencies\r\n                    requiredFields = dep.required\r\n                  }\r\n\r\n                  // Add all valid dependencies as rules\r\n                  if (requiredFields !== null) {\r\n                    model.rules[`${dependency} dependency on \"${requiredFields.join(', ')}\"`] = function () {\r\n                      if (NGN.coalesce(this[dependency]) !== null) {\r\n                        for (let i = 0; i < requiredFields.length; i++) {\r\n                          if (NGN.coalesce(this[requiredFields[i]]) === null) {\r\n                            return false\r\n                          }\r\n                        }\r\n                      }\r\n\r\n                      return true\r\n                    }\r\n                  }\r\n                })\r\n              }\r\n\r\n              // Identify the fields\r\n              let properties = Object.keys(data.properties)\r\n              let subtasks = new NGN.Tasks()\r\n\r\n              if (properties.length > 0) {\r\n                for (let i = 0; i < properties.length; i++) {\r\n                  let propertyName = properties[i]\r\n                  let property = data.properties[propertyName]\r\n\r\n                  model.fields[propertyName] = this.PRIVATE.extractCommonPropertyAttributes(property, models)\r\n\r\n                  // If this is a subschema, retrieve it.\r\n                  if (property.$ref) {\r\n                    subtasks.add(next => {\r\n                      let nestedModel = new NGN.DATA.JSONSchema(property.$ref)\r\n\r\n                      nestedModel.getModelDefinitions(definitions => {\r\n                        models = definitions.concat(models)\r\n\r\n                        model.fields[propertyName] = {\r\n                          $model: definitions[definitions.length - 1].name\r\n                        }\r\n\r\n                        next()\r\n                      })\r\n                    })\r\n                  }\r\n\r\n                  model.fields[propertyName].required = NGN.coalesce(data.required, '').indexOf(propertyName) >= 0\r\n                }\r\n              }\r\n\r\n              subtasks.on('complete', () => {\r\n                models.push(model)\r\n                cont()\r\n              })\r\n\r\n              subtasks.run(true)\r\n            })\r\n\r\n            tasks.on('complete', () => callback(models))\r\n            tasks.run(true)\r\n          } else {\r\n            callback(models)\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    this.once('parsed', () => {\r\n      this.PRIVATE.parsed = true\r\n      this.METADATA.ID = NGN.coalesce(this.METADATA.schema.id, this.METADATA.schema.$schema)\r\n    })\r\n\r\n    // Initialize\r\n    switch (NGN.typeof(schema)) {\r\n      case 'string':\r\n        // If schema is actually a URL, retrieve it.\r\n        this.METADATA.URL = schema\r\n        this.PRIVATE.NET.json(schema, (err, schema) => {\r\n          if (err) {\r\n            throw err\r\n          }\r\n\r\n          this.METADATA.schema = schema\r\n          this.METADATA.name = NGN.coalesce(schema.name, this.METADATA.URL.split(/\\/|\\\\/).pop().replace('.json', ''))\r\n\r\n          this.emit('parsed')\r\n        })\r\n\r\n        break\r\n\r\n      case 'object':\r\n        this.METADATA.name = NGN.coalesce(schema.name, 'Untitled')\r\n        this.emit('parsed')\r\n        break\r\n\r\n      default:\r\n        throw new Error('Invalid schema definition.')\r\n    }\r\n  }\r\n\r\n  get id () {\r\n    if (this.METADATA.ID) {\r\n      return this.METADATA.ID\r\n    }\r\n\r\n    let id = NGN.coalesce(this.METADATA.URL)\r\n\r\n    if (id !== null) {\r\n      return id\r\n    }\r\n\r\n    let root\r\n    /* node-only */\r\n    root = NGN.coalesce(this.PRIVATE.NET.baseUrl, `http://${require('os').hostname()}`)\r\n    /* end-node-only */\r\n    /* browser-only */\r\n    root = NGN.coalesce(this.PRIVATE.NET.baseUrl, window.location.origin)\r\n    /* end-browser-only */\r\n\r\n    this.METADATA.ID = this.PRIVATE.NET.normalizeUrl(`${root}/${NGN.coalesce(this.name, 'untitled').toLowerCase()}.json`)\r\n\r\n    return this.METADATA.ID\r\n  }\r\n\r\n  get name () {\r\n    return this.METADATA.name\r\n  }\r\n\r\n  set name (value) {\r\n    this.METADATA.name = NGN.coalesce(value, 'Untitled')\r\n  }\r\n\r\n  getModelDefinitions (callback) {\r\n    if (!this.PRIVATE.parsed) {\r\n      this.once('parsed', () => {\r\n        this.getModelDefinitions(callback)\r\n      })\r\n    } else if (!this.PRIVATE.MODELS) {\r\n      this.PRIVATE.extractModelDefinitions(this.METADATA.schema, [], definitions => {\r\n        this.PRIVATE.MODELS = definitions\r\n        callback(definitions)\r\n      })\r\n    } else {\r\n      callback(this.PRIVATE.MODELS)\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from '../emitter/core'\r\n\r\n/**\r\n * @class NGN.DATA.TransactionLog\r\n * The transaction log is a history/changelog. It can be used to revert values\r\n * to a prior state or (in limited cases) restore values.\r\n *\r\n * The transaction log is based on a commit log and cursor. The commit log\r\n * is an ordered list of values. The cursor is a position within the log.\r\n *\r\n * **How it Works:**\r\n *\r\n * The most common purpose of a transaction log is to revert changes (undo).\r\n * This is accomplished with the #rollback method.\r\n *\r\n * The #rollback method does not remove records, nor does the #advance.\r\n * The methods repositions the log cursor. Only #commit activities actually\r\n * modify the log.\r\n *\r\n * For example, a log containing 5 committed records will have the cursor set to\r\n * the latest entry by default:\r\n *\r\n * ```\r\n * [1, 2, 3, 4, 5]\r\n *              ^\r\n * ```\r\n *\r\n * Executing rollback(2) moves the cursor \"back\" two positions, from `5` to\r\n * `3`.\r\n *\r\n * ```\r\n * [1, 2, 3, 4, 5]\r\n *        ^\r\n * ```\r\n *\r\n * At this point, no records have been removed. It would still be\r\n * possible to #advance the cursor forward to `4` or `5`. However; once a\r\n * #commit is executed, all logs _after_ the cursor are removed before the new\r\n * transaction is committed to the log.\r\n *\r\n * ```\r\n * [1, 2, 3] // Commit removes [4, 5]\r\n *        ^\r\n *\r\n * [1, 2, 3, 6] // Commit commits new entry and advances cursor.\r\n *           ^\r\n * ```\r\n *\r\n * It is also possible to immediately #flush the log without requiring a new\r\n * #commit. This will immediately remove all log entries after the\r\n * current cursor position.\r\n */\r\nexport default class NGNTransactionLog extends EventEmitter { // eslint-disable-line\r\n  /**\r\n   * Create a new transaction log.\r\n   * @param  {number} [maxEntryCount=10]\r\n   * The maximum number of entries to keep in the log. Set this to `-1` to keep\r\n   * an unlimited number of logs.\r\n   */\r\n  constructor (maxEntryCount) {\r\n    super()\r\n\r\n    Object.defineProperties(this, {\r\n      METADATA: NGN.private({\r\n        transaction: {},\r\n        changeOrder: [],\r\n        cursor: null,\r\n        max: NGN.coalesce(maxEntryCount, 10)\r\n      })\r\n    })\r\n  }\r\n\r\n  get length () {\r\n    return this.METADATA.changeOrder.length\r\n  }\r\n\r\n  /**\r\n   * @property {Symbol} cursor\r\n   * The active cursor of the log.\r\n   */\r\n  get cursor () {\r\n    return this.METADATA.cursor\r\n  }\r\n\r\n  set cursor (value) {\r\n    if (value !== null && !this.METADATA.transaction.hasOwnProperty(value)) {\r\n      throw new Error('Cannot set cursor for transaction log (does not exist).')\r\n    }\r\n\r\n    this.METADATA.cursor = value\r\n  }\r\n\r\n  /**\r\n   * @property {any} currentValue\r\n   * Returns the value at the current cursor position.\r\n   */\r\n  get currentValue () {\r\n    if (this.METADATA.cursor === null) {\r\n      return undefined\r\n    }\r\n\r\n    return this.getCommit(this.METADATA.cursor).value\r\n  }\r\n\r\n  /**\r\n   * @property {Number}\r\n   * The index of the log entry at the current cursor position.\r\n   */\r\n  get cursorIndex () {\r\n    if (this.METADATA.cursor === null) {\r\n      return undefined\r\n    }\r\n\r\n    return this.METADATA.changeOrder.indexOf(this.METADATA.cursor)\r\n  }\r\n\r\n  /**\r\n   * Add a new value to the transaction log.\r\n   * @param {Any} value\r\n   * The value to assign to the log (record).\r\n   * @return {Number}\r\n   * Returns the transaction number\r\n   * @fires log {Symbol}\r\n   * Fires a log event with the transaction ID (symbol) for reference.\r\n   */\r\n  commit (value) {\r\n    let id = typeof value === 'symbol' ? Symbol(String(value)) : Symbol(NGN.coalesce(value, NGN.typeof(value)).toString())\r\n\r\n    this.METADATA.transaction[id] = [\r\n      new Date(),\r\n      value\r\n    ]\r\n\r\n    this.flush()\r\n\r\n    this.METADATA.changeOrder.push(id)\r\n    this.METADATA.cursor = id\r\n\r\n    if (this.METADATA.max > 0 && this.METADATA.changeOrder.length > this.METADATA.max) {\r\n      let removedId = this.METADATA.changeOrder.shift()\r\n      delete this.METADATA.transaction[removedId]\r\n    }\r\n\r\n    this.emit('commit', id, null)\r\n\r\n    return id\r\n  }\r\n\r\n  /**\r\n   * Return the entry for the specified commit ID.\r\n   * @param  {Symbol} id\r\n   * The transaction ID.\r\n   * @return {Object}\r\n   * Returns an object with `timestamp` and `value` keys.\r\n   */\r\n  getCommit (id = null) {\r\n    if (!this.METADATA.transaction.hasOwnProperty(id)) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      timestamp: this.METADATA.transaction[id][0],\r\n      value: this.METADATA.transaction[id][1]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all transaction log entries from the current cursor onward.\r\n   */\r\n  flush () {\r\n    if (this.METADATA.cursor === null) {\r\n      return\r\n    }\r\n\r\n    let position = this.METADATA.changeOrder.indexOf(this.METADATA.cursor)\r\n\r\n    // If the whole log is cleared, reset it silently.\r\n    if (position === 0) {\r\n      return\r\n    }\r\n\r\n    let removedEntries = this.METADATA.changeOrder.splice(position + 1)\r\n\r\n    for (let i = 0; i < removedEntries.length; i++) {\r\n      delete this.METADATA.transaction[removedEntries[i]]\r\n    }\r\n\r\n    this.METADATA.cursor = this.METADATA.changeOrder[this.METADATA.changeOrder.length - 1]\r\n  }\r\n\r\n  /**\r\n   * Rollback the log to the specified index/cursor.\r\n   * @param  {Number|Symbol} [index=1]\r\n   * The index may be a number or a commit ID (symbol).\r\n   *\r\n   * **Specifying a number** will rollback the log by the specified number of\r\n   * commits. By default, the index is `1`, which is the equivalent of a simple\r\n   * \"undo\" operation. Specifying `2` would \"undo\" two operations. Values less\r\n   * than or equal to zero are ignored. Values greater than the total number of\r\n   * committed transactions trigger a reset.\r\n   *\r\n   * **Specifying a symbol** will rollback the log to the specified commit log\r\n   * (the symbol is the commit log ID).\r\n   * @fires rollback {Object}\r\n   * This fires a `rollback` event containing the active cursor.\r\n   * @return {Symbol}\r\n   * Returns the active cursor upon completion of rollback.\r\n   */\r\n  rollback (index = 1) {\r\n    // If the log is empty, ignore the rollback\r\n    if (this.METADATA.changeOrder.length === 0) {\r\n      return null\r\n    }\r\n\r\n    if (typeof index === 'symbol') {\r\n      this.cursor = index\r\n      return index\r\n    }\r\n\r\n    if (index >= this.METADATA.changeOrder.length) {\r\n      this.METADATA.cursor = this.METADATA.changeOrder[0]\r\n    } else {\r\n      // Make sure the index is a symbol\r\n      if (typeof index === 'number') {\r\n        if (index <= 0) {\r\n          return this.METADATA.cursor\r\n        }\r\n\r\n        let currentPosition = this.METADATA.changeOrder.indexOf(this.METADATA.cursor)\r\n        currentPosition -= index\r\n\r\n        if (currentPosition <= 0) {\r\n          currentPosition = 0\r\n        }\r\n\r\n        index = this.METADATA.changeOrder[currentPosition]\r\n      }\r\n\r\n      this.METADATA.cursor = index\r\n    }\r\n\r\n    this.emit('rollback', this.METADATA.cursor, null)\r\n\r\n    return this.METADATA.cursor\r\n  }\r\n\r\n  /**\r\n   * Advance the log to the specified index/cursor.\r\n   * @param  {Number|Symbol} [index=1]\r\n   * The index may be a number or a commit ID (symbol).\r\n   *\r\n   * **Specifying a number** will advance the log by the specified number of\r\n   * commits. By default, the index is `1`, which is the equivalent of a simple\r\n   * \"redo\" operation. Specifying `2` would \"redo\" two operations. Values less\r\n   * than or equal to zero are ignored. Values greater than the total number of\r\n   * committed transactions will advance the cursor to the last entry.\r\n   *\r\n   * **Specifying a symbol** will advance the log to the specified commit log\r\n   * record (the symbol is the commit log ID).\r\n   * @fires advance {Object}\r\n   * This fires a `advance` event containing the active cursor.\r\n   * @return {Symbol}\r\n   * Returns the active cursor upon completion of rollback.\r\n   */\r\n  advance (index = 1) {\r\n    // If the log is empty, ignore the rollback\r\n    if (this.METADATA.changeOrder.length === 0) {\r\n      return null\r\n    }\r\n\r\n    // Make sure the index is a symbol\r\n    if (typeof index === 'number') {\r\n      if (index <= 0) {\r\n        return this.METADATA.cursor\r\n      }\r\n\r\n      let currentPosition = this.METADATA.changeOrder.indexOf(this.METADATA.cursor)\r\n      currentPosition += index\r\n\r\n      if (currentPosition >= this.METADATA.changeOrder.length) {\r\n        currentPosition = this.METADATA.changeOrder.length - 1\r\n      }\r\n\r\n      index = this.METADATA.changeOrder[currentPosition]\r\n    }\r\n\r\n    this.METADATA.cursor = index\r\n\r\n    this.emit('advance', this.METADATA.cursor, null)\r\n\r\n    return this.METADATA.cursor\r\n  }\r\n\r\n  /**\r\n   * Clear the transaction log.\r\n   */\r\n  reset (suppressEvents = false) {\r\n    this.METADATA.transaction = {}\r\n    this.METADATA.changeOrder = []\r\n    this.METADATA.cursor = null\r\n\r\n    if (!suppressEvents) {\r\n      this.emit('reset')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {Array} log\r\n   * Returns the entire log, in ascending historical order (oldest first).\r\n   * This may be a time-consuming operation if the log is large.\r\n   *\r\n   * **Example:**\r\n   *\r\n   * ```js\r\n   * [{\r\n   *   timestamp: Date,\r\n   *   value: 'some value'\r\n   * },{\r\n   *   timestamp: Date,\r\n   *   value: 'some other value'\r\n   * }]\r\n   */\r\n  get log () {\r\n    return this.METADATA.changeOrder.map(entry => {\r\n      return {\r\n        timestamp: this.METADATA.transaction[entry][0],\r\n        value: this.METADATA.transaction[entry][1],\r\n        activeCursor: this.METADATA.cursor === entry\r\n      }\r\n    })\r\n  }\r\n}\r\n","/**\r\n  * @class NGN.DATA.Rule\r\n  * A data validation rule.\r\n  * @fires validator.add\r\n  */\r\nexport default class NGNDataValidationRule { // eslint-disable-line\r\n  /**\r\n   * Create a new data rule.\r\n   * @param {Function/String[]/Number[]/Date[]/RegExp/Array} rule\r\n   * * When rule is a _function_, the value is passed to it as an argument.\r\n   * * When rule is a _String_, the value is compared for an exact match (case sensitive)\r\n   * * When rule is a _Number_, the value is compared for equality.\r\n   * * When rule is a _Date_, the value is compared for exact equality.\r\n   * * When rule is a _RegExp_, the value is tested and the results of the RegExp#test are used to validate.\r\n   * * When rule is an _Array_, the value is checked to exist in the array, regardless of data type. This is treated as an `enum`.\r\n   * * When rule is _an array of dates_, the value is compared to each date for equality.\r\n   * @param {string} [name]\r\n   * An optional name for the rule. This can be useful when debugging data issues.\r\n   * @param {object} [scope]\r\n   * Apply a custom scope to the validation functions (applicable to custom methods only).\r\n   */\r\n  constructor (validation, name = null, scope = null) {\r\n    const type = NGN.typeof(validation)\r\n\r\n    Object.defineProperties(this, {\r\n      RULE: NGN.private({\r\n        type: type,\r\n        validator: validation,\r\n        name: NGN.coalesce(name, `Untitled ${type.toUpperCase()} Validation`),\r\n        scope: NGN.coalesce(scope, this)\r\n      })\r\n    })\r\n  }\r\n\r\n  get name () {\r\n    return this.RULE.name\r\n  }\r\n\r\n  get type () {\r\n    return this.RULE.type\r\n  }\r\n\r\n  /**\r\n   * @method test\r\n   * Test a value against the validation rule.\r\n   * @param {any} value\r\n   * The value to test.\r\n   * @returns {boolean}\r\n   * Returns `true` when the value meets the rule expectations and `false` when it does not.\r\n   */\r\n  test (value) {\r\n    if (NGN.isFn(this.RULE.validator)) {\r\n      // Custom enforcement function\r\n      return this.RULE.validator.apply(this.RULE.scope, [value])\r\n    } else {\r\n      switch (this.type) {\r\n        // Enumeration\r\n        case 'array':\r\n          return this.RULE.validator.indexOf(value) !== -1\r\n\r\n        // Pattern Matching\r\n        case 'regexp':\r\n          return this.RULE.validator.test(value)\r\n\r\n        default:\r\n          return this.RULE.validator === value\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Rule from './Rule'\r\n\r\n/**\r\n * @class NGN.DATA.RangeRule\r\n * A special rule to validate values within one or more ranges.\r\n * Supports numeric ranges, date ranges, and simple string-based\r\n * ranges (string length).\r\n */\r\nexport default class NGNDataRangeValidationRule extends Rule { // eslint-disable-line\r\n  /**\r\n   * Create a new range rule.\r\n   * @param {string} [name]\r\n   * An optional name for the rule. This can be useful when debugging data issues.\r\n   * @param {object} [scope=null]\r\n   * Apply a custom scope to the validation functions (applicable to custom methods only).\r\n   * @param {Array} [range]\r\n   * An enumeration of acceptable numeric ranges. For example, if\r\n   * the value must be between 5-10 or from 25-50, the configuration\r\n   * would look like:\r\n   *\r\n   * ```js\r\n   * range: [\r\n   *   [5, 10],\r\n   *   ['25-50']\r\n   * ]\r\n   * ```\r\n   *\r\n   * To accept anything below a certain number or anything over a certain\r\n   * number while also specifying one or more ranges, use a `null` value.\r\n   *\r\n   * For example:\r\n   *\r\n   * ```js\r\n   * range: [\r\n   *   [null, 0],\r\n   *   [5, 10],\r\n   *   ['25-50'],\r\n   *   [100, null]\r\n   * ]\r\n   * ```\r\n   *\r\n   * The aforementioned example would accept a value less than `zero`,\r\n   * between `5` and `10`, between `25` and `50`, or over `100`. Therefore,\r\n   * acceptable values could be `-7`, `7`, `25`, `42`,  `10000`, or anything\r\n   * else within the ranges. However, the values `3`, `19`, and `62` would\r\n   * all fail because they're outside the ranges.\r\n   */\r\n  constructor (name, scope, range = []) {\r\n    if (NGN.typeof(scope) === 'array') {\r\n      range = scope\r\n      scope = null\r\n    }\r\n\r\n    super(null, name, scope)\r\n\r\n    this.RULE.prepareRange = function (value) {\r\n      // If a simple range is specified (single array), format it for the rule processor.\r\n      value = NGN.forceArray(value)\r\n\r\n      if (NGN.typeof(value[0]) !== 'array') {\r\n        value = [value]\r\n      }\r\n\r\n      for (let i = 0; i < value.length; i++) {\r\n        if (value[i].length !== 2) {\r\n          if (NGN.typeof(value[i][0]) !== 'string') {\r\n            throw new Error(`Invalid range: \"${value[i].toString()}\"`)\r\n          }\r\n\r\n          value[i] = value[i][0].replace(/[^0-9->]/gi, '').split(/->{1,100}/)\r\n        }\r\n\r\n        if (NGN.typeof(value[i][0]) !== 'number') {\r\n          value[i][0] = NGN.coalesce(value[i][0], '').replace(/null|none|any/gi, '')\r\n        }\r\n\r\n        if (NGN.typeof(value[i][1]) !== 'number') {\r\n          value[i][1] = NGN.coalesce(value[i][1], '').replace(/null|none|any/gi, '')\r\n        }\r\n      }\r\n\r\n      return value\r\n    }\r\n\r\n    // Initialize the range\r\n    this.RULE.range = new Set()\r\n    this.range = range\r\n\r\n    // Create the validation function.\r\n    this.RULE.validator = (value) => {\r\n      let isString = NGN.typeof(value) === 'string'\r\n      let range = this.range\r\n\r\n      for (let i = 0; i < range.length; i++) {\r\n        let min = NGN.coalesceb(range[i][0], isString ? value.length : value)\r\n        let max = NGN.coalesceb(range[i][1], isString ? value.length : value)\r\n\r\n        if (\r\n          (isString && value.length >= min && value.length <= max) ||\r\n          (!isString && value >= min && value <= max)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n\r\n      return false\r\n    }\r\n  }\r\n\r\n  get range () {\r\n    return Array.from(this.RULE.range.values())\r\n  }\r\n\r\n  set range (value) {\r\n    this.RULE.range = new Set()\r\n    this.addRange(value)\r\n  }\r\n\r\n  /**\r\n   * Add a range to the rule.\r\n   * @param {array} value\r\n   * A range can be a single array, such as `[min, max]`. An array of arrays is\r\n   * also acceptable, such as `[[min1, max1], [min2, max2]]`.\r\n   */\r\n  addRange (value) {\r\n    value = this.RULE.prepareRange(value)\r\n\r\n    for (let i = 0; i < value.length; i++) {\r\n      if (NGN.coalesceb(value[i][0]) !== null && NGN.coalesceb(value[i][1]) !== null && value[i][1] < value[i][0]) {\r\n        throw new Error(`Invalid value \"${value[i][0].toString()} -> ${value[i][1].toString()}\". Minimum value cannot exceed maximum.`)\r\n      }\r\n\r\n      this.RULE.range.add(value[i])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove an existing range from the rule.\r\n   * @param {array} value\r\n   * A range can be a single array, such as `[min, max]`. An array of arrays is\r\n   * also acceptable, such as `[[min1, max1], [min2, max2]]`.\r\n   */\r\n  removeRange (value) {\r\n    let range = this.range\r\n    value = this.RULE.prepareRange(value)\r\n\r\n    for (let i = 0; i < value.length; i++) {\r\n      for (let x = 0; x < range.length; x++) {\r\n        if (value[i].toString() === range[x].toString()) {\r\n          this.RULE.range.delete(range[x])\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from '../../emitter/core'\r\n\r\n/**\r\n * @class NGN.DATA.Field\r\n * Represents a data field to be used in a model/record.\r\n * @fires hidden\r\n * Triggered when the field changes from unhidden to hidden.\r\n * @fires unhidden\r\n * Triggered when the field changes from hidden to unhidden.\r\n * @fires update {object}\r\n * Triggered when the field value is updated. The payload contains\r\n * an object with old and new values:\r\n *\r\n * ```js\r\n * {\r\n *   old: 'old value',\r\n *   new: 'new value'\r\n * }\r\n * ```\r\n * @fires invalid\r\n * Triggered when a previously valid value becomes invalid.\r\n * @fires valid\r\n * Triggered when a previously invalid value becomes valid.\r\n * @fires rule.add {NGN.DATA.Rule}\r\n * Triggered when a new validation rule is added. The rule is emitted\r\n * to event handlers.\r\n * @fires rule.remove {NGN.DATA.Rule}\r\n * Triggered when a validation rule is removed. The rule is emitted\r\n * to event handlers.\r\n * @fires keystatus.changed {boolean}\r\n * Triggered when the key (identifier) status changes. The boolean\r\n * payload indicates whether the field is considered an identifier.\r\n */\r\nexport default class NGNDataField extends EventEmitter { // eslint-disable-line\r\n  /**\r\n   * @param {string|object} configuration\r\n   * Accepts an object with all configuration objects, or a string representing\r\n   * the name of the field.\r\n   */\r\n  constructor (cfg) {\r\n    cfg = cfg || {}\r\n\r\n    if (typeof cfg === 'string') {\r\n      cfg = {\r\n        name: cfg\r\n      }\r\n    }\r\n\r\n    // Validate field configuration values\r\n    if (cfg.hasOwnProperty('pattern') && NGN.typeof(cfg.pattern) !== 'regexp') {\r\n      throw new Error('Invalid data field configuration. Pattern must be a valid JavaScript regular expression (RegExp).')\r\n    }\r\n\r\n    if (cfg.type === undefined) {\r\n      if (cfg.default) {\r\n        cfg.type = NGN.getType(NGN.typeof(cfg.default), String)\r\n      }\r\n    }\r\n\r\n    super(cfg)\r\n\r\n    const EMPTYDATA = Symbol('empty')\r\n\r\n    Object.defineProperties(this, {\r\n      METADATA: NGN.privateconst({\r\n        /**\r\n         * @cfg {boolean} [required=false]\r\n         * Indicates the value is required.\r\n         */\r\n        required: NGN.coalesce(cfg.required, false),\r\n\r\n        /**\r\n         * @cfgproperty {boolean} [hidden=false]\r\n         * Indicates the field is hidden (metadata).\r\n         */\r\n        hidden: NGN.coalesce(cfg.hidden, false),\r\n\r\n        // Identifies the property as a standard data attribute.\r\n        // Alternative options include `data`, `key`, `join`, `virtual`.\r\n        fieldType: NGN.coalesce(cfg.identifier, false) ? 'key' : 'data',\r\n\r\n        isIdentifier: NGN.coalesce(cfg.identifier, false),\r\n\r\n        /**\r\n         * @cfg {boolean} [autocorrectInput=true]\r\n         * Attempt to automatically correct data type values. For example,\r\n         * a numeric field receiving a value of `'10'` will automatically\r\n         * convert the input to `10`. Only arrays, numbers, and booleans are\r\n         * supported. See NGN#forceArray, NGN#forceBoolean, and NGN#forceNumber\r\n         * for details.\r\n         */\r\n        autocorrectInput: NGN.coalesce(cfg.autocorrectInput, false),\r\n\r\n        /**\r\n         * @cfg {RegExp} [pattern]\r\n         * A pattern, as defined by a standard RegExp, that the data must match.\r\n         */\r\n        pattern: NGN.coalesceb(cfg.pattern),\r\n\r\n        /**\r\n         * @cfgproperty {string} name\r\n         * The field name.\r\n         */\r\n        name: NGN.coalesce(cfg.name),\r\n\r\n        /**\r\n         * @cfgproperty {string} description\r\n         * This is a metadata field, primarily used for documentation\r\n         * or schema generation purposes.\r\n         */\r\n        description: NGN.coalesce(cfg.description, `${NGN.typeof(cfg.type)} field`),\r\n\r\n        /**\r\n         * @cfgproperty {string} [sourceName]\r\n         * A source name represents the physical name of an attribute as it\r\n         * would be recognized in a system of record. For example, a field\r\n         * named `firstname` may need to be written to disk/memory as `gn`\r\n         * (commonly used as shorthand for givenName in LDAP environments\r\n         * and relational databases).\r\n         *\r\n         * By specifying `firstname` as the field name and `gn` as the source\r\n         * name, the field will automatically map values from the source\r\n         * to model name and vice versa.\r\n         *\r\n         * For instance, a JSON input may look like:\r\n         *\r\n         * ```js\r\n         * {\r\n         *   \"gn\": \"John\",\r\n         *   \"sn\": \"Doe\"\r\n         * }\r\n         * ```\r\n         *\r\n         * When this data is applied to the field (or loaded in a\r\n         * NGN.DATA.Model), the field #value for `firstname` would be `John`.\r\n         * If the field #value is changed to `Jill` (i.e.\r\n         * `firstname.value = 'Jill'`), the resulting data set would look like:\r\n         *\r\n         * ```js\r\n         * {\r\n         *   \"gn\": \"Jill\",\r\n         *   \"sn\": \"Doe\"\r\n         * }\r\n         * ```\r\n         */\r\n        sourceName: NGN.coalesce(cfg.sourceName),\r\n\r\n        /**\r\n         * @cfg {any} default\r\n         * The default value of the field when no value is specified.\r\n         */\r\n        default: NGN.coalesce(cfg.default),\r\n\r\n        lastValue: Symbol('no.value'),\r\n\r\n        /**\r\n         * @cfg {Primitive} [type=String]\r\n         * The JS primitive representing the type of data represented\r\n         * by the field.\r\n         */\r\n        dataType: NGN.coalesce(cfg.type, String),\r\n\r\n        /**\r\n         * @cfg {function} [rule[]]\r\n         * A function, or an array of functions, which determine whether the\r\n         * field value is valid or not. These functions receive a single argument\r\n         * (the data value) and must return a Boolean value.\r\n         */\r\n        rules: NGN.coalesce(cfg.rule, cfg.rules, cfg.validators, []),\r\n        violatedRule: null,\r\n\r\n        /**\r\n         * @cfg {boolean} [allowInvalid=true]\r\n         * If this is set to `false`, invalid values will throw an error.\r\n         */\r\n        allowInvalid: NGN.coalesce(cfg.allowInvalid, true),\r\n\r\n        /**\r\n         * @cfg {function} transformer\r\n         * A synchronous transformation function will be applied each time\r\n         * the field value is set. This can be used to modify data _before_ it\r\n         * is stored as a field value. The returned value from the function\r\n         * will be the new value of the field.\r\n         *\r\n         * The transformation function will receive the input as it's only\r\n         * aregument. For example:\r\n         *\r\n         * ```js\r\n         * let field = new NGN.DATA.Field({\r\n         *   name: 'testfield',\r\n         *   transformer: function (input) {\r\n         *     return input + '_test'\r\n         *   }\r\n         * })\r\n         *\r\n         * field.value = 'a'\r\n         *\r\n         * console.log(field.value) // Outputs \"a_test\"\r\n         * ```\r\n         *\r\n         * **Transformations can affect performance.** In small data sets,\r\n         * transformations are typically negligible, only adding a few\r\n         * milliseconds to processing time. This may affect large data sets,\r\n         * particularly data stores using defauly bulk recod loading.\r\n         */\r\n        TRANSFORM: NGN.coalesce(cfg.transformer),\r\n\r\n        RAWDATAPLACEHOLDER: EMPTYDATA,\r\n        RAW: EMPTYDATA,\r\n        ENUMERABLE_VALUES: null,\r\n        REVERSE_ENUMERABLE_VALUES: null,\r\n        IS_NEW: true,\r\n\r\n        EVENTS: new Set([\r\n          'hidden',\r\n          'unhidden',\r\n          'update',\r\n          'invalid',\r\n          'valid',\r\n          'rule.add',\r\n          'rule.remove'\r\n        ]),\r\n\r\n        /**\r\n         * @cfg {boolean} [audit=false]\r\n         * Enable auditing to support #undo/#redo operations. This creates and\r\n         * manages a NGN.DATA.TransactionLog.\r\n         */\r\n        AUDITABLE: NGN.coalesce(cfg.audit, false),\r\n\r\n        /**\r\n         * @cfg {Number} [auditMaxEntries=20]\r\n         * The maximum number of historical records to maintain for the field.\r\n         * See NGN.DATA.TransactionLog#constructor for details.\r\n         */\r\n        AUDITLOG: NGN.coalesce(cfg.audit, false)\r\n          ? new NGN.DATA.TransactionLog(NGN.coalesce(cfg.auditMaxEntries, 10))\r\n          : null,\r\n\r\n        /**\r\n         * @cfg {NGN.DATA.Model} [model]\r\n         * Optionally specify the parent model.\r\n         */\r\n        model: null,\r\n\r\n        // Set the value using a configuration.\r\n        setValue: (value, suppressEvents = false, ignoreAudit = false) => {\r\n          // Preprocessing (transform input)\r\n          if (this.METADATA.TRANSFORM !== null && NGN.isFn(this.METADATA.TRANSFORM)) {\r\n            value = this.METADATA.TRANSFORM.call(this, value)\r\n          }\r\n\r\n          // Attempt to auto-correct input when possible.\r\n          if (this.METADATA.autocorrectInput && this.type !== NGN.typeof(value)) {\r\n            value = this.autoCorrectValue(value)\r\n          }\r\n\r\n          // Ignore changes when the value hasn't been modified.\r\n          if (value === this.value) {\r\n            return\r\n          }\r\n\r\n          let change = {\r\n            field: this,\r\n            old: typeof this.METADATA.RAW === 'symbol' ? undefined : this.METADATA.RAW,\r\n            new: value\r\n          }\r\n\r\n          let priorValueIsValid = this.valid\r\n\r\n          this.METADATA.RAW = value\r\n\r\n          // Notify when an invalid value is detected.\r\n          if (!this.valid) {\r\n            // If invalid values are explicitly prohibited, throw an error.\r\n            // The value is rolled back before throwing the error so developers may\r\n            // catch the error and continue processing.\r\n            if (!this.METADATA.allowInvalid) {\r\n              this.METADATA.RAW = change.old\r\n              throw new Error(`\"${value}\" did not pass the ${this.METADATA.violatedRule} rule.`)\r\n            } else {\r\n              change.reason = `\"${value}\" did not pass the ${this.METADATA.violatedRule} rule.`\r\n              NGN.WARN(change.reason)\r\n            }\r\n\r\n            this.emit('invalid', change)\r\n          } else if (!suppressEvents && priorValueIsValid !== null && priorValueIsValid) {\r\n            // If the field BECAME valid (compared to prior value),\r\n            // emit an event.\r\n            this.emit('valid', change)\r\n          }\r\n\r\n          if (typeof this.METADATA.lastValue === 'symbol') {\r\n            this.METADATA.lastValue = value\r\n          }\r\n\r\n          // If auditing is enabled and not explicitly ignored by an internal\r\n          // operation, commit the change.\r\n          if (!ignoreAudit && !this.virtual && this.METADATA.AUDITABLE) {\r\n            change.cursor = this.METADATA.AUDITLOG.commit(this.METADATA.RAW)\r\n          }\r\n\r\n          // Notify when the update is complete.\r\n          if (!suppressEvents) {\r\n            this.emit('update', change)\r\n          }\r\n\r\n          // Mark unnecessary code for garbage collection.\r\n          priorValueIsValid = null\r\n          change = null\r\n        },\r\n\r\n        // Submit the payload to the parent model (if applicable).\r\n        commitPayload: (payload) => {\r\n          if (this.METADATA.model) {\r\n            payload.action = 'update'\r\n            payload.join = true\r\n\r\n            this.increaseMaxListeners(3)\r\n            this.METADATA.model.emit(\r\n              [\r\n                'update',\r\n                `${payload.field}.update`,\r\n                `update.${payload.field}`\r\n              ],\r\n              payload\r\n            )\r\n\r\n            payload = null // Mark for garbage collection\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // Apply common rules\r\n    if (NGN.typeof(this.METADATA.rules) !== 'array') {\r\n      this.METADATA.rules = NGN.forceArray(this.METADATA.rules)\r\n    }\r\n\r\n    if (this.METADATA.rules.length > 0) {\r\n      for (let i = 0; i < this.METADATA.rules.length; i++) {\r\n        if (NGN.isFn(this.METADATA.rules[i]) && !(this.METADATA.rules[i] instanceof NGN.DATA.Rule)) {\r\n          this.METADATA.rules[i] = new NGN.DATA.Rule(this.METADATA.rules[i], `Custom Rule #${i + 1}`)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Apply pattern validation if specified.\r\n    if (this.METADATA.dataType === String) {\r\n      if (this.METADATA.pattern !== null) {\r\n        this.METADATA.rules.unshift(new NGN.DATA.Rule(cfg.pattern, `Pattern Match (${cfg.pattern.toString()})`))\r\n      }\r\n\r\n      /**\r\n       * @cfg {Boolean} [nonempty]\r\n       * @info This validation attribute applies to #String fields only.\r\n       * Validates a value is not blank, `null`, or `undefined`.\r\n       */\r\n      if (cfg.nonempty) {\r\n        this.METADATA.rules.unshift(new NGN.DATA.Rule(value => {\r\n          return value.trim().length > 0\r\n        }, `No Blanks (${cfg.pattern.toString()})`))\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @cfg {Number} [min]\r\n     * @info This validation attribute applies to #Array, #String, and #Number fields only.\r\n     * Specify a minimum value:\r\n     *\r\n     * - For string values, this is a minimum number of characters.\r\n     * - For numeric values, this is a minimum inclusive value (i.e. value must be greater than\r\n     * or equal to the minimum).\r\n     * - For arrays, this is a minimum number of items that must exist in the array.\r\n     */\r\n    /**\r\n     * @cfg {Number} [max]\r\n     * @info This validation attribute applies to #Array, #String, and #Number fields only.\r\n     * Specify a maximum value:\r\n     *\r\n     * - For string values, this is a maximum number of characters.\r\n     * - For numeric values, this is a maximum inclusive value (i.e. value must be less than\r\n     * or equal to the maximum).\r\n     * - For arrays, this is a maximum number of items that may exist in the array.\r\n     */\r\n\r\n    // Apply number-specific validations.\r\n    if (this.METADATA.dataType === Number || this.METADATA.dataType === Date || this.METADATA.dataType === String) {\r\n      // Support minimum/maximum range\r\n      if (NGN.objectHasAny(cfg, 'min', 'minimum', 'max', 'maximum')) {\r\n        cfg.range = NGN.forceArray(NGN.coalesce(cfg.range))\r\n        cfg.range.push([NGN.coalesce(cfg.min, cfg.minimum), NGN.coalesce(cfg.max, cfg.maximum)])\r\n      }\r\n\r\n      /**\r\n       * @cfg {Number} [range]\r\n       * @info This validation attribute applies to #String and #Number fields only.\r\n       * Specify a range of acceptable values:\r\n       *\r\n       * - For numbers, this implies inclusive ranges. For example, `1-10` means \"between 1 and 10, where both 1 and 10 are valid.\"\r\n       * - For strings, this implies inclusive ranges just like numbers, where the number is the character count.\r\n       */\r\n      if (cfg.hasOwnProperty('range')) {\r\n        this.METADATA.rules.unshift(new NGN.DATA.RangeRule('Numeric Range', cfg.range))\r\n      }\r\n\r\n      if (this.METADATA.dataType === Number) {\r\n        // Support numeric patterns (i.e. support for integers)\r\n        if (NGN.coalesce(cfg.pattern)) {\r\n          this.METADATA.rules.unshift(new NGN.DATA.Rule(value => {\r\n            return cfg.pattern.test(value.toString())\r\n          }, `Numeric Pattern (${cfg.pattern.toString().substr(0, 15) + (cfg.pattern.toString().length > 15 ? '...' : '')})`))\r\n        }\r\n\r\n        /**\r\n         * @cfg {Number} [multipleOf]\r\n         * @info This validation attribute applies to #Number fields only.\r\n         * Insures the field value is a multiple of this number. For example,\r\n         * if the multiple is `10` and the value is `100`, it is valid.\r\n         * If the multiple is `10` and the value is `101`, it is invalid.\r\n         */\r\n        if (NGN.typeof(cfg.multipleOf) === 'number') {\r\n          this.METADATA.rules.unshift(new NGN.DATA.Rule(value => {\r\n            return Math.abs(value % cfg.multipleOf) === 0\r\n          }, `Numeric Multiple of ${cfg.multipleOf}`))\r\n        }\r\n      }\r\n    }\r\n\r\n    // Apply array-specific native validations\r\n    if (this.METADATA.dataType === Array) {\r\n      // Enforce minimum number of array items\r\n      if (NGN.objectHasAny(cfg, 'min', 'minimum')) {\r\n        this.METADATA.rules.push(new NGN.DATA.Rule(value => value.length >= NGN.coalesce(cfg.min, cfg.minimum), `${NGN.coalesce(cfg.min, cfg.minimum)} count minimum`))\r\n      }\r\n\r\n      // Enforce maximum number of array items\r\n      if (NGN.objectHasAny(cfg, 'max', 'maximum')) {\r\n        this.METADATA.rules.push(new NGN.DATA.Rule(value => value.length <= NGN.coalesce(cfg.max, cfg.maximum), `${NGN.coalesce(cfg.max, cfg.maximum)} count maximum`))\r\n      }\r\n\r\n      /**\r\n       * @cfg {Array} [unique]\r\n       * @info This validation attribute applies to #Array fields only.\r\n       * @warning This is a computationally expensive validation when used in NGN Data Stores.\r\n       * Validates that all items are unique.\r\n       */\r\n      if (NGN.coalesce(cfg.unique, false)) {\r\n        this.METADATA.rules.push(new NGN.DATA.Rule(value => NGN.dedupe(value).length === value.length, 'Unique value constraint'))\r\n      }\r\n\r\n      /**\r\n       * @cfg {any} [listType]\r\n       * @info This validation attribute applies to #Array fields only.\r\n       * Require each element of the array to conform to the specified data\r\n       * type. For example, setting `listType: Number` will validate that\r\n       * each element of the array is a number.\r\n       *\r\n       * ```js\r\n       * [1, 2, 3, 4, 5] // Valid\r\n       * [1, 2, 'three', 4, 5] // Invalid\r\n       * ```\r\n       */\r\n      if (cfg.hasOwnProperty('listType')) {\r\n        this.METADATA.rules.push(new NGN.DATA.Rule(value => {\r\n          for (let i = 0; i < value.length; i++) {\r\n            if (NGN.typeof(value[i]) !== NGN.typeof(cfg.listType)) {\r\n              return false\r\n            }\r\n          }\r\n\r\n          return true\r\n        }, `${NGN.typeof(cfg.listType).toUpperCase()} list type constraint`))\r\n      }\r\n\r\n      // Support enumerations in array values\r\n      if (cfg.hasOwnProperty('enum')) {\r\n        this.METADATA.rules.push(new NGN.DATA.Rule(value => {\r\n          return cfg.enum.indexOf(value) >= 0\r\n        }))\r\n      }\r\n\r\n      /**\r\n       * @cfg {Array} [tuples]\r\n       * @info This validation attribute applies to #Array fields only.\r\n       * @warning This is a computationally expensive validation when used in NGN Data Stores.\r\n       * Validate each item of an array according to a unique schema.\r\n       * Each item is a key value object, which supports only the `type` and\r\n       * `enum` validations.\r\n       *\r\n       * For example:\r\n       *\r\n       * ```js\r\n       * {\r\n       *   tuples: [{\r\n       *     type: Number\r\n       *   }, {\r\n       *     type: String,\r\n       *     enum: ['a', 'b', 'c']\r\n       *   }, {\r\n       *     enum: ['d', 1]\r\n       *   }]\r\n       * }\r\n       * ```\r\n       * The configuration above will make sure the first array item is a number,\r\n       * while the second is either `a`, `b`, or `c`, and the third is either\r\n       * the letter `d` or the number `1`. Only the first three items of the\r\n       * array will be checked, but there must be at least 3 items.\r\n       */\r\n      if (cfg.hasOwnProperty('tuples')) {\r\n        this.METADATA.rules.push(new NGN.DATA.Rule(value => {\r\n          if (value.length < cfg.tuples.length) {\r\n            return false\r\n          }\r\n\r\n          for (let i = 0; i < cfg.tuples.length; i++) {\r\n            if (cfg.tuples[i].hasOwnProperty('type')) {\r\n              if (NGN.typeof(value[i]) !== NGN.typeof(cfg.tuples[i].type)) {\r\n                return false\r\n              }\r\n            }\r\n\r\n            if (cfg.tuples[i].hasOwnProperty('enum')) {\r\n              if (cfg.tuples[i].enum.indexOf(value[i]) < 0) {\r\n                return false\r\n              }\r\n            }\r\n          }\r\n\r\n          return true\r\n        }, 'Tuple constraint'))\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @cfg {Array} [enum]\r\n     * An enumeration of available values this field is allowed to have.\r\n     */\r\n    if (NGN.objectHasAny(cfg, 'enum', 'enumeration')) {\r\n      this.METADATA.ENUMERABLE_VALUES = new Set(NGN.forceArray(NGN.coalesce(cfg.enum, cfg.enumeration)))\r\n      this.METADATA.rules.push(new NGN.DATA.Rule((value) => this.METADATA.ENUMERABLE_VALUES.has(value), 'Enumerable Values'))\r\n    }\r\n\r\n    /**\r\n     * @cfg {Array} [not]\r\n     * A \"reverse\" enumeration, i.e. a list of values this field is **not** allowed to be.\r\n     */\r\n    if (NGN.objectHasAny(cfg, 'not', 'notin')) {\r\n      this.METADATA.REVERSE_ENUMERABLE_VALUES = new Set(NGN.forceArray(NGN.coalesce(cfg.not, cfg.notin)))\r\n      this.METADATA.rules.push(new NGN.DATA.Rule((value) => !this.METADATA.REVERSE_ENUMERABLE_VALUES.has(value), 'Rejected Values'))\r\n    }\r\n\r\n    // Check if the field type is an array, which indicates multiple\r\n    // data types are considered valid.\r\n    if (cfg.type instanceof Array) {\r\n      // If the array has no values, assume the user meant to create an \"Array\" data type.\r\n      // Warn them, in case this was not the intention.\r\n      if (cfg.type.length === 0) {\r\n        NGN.WARN(`No data type specified for ${this.name} field. Autoconverted to an array.`)\r\n        cfg.type = Array\r\n      } else if (cfg.type.length === 1) {\r\n        // If there is only one data type, the array is extraneous and standard\r\n        // datatype validation can be used.\r\n        cfg.type = cfg.type[0]\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @cfg {Primitive|Array} [type=String]\r\n     * The type should be a JavaScript primitive, class, or constructor.\r\n     * For example, `String`, `Number`, `Boolean`, `RegExp`, `Array`, or `Date`.\r\n     * This can also be an array of primitive values. For example, `[String, Number]`\r\n     * indicates the field could be a string or a numeric value.\r\n     */\r\n    if (cfg.type instanceof Array) {\r\n      let typeList = cfg.type.map(type => NGN.typeof(type))\r\n\r\n      this.METADATA.rules.unshift(\r\n        new NGN.DATA.Rule(\r\n          (value) => typeList.indexOf(NGN.typeof(value)) >= 0,\r\n          `${this.type.toUpperCase()} Multitype Check`\r\n        )\r\n      )\r\n    } else {\r\n      this.METADATA.rules.unshift(\r\n        new NGN.DATA.Rule(\r\n          (value) => NGN.typeof(value) === NGN.typeof(this.METADATA.dataType),\r\n          `${this.type.toUpperCase()} Type Check`\r\n        )\r\n      )\r\n    }\r\n\r\n    // Associate a model if one is defined.\r\n    if (NGN.coalesce(cfg.model) !== null) {\r\n      this.model = cfg.model\r\n    }\r\n  }\r\n\r\n  get sourceName () {\r\n    return this.METADATA.sourceName\r\n  }\r\n\r\n  get auditable () {\r\n    return this.METADATA.AUDITABLE\r\n  }\r\n\r\n  set auditable (value) {\r\n    value = NGN.forceBoolean(value)\r\n\r\n    if (value !== this.METADATA.AUDITABLE) {\r\n      this.METADATA.AUDITABLE = value\r\n      this.METADATA.AUDITLOG = value ? new NGN.DATA.TransactionLog() : null\r\n      this.METADATA.AUDITLOG.relay('*', this, 'transaction.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {NGN.DATA.Model} model\r\n   * Represents the model/record the field is associated to.\r\n   * The model may be configured once, after which this property\r\n   * becomes read-only. This will also be read-only if #model is set\r\n   * to a valid value.\r\n   */\r\n  get model () {\r\n    return this.METADATA.model\r\n  }\r\n\r\n  set model (value) {\r\n    if (this.METADATA.model === null) {\r\n      if (value instanceof NGN.DATA.Entity) {\r\n        this.METADATA.model = value\r\n\r\n        // let events = Array.from(this.METADATA.EVENTS.values())\r\n        // events.splice(events.indexOf('update'), 1)\r\n        //\r\n        this.on('update', (payload) => this.METADATA.commitPayload(payload))\r\n        //\r\n        // for (let i = 0; i < events.length; i++) {\r\n        //   this.on(events[i], () => this.METADATA.model.emit(`field.${events[i]}`, ...arguments))\r\n        // }\r\n      } else {\r\n        NGN.WARN('Invalid model.')\r\n      }\r\n    } else {\r\n      NGN.WARN('Cannot set model multiple times.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {string} fieldType\r\n   * The type of field.\r\n   */\r\n  get fieldType () {\r\n    return this.METADATA.fieldType\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} required\r\n   * Indicates the field must have a non-null value.\r\n   */\r\n  get required () {\r\n    return this.METADATA.required\r\n  }\r\n\r\n  set required (value) {\r\n    this.METADATA.required = NGN.forceBoolean(value)\r\n  }\r\n\r\n  /**\r\n   * @property {string} type\r\n   * The type of data in string format.\r\n   */\r\n  get type () {\r\n    return NGN.typeof(this.METADATA.dataType)\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} hidden\r\n   * Indicates the field should be considered hidden.\r\n   */\r\n  get hidden () {\r\n    return this.METADATA.hidden\r\n  }\r\n\r\n  set hidden (value) {\r\n    let originallyHidden = this.hidden\r\n    let currentlyHidden = NGN.forceBoolean(value)\r\n\r\n    if (originallyHidden !== currentlyHidden) {\r\n      this.METADATA.hidden = currentlyHidden\r\n      this.emit(originallyHidden ? 'unhidden' : 'hidden')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} virtual\r\n   * Indicates the field should be considered virtual.\r\n   */\r\n  get virtual () {\r\n    return this.METADATA.fieldType === 'virtual'\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} identifier\r\n   * Indicates the field is considered an identifier.\r\n   */\r\n  get identifier () {\r\n    return this.METADATA.isIdentifier\r\n  }\r\n\r\n  set identifier (value) {\r\n    value = NGN.forceBoolean(value)\r\n\r\n    if (value !== this.METADATA.isIdentifier) {\r\n      this.METADATA.isIdentifier = value\r\n      this.emit('keystatus.changed', this)\r\n    }\r\n  }\r\n\r\n  get name () {\r\n    return this.METADATA.name\r\n  }\r\n\r\n  /**\r\n   * @property {Boolean}\r\n   * Indicates the model is new or does not exist according to the persistence store.\r\n   * @private\r\n   * @readonly\r\n   */\r\n  get isNew () {\r\n    return this.METADATA.IS_NEW\r\n  }\r\n\r\n  /**\r\n   * @property {Any} default\r\n   * The default field value.\r\n   */\r\n  get default () {\r\n    if (this.isIdentifier) {\r\n      return NGN.coalesce(this.METADATA.autoid, this.METADATA.default)\r\n    }\r\n\r\n    if (NGN.isFn(this.METADATA.default) && this.type !== 'function') {\r\n      return this.METADATA.default.apply(this)\r\n    }\r\n\r\n    return this.METADATA.default\r\n  }\r\n\r\n  /**\r\n   * @property {Any} value\r\n   * The value of the field.\r\n   */\r\n  get value () {\r\n    if (typeof this.METADATA.RAW !== 'symbol') {\r\n      return this.METADATA.RAW\r\n    }\r\n\r\n    return this.METADATA.default\r\n  }\r\n\r\n  set value (value) {\r\n    this.METADATA.setValue(value)\r\n  }\r\n\r\n  /**\r\n   * @property silentValue\r\n   * A write-only attribute to set the value without triggering an update event.\r\n   * This is designed primarily for use with live update proxies to prevent\r\n   * endless event loops.\r\n   * @param {any} value\r\n   * The new value of the field.\r\n   * @private\r\n   * @writeonly\r\n   */\r\n  set silentValue (value) {\r\n    this.METADATA.setValue(value, true)\r\n  }\r\n\r\n  get modified () {\r\n    if (typeof this.META.lastValue === 'symbol') {\r\n      return false\r\n    }\r\n\r\n    return this.METADATA.lastValue !== this.value\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} valid\r\n   * Indicates the field value is valid.\r\n   */\r\n  get valid () {\r\n    if (this.required && NGN.coalesce(this.METADATA.RAW) === null) {\r\n      this.METADATA.violatedRule = 'Data Required'\r\n      NGN.WARN(`${this.METADATA.name} is a required field.`)\r\n      return false\r\n    }\r\n\r\n    if (this.METADATA.rules.length > 0) {\r\n      for (let rule = 0; rule < this.METADATA.rules.length; rule++) {\r\n        if (!this.METADATA.rules[rule].test(this.METADATA.RAW)) {\r\n          this.METADATA.violatedRule = this.METADATA.rules[rule].name\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    this.METADATA.violatedRule = null\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @property {String}\r\n   * Name of the rule which was violated.\r\n   */\r\n  get violatedRule () {\r\n    return NGN.coalesce(this.METADATA.violatedRule, 'None')\r\n  }\r\n\r\n  /**\r\n   * @property {Array} changelog\r\n   * The changelog returns the underlying NGN.DATA.TransactionLog#log if\r\n   * auditing is available. The array will be empty if auditing is disabled.\r\n   */\r\n  get changelog () {\r\n    if (!this.METADATA.AUDITABLE) {\r\n      NGN.WARN(`The changelog for the ${this.name} field is empty because auditing is disabled.`)\r\n      return []\r\n    }\r\n\r\n    return this.METADATA.AUDITLOG.log\r\n  }\r\n\r\n  /**\r\n   * @method undo\r\n   * A rollback function to undo changes. This operation affects\r\n   * the changelog (transaction log). To \"undo\" an \"undo\", use #redo.\r\n   * @param {number} [OperationCount=1]\r\n   * The number of operations to \"undo\". Defaults to a single operation.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set to `true` to quietly update the value (prevents `update` event from\r\n   * firing).\r\n   */\r\n  undo (count = 1, suppressEvents = false) {\r\n    if (!this.METADATA.AUDITABLE) {\r\n      NGN.WARN(`The undo operation failed on the ${this.name} field because auditing is disabled.`)\r\n      return\r\n    }\r\n\r\n    let id = this.METADATA.AUDITLOG.rollback(count)\r\n\r\n    // Silently set the value to an older value.\r\n    this.METADATA.setValue(this.METADATA.AUDITLOG.getCommit(id).value, suppressEvents, true)\r\n  }\r\n\r\n  /**\r\n   * @method redo\r\n   * A function to reapply known changes. This operation affects\r\n   * the changelog (transaction log).\r\n   *\r\n   * The redo operation only works after an undo operation, but before a new\r\n   * value is committed to the transaction log. In other words, `undo -> redo`\r\n   * will work, but `undo -> update -> redo` will not. For details, see how\r\n   * the NGN.DATA.TransactionLog cursor system works.\r\n   * @param {number} [OperationCount=1]\r\n   * The number of operations to \"undo\". Defaults to a single operation.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set to `true` to quietly update the value (prevents `update` event from\r\n   * firing).\r\n   */\r\n  redo (count = 1, suppressEvents = false) {\r\n    if (!this.METADATA.AUDITABLE) {\r\n      NGN.WARN(`The redo operation failed on the ${this.name} field because auditing is disabled.`)\r\n      return\r\n    }\r\n\r\n    let id = this.METADATA.AUDITLOG.advance(count)\r\n\r\n    // Silently set the value to a newer value.\r\n    this.METADATA.setValue(this.METADATA.AUDITLOG.getCommit(id).value, suppressEvents, true)\r\n  }\r\n\r\n  /**\r\n   * Hide the field.\r\n   */\r\n  hide () {\r\n    this.hidden = true\r\n  }\r\n\r\n  /**\r\n   * Unhide the field.\r\n   */\r\n  unhide () {\r\n    this.hidden = false\r\n  }\r\n\r\n  /**\r\n   * Do not throw errors whan a value is marked as invalid.\r\n   */\r\n  allowInvalid () {\r\n    this.METADATA.allowInvalid = true\r\n  }\r\n\r\n  /**\r\n   * Throw errors whan a value is marked as invalid.\r\n   */\r\n  disallowInvalid () {\r\n    this.METADATA.allowInvalid = false\r\n  }\r\n\r\n  /**\r\n   * Attempt to automatically correct a value according to the\r\n   * field's data type.\r\n   * @param  {Any} value\r\n   * The value to attempt to autocorrect.\r\n   * @return {Any}\r\n   * Returns the value after attempting to autocorrect the value.\r\n   */\r\n  autoCorrectValue (value) {\r\n    try {\r\n      switch (this.type) {\r\n        case 'number':\r\n          value = NGN.forceNumber(value)\r\n          break\r\n\r\n        case 'boolean':\r\n          value = NGN.forceBoolean(value)\r\n          break\r\n\r\n        case 'array':\r\n          value = NGN.forceArray(value)\r\n          break\r\n\r\n        case 'string':\r\n          value = value.toString()\r\n          break\r\n\r\n        case 'date':\r\n          let valueType = NGN.typeof(value)\r\n\r\n          if (valueType !== 'date') {\r\n            if (valueType === 'number') {\r\n              let dt = new Date()\r\n              dt.setTime(value)\r\n\r\n              value = dt\r\n            } else {\r\n              value = new Date(Date.parse(value))\r\n            }\r\n          }\r\n\r\n          break\r\n      }\r\n    } finally {\r\n      return value // eslint-disable-line no-unsafe-finally\r\n    }\r\n  }\r\n}\r\n","import DataField from './Field'\r\n\r\n/**\r\n * @class NGN.DATA.VirtualField\r\n * A virtual field is a read-only ephemeral representation of data,\r\n * generated dynamically.\r\n * In other words, it's a made up data field that isn't part of what gets stored.\r\n * The value can be changed at any time, without warning or events. This is most\r\n * commonly used as an _internal class_ to support virtual fields within data\r\n * models. Consider the following:\r\n *\r\n * **Example:**\r\n *\r\n * ```js\r\n * let Person = new NGN.DATA.Model({\r\n *   fields: {\r\n *     dateOfBirth: Date\r\n *     age: function () {\r\n *       return YearsApart(new Date(), this.dateOfBirth)\r\n *     }\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * The `age` example above (shorthand syntax) compares the `dateOfBirth` field\r\n * to the current date, expecting a numeric response. This particular virtual\r\n * field is useful for calculating a common value on the fly, and it is reusable\r\n * for any number of instances of the model.\r\n *\r\n * This functionality is available by implementing the NGN.DATA.VirtualField.\r\n * For example, the `age` virtual field would be created as:\r\n *\r\n * ```js\r\n * let age = new NGN.DATA.VirtualField(model, function () {\r\n *   return YearsApart(new Date(), this.dateOfBirth)\r\n * })\r\n * ```\r\n * @fires cache.clear {NGN.DATA.VirtualField}\r\n * Fired whenever the cache is cleared. The field is passed as the only argument\r\n * to event handler functions.\r\n */\r\nexport default class NGNVirtualDataField extends DataField { // eslint-disable-line\r\n  constructor (cfg) {\r\n    cfg = cfg || {}\r\n\r\n    if (!(cfg.model instanceof NGN.DATA.Entity)) {\r\n      NGN.WARN('No model specified for the virtual field to reference.')\r\n    }\r\n\r\n    // Remove unnecessary config values\r\n    delete cfg.required\r\n    delete cfg.default\r\n    delete cfg.min\r\n    delete cfg.minimum\r\n    delete cfg.max\r\n    delete cfg.maximum\r\n    delete cfg.range\r\n    delete cfg.rule\r\n    delete cfg.rules\r\n    delete cfg.validators\r\n    delete cfg.pattern\r\n\r\n    super(cfg)\r\n\r\n    this.METADATA.AUDITABLE = false\r\n    this.METADATA.fieldType = 'virtual'\r\n\r\n    /**\r\n     * @cfg {boolean} [cache=true]\r\n     * By default, virtual fields _associated with a model_ will cache results\r\n     * to prevent unnecessary function calls. The cache is cleared whenever a\r\n     * local data field is modified.\r\n     *\r\n     * Caching can substantially reduce processing time in large data sets\r\n     * by calling methods less often. In most use cases, it will provide a\r\n     * substantial performance gain. However; since virtual fields can also\r\n     * leverage variables and methods that are not a part of the data model,\r\n     * caching may prevent the value from updating as expected. While this case\r\n     * may occur less often, it can occur. If you suspect caching is interfering\r\n     * with a virtual field value, it can be disabled by setting this to `false`.\r\n     */\r\n    this.METADATA.caching = NGN.coalesce(cfg.cache, true)\r\n\r\n    /**\r\n     * @cfg {NGN.DATA.Model|NGN.DATA.Store|Object} scope\r\n     * The model, store, or object that will be referenceable within the\r\n     * virtual field #method. The model will be available in the `this` scope.\r\n     */\r\n    this.METADATA.scope = NGN.coalesce(cfg.scope, cfg.model, this)\r\n\r\n    /**\r\n     * @cfg {Function} method\r\n     * The method used to generate a value.\r\n     * This is an asynchronous method the returns a value (of any type).\r\n     */\r\n    const me = this\r\n    const handlerFn = cfg.method\r\n\r\n    this.METADATA.virtualMethod = function () {\r\n      return handlerFn.apply(me.METADATA.scope, ...arguments)\r\n    }\r\n\r\n    // Add smart-cache support\r\n    this.METADATA.CACHEKEY = Symbol('no.cache')\r\n    this.METADATA.cachedValue = this.METADATA.CACHEKEY\r\n\r\n    // Only add caching support if a model is associated\r\n    if (this.METADATA.caching && this.model) {\r\n      // Create a method for identifying which local data fields\r\n      // need to be monitored (for caching)\r\n      const localFieldPattern = /this(\\.(.[^\\W]+)|\\[['\"]{1}(.*)+['\"]{1}\\])/g\r\n\r\n      // Returns a Set of fieldnames used in the virtual function.\r\n      let monitoredFields = new Set()\r\n      let content = handlerFn.toString()\r\n      let iterator = localFieldPattern.exec(content)\r\n\r\n      while (iterator !== null) {\r\n        let field = NGN.coalesce(iterator[2], iterator[3])\r\n\r\n        if (this.model.METADATA.knownFieldNames.has(field)) {\r\n          monitoredFields.add(field)\r\n        }\r\n\r\n        content = content.replace(localFieldPattern, '')\r\n        iterator = localFieldPattern.exec(content)\r\n      }\r\n\r\n      this.METADATA.model.pool('field.', {\r\n        update: (change) => {\r\n          if (change.field && monitoredFields.has(change.field.name)) {\r\n            this.METADATA.cachedValue = this.METADATA.CACHEKEY\r\n            this.emit('cache.clear', this)\r\n          }\r\n        },\r\n\r\n        remove: (field) => {\r\n          if (monitoredFields.has(field.name)) {\r\n            this.METADATA.cachedValue = this.METADATA.CACHEKEY\r\n            this.emit('cache.clear', this)\r\n            NGN.ERROR(`The ${this.name} virtual field uses the ${field.name} field, which was removed. This virtual field may no longer work.`)\r\n          }\r\n        },\r\n\r\n        create: (field) => {\r\n          if (monitoredFields.has(field.name)) {\r\n            this.METADATA.cachedValue = this.METADATA.CACHEKEY\r\n            this.emit('cache.clear', this)\r\n            NGN.INFO(`The ${this.name} virtual field uses the ${field.name} field, which was added.`)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  get auditable () {\r\n    NGN.WARN('Virtual fields do not support the auditable property.')\r\n    return false\r\n  }\r\n\r\n  set auditable (value) {\r\n    NGN.WARN('Virtual fields do not support the auditable property.')\r\n  }\r\n\r\n  /**\r\n   * @property {any} value\r\n   * This will always return the value of the virtual field, but it may only\r\n   * be _set_ to a synchronous function that returns a value.\r\n   */\r\n  get value () {\r\n    if (this.METADATA.caching) {\r\n      if (this.METADATA.cachedValue !== this.METADATA.CACHEKEY) {\r\n        return this.METADATA.cachedValue\r\n      } else {\r\n        this.METADATA.cachedValue = this.METADATA.virtualMethod()\r\n        return this.METADATA.cachedValue\r\n      }\r\n    }\r\n\r\n    return this.METADATA.virtualMethod()\r\n  }\r\n\r\n  set value (value) {\r\n    NGN.WARN('Cannot set the value of a virtual field (read only).')\r\n  }\r\n\r\n  get required () {\r\n    NGN.WARN('Virtual fields do not support the required property.')\r\n    return false\r\n  }\r\n\r\n  set required (value) {\r\n    NGN.WARN('Virtual fields do not support the required property.')\r\n  }\r\n\r\n  get isNew () {\r\n    NGN.WARN('Virtual fields do not support the isNew property.')\r\n    return false\r\n  }\r\n\r\n  get default () {\r\n    NGN.WARN('Virtual fields do not have default values.')\r\n    return undefined\r\n  }\r\n\r\n  set default (value) {\r\n    NGN.WARN('Virtual fields do not have default values.')\r\n    return undefined\r\n  }\r\n\r\n  get violatedRule () {\r\n    return 'None'\r\n  }\r\n\r\n  get valid () {\r\n    NGN.WARN('Virtual fields are always valid.')\r\n    return true\r\n  }\r\n\r\n  get modified () {\r\n    NGN.WARN('modified attribute does nothing on virtual fields.')\r\n    return false\r\n  }\r\n\r\n  allowInvalid () {\r\n    NGN.WARN('allowInvalid() unavailable for virtual fields.')\r\n  }\r\n\r\n  disallowInvalid () {\r\n    NGN.WARN('disallowInvalid() unavailable for virtual fields.')\r\n  }\r\n\r\n  autocorrectInput () {\r\n    NGN.WARN('autocorrectInput() unavailable for virtual fields.')\r\n  }\r\n}\r\n","import DataField from './Field'\r\n\r\n/**\r\n * @class NGN.DATA.Relationship\r\n * Represents a data field linked to another NGN.DATA.Model or\r\n * NGN.DATA.Store. This is used for nesting models/stores within a field,\r\n * supporting creation of complex data structures that are still easy\r\n * to work with.\r\n *\r\n * While there is no limit to how deeply nested fields can be, it is considered\r\n * a best practice to avoid circular relationships, which can lead to infinite\r\n * loops when serializing data.\r\n *\r\n * Nested models (i.e. records) each have their own data\r\n * NGN.DATA.Model#validators, so relationship fields defer all validation to\r\n * the individual record/model.\r\n *\r\n * Relationships using NGN.DATA.Stores behave a little differently, since they\r\n * represent a collection of data instead of a single record/model. NGN manages\r\n * [referential integrity](https://en.wikipedia.org/wiki/Referential_integrity)\r\n * using simplistic\r\n * [cardinality](https://en.wikipedia.org/wiki/Cardinality_(data_modeling)).\r\n *\r\n * Referential integrity & cardinality rules are data modeling principles\r\n * designed to enforce data quality standards. The nature of JavaScript objects\r\n * naturally enforces rudimentary data linking/nesting. NGN data relationships\r\n * build upon this, using proven data modeling principles.\r\n *\r\n * This is done, very simply, by using the @cfg#min and @cfg#max configuration\r\n * options. However; these options don't always need to be enforced, depending\r\n * on what type of cardniality needs to be achieved.\r\n *\r\n * For more information, see the Data Modeling Guide.\r\n *\r\n * **Note to self, use this next part in the guide:**\r\n *\r\n * There are five (5) common types of cardinality.\r\n *\r\n * - **1 => 1**: One-to-One\r\n * - **0 => 1**: Zero-or-One\r\n * - **0 => N**: Zero-to-Many\r\n * - **1 => N**: One-to-Many\r\n * - **N => N**: Many-to-Many\r\n *\r\n * There are also more granular types of cardinality, which are less common in\r\n * web applications, but often used in data and ETL operations.\r\n *\r\n * - **0,1 => 0,N**: Zero-or-One to Zero-or-More\r\n * - **0,1 => 1,N**: Zero-or-One to One-or-More\r\n * - ... write the rest in the guide...\r\n */\r\nexport default class NGNRelationshipField extends DataField { // eslint-disable-line\r\n  constructor (cfg = {}) {\r\n    let type = NGN.typeof(cfg.join)\r\n\r\n    // Assure valid configuration\r\n    if (!cfg.join) {\r\n      throw new InvalidConfigurationError('Missing \"join\" configuration property.')\r\n    } else if (\r\n      ['model', 'store'].indexOf(type) < 0 &&\r\n      (\r\n        type !== 'array' ||\r\n        NGN.typeof(cfg.join[0]) !== 'model'\r\n      )\r\n    ) {\r\n      throw new InvalidConfigurationError(`The join specified is not a valid NGN.DATA.Model, NGN.DATA.Store, or collection. It is a ${NGN.typeof(cfg.join)}\"`)\r\n    }\r\n\r\n    // Create optional cardinality validations\r\n\r\n    // Initialize\r\n    cfg.identifier = false\r\n    super(cfg)\r\n\r\n    this.METADATA.fieldType = 'join'\r\n    this.METADATA.join = Symbol('relationship')\r\n\r\n    // Apply event monitoring to the #record.\r\n    this.METADATA.applyMonitor = () => {\r\n      if (this.METADATA.manner === 'model') {\r\n        // Model Event Relay\r\n        this.METADATA.join.pool('field.', {\r\n          create: this.METADATA.commonModelEventHandler('field.create'),\r\n          update: this.METADATA.commonModelEventHandler('field.update'),\r\n          remove: this.METADATA.commonModelEventHandler('field.remove'),\r\n          invalid: (data) => {\r\n            this.emit(['invalid', `invalid.${this.METADATA.name}.${data.field}`])\r\n          },\r\n          valid: (data) => {\r\n            this.emit(['valid', `valid.${this.METADATA.name}.${data.field}`])\r\n          }\r\n        })\r\n      //   this.METADATA.join.pool('field.', {\r\n      //     create: this.METADATA.commonModelEventHandler('field.create'),\r\n      //     update: this.METADATA.commonModelEventHandler('field.update'),\r\n      //     remove: this.METADATA.commonModelEventHandler('field.remove'),\r\n      //     invalid: (data) => {\r\n      //       this.emit(['invalid', `invalid.${this.name}.${data.field}`])\r\n      //     },\r\n      //     valid: (data) => {\r\n      //       this.emit(['valid', `valid.${this.name}.${data.field}`])\r\n      //     }\r\n      //   })\r\n      // } else {\r\n      //   // Store Event Relay\r\n      //   this.METADATA.join.pool('record.', {\r\n      //     create: this.METADATA.commonStoreEventHandler('record.create'),\r\n      //     update: this.METADATA.commonStoreEventHandler('record.update'),\r\n      //     remove: this.METADATA.commonStoreEventHandler('record.remove'),\r\n      //     invalid: (data) => {\r\n      //       this.emit('invalid', `invalid.${this.name}.${data.field}`)\r\n      //     },\r\n      //     valid: (data) => {\r\n      //       this.emit('valid', `valid.${this.name}.${data.field}`)\r\n      //     }\r\n      //   })\r\n      }\r\n    }\r\n\r\n    // Event handling for nested models.\r\n    this.METADATA.commonModelEventHandler = (type) => {\r\n      const me = this\r\n\r\n      return function (change) {\r\n        me.METADATA.commitPayload({\r\n          field: `${me.name}.${change.field}`,\r\n          old: NGN.coalesce(change.old),\r\n          new: NGN.coalesce(change.new),\r\n          join: true,\r\n          originalEvent: {\r\n            event: this.event,\r\n            record: me.METADATA.record\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Event handling for nested stores.\r\n    this.METADATA.commonStoreEventHandler = (type) => {\r\n      const me = this\r\n\r\n      return function (record, change) {\r\n        let old = change ? NGN.coalesce(change.old) : me.data\r\n\r\n        if (this.event === 'record.create') {\r\n          old.pop()\r\n        } else if (this.event === 'record.delete') {\r\n          old.push(record.data)\r\n        }\r\n\r\n        me.METADATA.commitPayload({\r\n          field: me.name + (change ? `.${change.field}` : ''),\r\n          old: change ? NGN.coalesce(change.old) : old,\r\n          new: change ? NGN.coalesce(change.new) : me.data,\r\n          join: true,\r\n          originalEvent: {\r\n            event: this.event,\r\n            record: record\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // const commitPayload = this.METADATA.commitPayload\r\n    //\r\n    // this.METADATA.commitPayload = (payload) => {\r\n    //   console.log('HERE')\r\n    //   commitPayload(...arguments)\r\n    // }\r\n\r\n    /**\r\n     * @cfg join {NGN.DATA.Store|NGN.DATA.Model[]}\r\n     * A relationship to another model/store is defined by a join.\r\n     * The join may be a data store or data model. It is also possible\r\n     * to specify a collection.\r\n     *\r\n     * For example, a join may be defined as:\r\n     *\r\n     * ```js\r\n     * // Use of a model\r\n     * let RelationshipField = new NGN.DATA.Relationship({\r\n     *   record: new NGN.DATA.Model(...)\r\n     * })\r\n     *\r\n     * // Use of a model collection\r\n     * let RelationshipField = new NGN.DATA.Relationship({\r\n     *   record: [new NGN.DATA.Model(...)]\r\n     * })\r\n     *\r\n     * // Use of a store\r\n     * let RelationshipField = new NGN.DATA.Relationship({\r\n     *   record: new NGN.DATA.Store(...)\r\n     * })\r\n     * ```\r\n     *\r\n     * A store and a model collection are both a group of models,\r\n     * Internally, model collections are converted to data stores.\r\n     *\r\n     * By supporting all three formats, it is possible to create complex\r\n     * data models, such as:\r\n     *\r\n     * ```js\r\n     * let Pet = new NGN.DATA.Model(...)\r\n     * let Kid = new NGN.DATA.Model(...)\r\n     * let Kids = new NGN.DATA.Store({\r\n     *   model: Kid\r\n     * })\r\n     *\r\n     * let Person = new NGN.DATA.Model({\r\n     *   fields: {\r\n     *     dateOfBirth: Date,\r\n     *     spouse: Person,  // <== Join a Model\r\n     *     kids: Kids,      // <== Join a Store\r\n     *     pets: [Pet]      // <== Join a Collection\r\n     *   }\r\n     * })\r\n     * ```\r\n     *\r\n     * The `pets` field contains a \"collection\". This shorthand notation is used\r\n     * to help understand real data relationships. In this case, it is easy to\r\n     * infer that a person may have zero or more pets.\r\n     */\r\n    this.value = NGN.coalesce(cfg.join)\r\n    this.METADATA.AUDITABLE = false\r\n    this.auditable = NGN.coalesce(cfg.audit, false)\r\n  }\r\n\r\n  /**\r\n   * @property {string} manner\r\n   * The manner of relationship. This can be one of 3 values: `store`\r\n   * (NGN.DATA.Store), `model` (NGN.DATA.Model), or `collection`. A collection\r\n   * is a special configuration shortcut used to represent a new store of models.\r\n   * ```math\r\n   * E = mc^2\r\n   * ```\r\n   * ```graph\r\n   * graph LR\r\n   * a-->b\r\n   * ```\r\n   * For example, a model may be defined as:\r\n   *\r\n   * ```js\r\n   * let Pet = new NGN.DATA.Model({\r\n   *   fields: {\r\n   *     name: String,\r\n   *     animalType: String\r\n   *   }\r\n   * })\r\n   *\r\n   * let Person = new NGN.DATA.Model({\r\n   *   fields: {\r\n   *     dateOfBirth: Date\r\n   *   },\r\n   *   relationships: {\r\n   *     pets: [Pet]        // <== Collection\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\r\n  get manner () {\r\n    return NGN.coalesce(this.METADATA.manner, 'unknown')\r\n  }\r\n\r\n  get value () {\r\n    return this.METADATA.join\r\n  }\r\n\r\n  // Override the default value setter\r\n  set value (value) {\r\n    // Short-circuit if the value hasn't changed.\r\n    let currentValue = this.METADATA.join\r\n\r\n    if (currentValue === value) {\r\n      return\r\n    }\r\n\r\n    let type = NGN.typeof(value)\r\n\r\n    if (type === 'array') {\r\n      if (value.length !== 1) {\r\n        throw new Error(`${this.METADATA.name} cannot refer to an empty data store/model collection. A record must be provided.`)\r\n      }\r\n\r\n      this.METADATA.manner = 'store'\r\n      value = new NGN.DATA.Store({\r\n        model: value[0]\r\n      })\r\n    } else if (['model', 'store'].indexOf(type) >= 0) {\r\n      this.METADATA.manner = type\r\n    } else {\r\n      NGN.ERROR(`The \"${this.METADATA.name}\" relationship has an invalid record type. Only instances of NGN.DATA.Store, NGN.DATA.Model, or [NGN.DATA.Model] are supported.\" .`)\r\n      throw new InvalidConfigurationError(`Invalid record configuration for \"${this.METADATA.name}\" field.`)\r\n    }\r\n\r\n    if (this.manner === 'unknown') {\r\n      throw new Error('Cannot set a relationship field to anything other than an NGN.DATA.Store, NGN.DATA.Model, or an array of NGN.DATA.Model collections. (Unknown manner of relationship)')\r\n    }\r\n\r\n    this.METADATA.join = type === 'model' ? new value() : value // eslint-disable-line new-cap\r\n    this.auditable = this.METADATA.AUDITABLE\r\n    this.METADATA.applyMonitor()\r\n\r\n    // Notify listeners of change\r\n    if (typeof currentValue !== 'symbol') {\r\n      this.emit('update', {\r\n        old: currentValue,\r\n        new: value\r\n      })\r\n    }\r\n  }\r\n\r\n  set auditable (value) {\r\n    value = NGN.forceBoolean(value)\r\n\r\n    if (value !== this.METADATA.AUDITABLE) {\r\n      this.METADATA.AUDITABLE = value\r\n      this.METADATA.join.auditable = value\r\n    }\r\n  }\r\n\r\n  // Override the default undo\r\n  undo () {\r\n    if (this.METADATA.manner === 'model') {\r\n      this.METADATA.join.undo(...arguments)\r\n    }\r\n  }\r\n\r\n  redo () {\r\n    if (this.METADATA.manner === 'model') {\r\n      this.METADATA.join.redo(...arguments)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @class NGN.DATA.FieldMap\r\n * A field map is a special data transformer that maps field names (keys)\r\n * to a different format. Consider the following field map:\r\n *\r\n * ```js\r\n * let fieldMap = new NGN.DATA.FieldMap({\r\n *   father: 'pa',\r\n *   mother: 'ma',\r\n *   brother: 'bro',\r\n *   sister: 'sis'\r\n * })\r\n * ```\r\n *\r\n * The map above reads as \"the `father` field is also known as `pa`\",\r\n * \"the `mother` field is also known as `ma`\", etc.\r\n *\r\n * The following transformation is possible:\r\n *\r\n * ```js\r\n * let result = fieldMap.apply({\r\n *   pa: 'John',\r\n *   ma: 'Jill',\r\n *   bro: 'Joe',\r\n *   sis: 'Jane'\r\n * })\r\n *\r\n * console.log(result)\r\n * ```\r\n *\r\n * _yields:_\r\n *\r\n * ```sh\r\n * {\r\n *   father: 'John'\r\n *   mother: 'Jill',\r\n *   brother: 'Joe',\r\n *   sister: 'Jane'\r\n * }\r\n * ```\r\n *\r\n * It is also possible to reverse field names:\r\n *\r\n * ```js\r\n * let result = fieldMap.applyReverse({\r\n *   father: 'John'\r\n *   mother: 'Jill',\r\n *   brother: 'Joe',\r\n *   sister: 'Jane'\r\n * })\r\n *\r\n * console.log(result)\r\n * ```\r\n *\r\n * _yields:_\r\n *\r\n * ```sh\r\n * {\r\n *   pa: 'John',\r\n *   ma: 'Jill',\r\n *   bro: 'Joe',\r\n *   sis: 'Jane'\r\n * }\r\n * ```\r\n *\r\n * This class is designed to assist with reading and writing data\r\n * to NGN.DATA.Model and NGN.DATA.Store instances.\r\n * @private\r\n */\r\nexport default class NGNDataFieldMap { // eslint-disable-line\r\n  constructor (cfg = {}) {\r\n    Object.defineProperties(this, {\r\n      originalSource: NGN.privateconst(cfg),\r\n      sourceMap: NGN.private(null),\r\n      reverseMap: NGN.private(null),\r\n      applyData: NGN.privateconst((map = 'map', data) => {\r\n        if (NGN.typeof(data) !== 'object') {\r\n          return data\r\n        }\r\n\r\n        let keys = Object.keys(data)\r\n        map = map === 'map' ? this.inverse : this.map\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n          if (map.hasOwnProperty(keys[i])) {\r\n            data[map[keys[i]]] = data[keys[i]]\r\n            delete data[keys[i]]\r\n          }\r\n        }\r\n\r\n        return data\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @property {object} map\r\n   * A reference to the data mapping object.\r\n   */\r\n  get map () {\r\n    if (this.sourceMap === null) {\r\n      let keys = Object.keys(this.originalSource)\r\n\r\n      this.sourceMap = {}\r\n\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (NGN.typeof(keys[i]) === 'string' && NGN.typeof(this.originalSource[keys[i]]) === 'string') {\r\n          this.sourceMap[keys[i]] = this.originalSource[keys[i]]\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.sourceMap\r\n  }\r\n\r\n  /**\r\n   * @property {object} inverse\r\n   * A reference to the inversed data map.\r\n   */\r\n  get inverse () {\r\n    if (this.reverseMap === null) {\r\n      let keys = Object.keys(this.originalSource)\r\n\r\n      this.reverseMap = {}\r\n\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (NGN.typeof(keys[i]) === 'string' && NGN.typeof(this.originalSource[keys[i]]) === 'string') {\r\n          this.reverseMap[this.originalSource[keys[i]]] = keys[i]\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.reverseMap\r\n  }\r\n\r\n  /**\r\n   * Apply the map to an object.\r\n   * @param  {object} data\r\n   * @return {object}\r\n   */\r\n  applyMap (data) {\r\n    return this.applyData('map', data)\r\n  }\r\n\r\n  /**\r\n   * Apply the inversed map to an object.\r\n   * @param  {object} data\r\n   * @return {object}\r\n   */\r\n  applyInverseMap (data) {\r\n    return this.applyData('reverse', data)\r\n  }\r\n}\r\n","import EventEmitter from '../emitter/core'\r\n\r\n/**\r\n * @class NGN.DATA.Model\r\n * Represents a data model/record.\r\n * @extends NGN.EventEmitter\r\n * @fires field.update\r\n * Fired when a datafield value is changed.\r\n * @fires field.create {NGN.DATA.Field}\r\n * Fired when a datafield is created.\r\n * @fires field.remove\r\n * Fired when a datafield is deleted.\r\n * @fires field.invalid\r\n * Fired when an invalid value is detected in an data field.\r\n */\r\nexport default class NGNDataEntity extends EventEmitter { // eslint-disable-line\r\n  constructor (cfg) {\r\n    cfg = NGN.coalesce(cfg, {})\r\n\r\n    super()\r\n\r\n    if (cfg.dataMap) {\r\n      cfg.fieldmap = cfg.dataMap\r\n      NGN.WARN('\"dataMap\" is deprecated. Use \"map\" instead.')\r\n    }\r\n\r\n    if (cfg.idAttribute) {\r\n      cfg.IdentificationField = cfg.idAttribute\r\n      NGN.WARN('\"idAttribute\" is deprecated. Use \"IdentificationField\" instead.')\r\n    }\r\n\r\n    const me = this\r\n\r\n    // Create private attributes & data placeholders\r\n    Object.defineProperties(this, {\r\n      /**\r\n       * @property {Symbol} OID\r\n       * A unique object ID assigned to the model. This is an\r\n       * internal readon-only reference.\r\n       * @private\r\n       */\r\n      OID: NGN.private(Symbol('model.id')),\r\n\r\n      METADATA: NGN.privateconst({\r\n        /**\r\n         * @cfg {string} [name]\r\n         * A descriptive name for the model. This is typically used for\r\n         * debugging, logging, schema defintions, and (sometimes) data proxies.\r\n         */\r\n        name: NGN.coalesce(cfg.name, 'Untitled Model'),\r\n\r\n        /**\r\n         * @cfg {string} [description]\r\n         * A description of the model. This is typically used for\r\n         * debugging, logging, schema definitions, and (sometimes) data proxies.\r\n         */\r\n        description: NGN.coalesce(cfg.description, cfg.name, 'Generic Data Model'),\r\n\r\n        /**\r\n         * @cfg {object} fields\r\n         * A private object containing the data fields of the model.\r\n         * Each key contains the field name, while each value can be one of\r\n         * the following:\r\n         *\r\n         * - Primitive (String, Number, RegExp, Boolean)\r\n         * - Standard Type (Array, Object, Date)\r\n         * - Custom Class\r\n         * - NGN.DATA.Field\r\n         * - An NGN.DATA.Field configuration\r\n         * - `null` (Defaults to String primitive)\r\n         *\r\n         * ```js\r\n         * fields: {\r\n         *   a: String,\r\n         *   b: Date,\r\n         *   c: MyCustomClass,\r\n         *   d: new NGN.DATA.Field({\r\n         *     required: true,\r\n         *     type: String,\r\n         *     default: 'some default value'\r\n         *   }),\r\n         *   e: {\r\n         *     required: true,\r\n         *     type: String,\r\n         *     default: 'some default value'\r\n         *   },\r\n         *   f: null // Uses default field config (String)\r\n         * }\r\n         * ```\r\n         *\r\n         * Extensions of the NGN.DATA.Field are also supported,\r\n         * such as NGN.DATA.VirtualField and NGN.DATA.Relationship.\r\n         */\r\n        fields: Object.assign({}, NGN.coalesce(cfg.fields, {})),\r\n        knownFieldNames: new Set(),\r\n        invalidFieldNames: new Set(),\r\n        auditFieldNames: NGN.coalesce(cfg.audit, false) ? new Set() : null,\r\n\r\n        /**\r\n         * @property {[NGN.DATA.Rule]|Object}\r\n         * Custom validation rules used to verify the integrity of the entire\r\n         * model. This only applies to the full model. Individual data fields\r\n         * may have their own validators.\r\n         *\r\n         * If an object is specified, it should contain simple key/value pairs,\r\n         * where the key is the descriptive name of the rule and the value is\r\n         * a synchronous callback function that returns a `true`/`false` value.\r\n         * For instance, assume the fields called `price`, `items`, and `tax` exist\r\n         * in the example model below. :\r\n         *\r\n         * ```js\r\n         * {\r\n         *   'Positive Sale': function () {\r\n         *      return (this.price * this.items) > 0\r\n         *   },\r\n         *   'Taxes Applied': function () {\r\n         *      return this.tax > 0\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * Alternatively, an array of NGN.DATA.Rule instances may be provided.\r\n         */\r\n        validators: NGN.coalesce(cfg.rules, cfg.rule, cfg.validators),\r\n\r\n        /**\r\n         * @cfgproperty {boolean} [validation=true]\r\n         * Toggle data validation using this.\r\n         */\r\n        validation: NGN.coalesce(cfg.validation, true),\r\n\r\n        /**\r\n         * @cfg {boolean} [autoid=false]\r\n         * If the NGN.DATA.Model#IdentificationField/id is not provided for a record,\r\n         * a unique ID will be automatically generated for it.\r\n         *\r\n         * An NGN.DATA.Store using a model with this set to `true` will never\r\n         * have a duplicate record, since the #id or #IdentificationField will always\r\n         * be unique.\r\n         */\r\n        autoid: NGN.coalesce(cfg.autoid, false),\r\n\r\n        /**\r\n         * @cfg {String} [IdentificationField='id']\r\n         * Setting this allows an attribute of the object to be used as the ID.\r\n         * For example, if an email is the ID of a user, this would be set to\r\n         * `email`.\r\n         */\r\n        IdentificationField: NGN.coalesce(cfg.IdentificationField, cfg.idField, 'id'),\r\n\r\n        /**\r\n         * @cfgproperty {Date|Number} [expires]\r\n         * When this is set to a date/time, the model record will be marked\r\n         * as expired at the specified time/date. If a number is specified\r\n         * (milliseconds), the record will be marked as expired after the\r\n         * specified time period has elapsed. When a record/model is marked as\r\n         * \"expired\", it triggers the `expired` event. By default, expired\r\n         * records/models within an NGN.DATA.Store will be removed from the store.\r\n         *\r\n         * Setting this to any value less than `0` disables expiration.\r\n         * @fires expired\r\n         * Triggered when the model/record expires.\r\n         */\r\n        expiration: null,\r\n\r\n        // Holds a setTimeout method for expiration events.\r\n        expirationTimeout: null,\r\n\r\n        created: Date.now(),\r\n        store: null,\r\n\r\n        /**\r\n         * @cfg {boolean} [audit=false]\r\n         * Enable auditing to support #undo/#redo operations. This creates and\r\n         * manages a NGN.DATA.TransactionLog.\r\n         */\r\n        AUDITABLE: false,\r\n        AUDITLOG: NGN.coalesce(cfg.audit, false) ? new NGN.DATA.TransactionLog() : null,\r\n        AUDIT_HANDLER: function (change) {\r\n          if (change.hasOwnProperty('cursor')) {\r\n            me.METADATA.AUDITLOG.commit(me.METADATA.getAuditMap())\r\n          }\r\n        },\r\n\r\n        EVENTS: new Set([\r\n          'field.update',\r\n          'field.create',\r\n          'field.remove',\r\n          'field.invalid',\r\n          'field.valid',\r\n          'field.hidden',\r\n          'field.unhidden',\r\n          'field.rule.add',\r\n          'field.rule.remove',\r\n          'rule.add',\r\n          'rule.remove',\r\n          'relationship.create',\r\n          'relationship.remove',\r\n          'expired',\r\n          'deleted',\r\n          'reset',\r\n          'load'\r\n        ]),\r\n\r\n        /**\r\n         * An internal method used to apply field definitions to the model.\r\n         * @param  {string} fieldname\r\n         * Name of the field (as applied to the model).\r\n         * @param  {NGN.DATA.Field|Object|Primitive} [fieldConfiguration=null]\r\n         * The configuration to apply. See #addField for details.\r\n         * @param  {Boolean} [suppressEvents=false]\r\n         * Optionally suppress the `field.create` event.\r\n         * @private\r\n         */\r\n        applyField: (field, fieldcfg = null, suppressEvents = false) => {\r\n          // Prevent duplicate fields\r\n          if (this.METADATA.knownFieldNames.has(field)) {\r\n            return NGN.WARN(`Duplicate field \"${field}\" detected.`)\r\n          }\r\n\r\n          // Prevent reserved words\r\n          if (this.hasOwnProperty(field) && field.toLowerCase() !== 'id') {\r\n            throw new ReservedWordError(`\"${field}\" cannot be used as a field name (reserved word).`)\r\n          }\r\n\r\n          // If the field config isn't already an NGN.DATA.Field, create it.\r\n          if (!(fieldcfg instanceof NGN.DATA.Field)) {\r\n            if (fieldcfg instanceof NGN.DATA.Store || fieldcfg instanceof NGN.DATA.Model) {\r\n              if (this.METADATA.IdentificationField === field) {\r\n                throw new InvalidConfigurationError(`\"${field}\" cannot be an ID. Relationship fields cannot be an identification field/attribute.`)\r\n              }\r\n\r\n              this.METADATA.fields[field] = new NGN.DATA.Relationship({\r\n                name: field,\r\n                record: fieldcfg,\r\n                model: this\r\n              })\r\n            } else {\r\n              switch (NGN.typeof(fieldcfg)) {\r\n                // Custom config\r\n                case 'object':\r\n                  fieldcfg.model = this\r\n                  fieldcfg.identifier = NGN.coalesce(fieldcfg.identifier, this.METADATA.IdentificationField === field)\r\n                  fieldcfg.name = field\r\n\r\n                  this.METADATA.fields[field] = new NGN.DATA.Field(fieldcfg)\r\n\r\n                  break\r\n\r\n                // Collection of models\r\n                case 'array':\r\n                  return this.METADATA.applyField(field, fieldcfg[0], suppressEvents)\r\n\r\n                // Type-based cfg.\r\n                default:\r\n                  if (NGN.isFn(fieldcfg) || fieldcfg === null) {\r\n                    if (NGN.isFn(fieldcfg) && ['string', 'number', 'boolean', 'number', 'symbol', 'regexp', 'date', 'array', 'object'].indexOf(NGN.typeof(fieldcfg)) < 0) {\r\n                      this.METADATA.fields[field] = new NGN.DATA.VirtualField({\r\n                        name: field,\r\n                        identifier: this.METADATA.IdentificationField === field,\r\n                        model: this,\r\n                        method: fieldcfg\r\n                      })\r\n\r\n                      break\r\n                    }\r\n\r\n                    this.METADATA.fields[field] = new NGN.DATA.Field({\r\n                      name: field,\r\n                      type: fieldcfg,\r\n                      identifier: this.METADATA.IdentificationField === field,\r\n                      model: this\r\n                    })\r\n\r\n                    break\r\n                  }\r\n\r\n                  this.METADATA.fields[field] = new NGN.DATA.Field({\r\n                    name: field,\r\n                    type: NGN.isFn(fieldcfg) ? fieldcfg : String,\r\n                    identifier: NGN.isFn(fieldcfg)\r\n                      ? false\r\n                      : NGN.coalesce(fieldcfg.identifier, this.METADATA.IdentificationField === field),\r\n                    model: this\r\n                  })\r\n\r\n                  break\r\n              }\r\n            }\r\n          } else if (fieldcfg.model === null) {\r\n            fieldcfg.name = field\r\n            fieldcfg.identifier = fieldcfg.identifier = NGN.coalesce(fieldcfg.identifier, this.METADATA.IdentificationField === field)\r\n\r\n            this.METADATA.fields[field] = fieldcfg\r\n            this.METADATA.fields[field].model = this\r\n          } else if (fieldcfg.model === this) {\r\n            fieldcfg.identifier = NGN.coalesce(fieldcfg.identifier, this.METADATA.IdentificationField === field)\r\n\r\n            this.METADATA.fields[field] = fieldcfg\r\n          } else if (!(fieldcfg instanceof NGN.DATA.Field)) {\r\n            return NGN.WARN(`The \"${fieldcfg.name}\" field cannot be applied because model is already specified.`)\r\n          }\r\n\r\n          // Add a direct reference to the model.\r\n          Object.defineProperty(this, field, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.get(field),\r\n            set: (value) => this.set(field, value)\r\n          })\r\n\r\n          // Enable auditing if necessary.\r\n          if (this.METADATA.AUDITABLE) {\r\n            if (this.METADATA.fields[field].fieldType !== 'virtual') {\r\n              this.METADATA.fields[field].auditable = true\r\n              this.METADATA.auditFieldNames.add(field)\r\n            }\r\n          }\r\n\r\n          // Add the field to the list\r\n          this.METADATA.knownFieldNames.add(field)\r\n\r\n          this.METADATA.fields[field].relay('*', this, 'field.')\r\n\r\n          if (!suppressEvents) {\r\n            this.emit('field.create', this.METADATA.fields[field])\r\n          }\r\n\r\n          return this.METADATA.fields[field]\r\n        },\r\n\r\n        /**\r\n         * An internal helper method for applying changes to the model.\r\n         * @param  {String} [type='undo']\r\n         * This can be `undo` or `redo`.\r\n         * @param  {Number} [count=1]\r\n         * The number of cursor indexes to shift\r\n         * @param  {Boolean} [suppressEvents=false]\r\n         * Indicates events should be suppressed.\r\n         * @private\r\n         */\r\n        applyChange: (type = 'undo', count = 1, suppressEvents = false) => {\r\n          if (!this.METADATA.AUDITABLE) {\r\n            NGN.WARN(`The ${type} operation failed on the ${this.name} model because auditing is disabled.`)\r\n            return\r\n          }\r\n\r\n          this.METADATA.AUDITLOG[type === 'undo' ? 'rollback' : 'advance'](count)\r\n\r\n          let data = this.METADATA.AUDITLOG.currentValue\r\n\r\n          if (data) {\r\n            this.METADATA.auditFieldNames.forEach(fieldname => {\r\n              let field = this.METADATA.fields[fieldname]\r\n              let log = field.METADATA.AUDITLOG\r\n\r\n              if (log.cursor !== data[fieldname]) {\r\n                if (typeof data[fieldname] === 'symbol') {\r\n                  log.cursor = data[fieldname]\r\n                } else {\r\n                  log.cursor = null\r\n                }\r\n\r\n                field.METADATA.setValue(NGN.coalesce(log.currentValue, field.default), suppressEvents, true)\r\n              }\r\n            })\r\n          }\r\n        },\r\n\r\n        /**\r\n         * Generates a key/value representation of the model where\r\n         * each key represents an auditable field and each value is the\r\n         * transaction cursor ID.\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        getAuditMap: () => {\r\n          let map = {}\r\n\r\n          this.METADATA.auditFieldNames.forEach(field => {\r\n            map[field] = this.METADATA.fields[field].METADATA.AUDITLOG.cursor\r\n          })\r\n\r\n          return map\r\n        },\r\n\r\n        /**\r\n         * Restore the model to a specific audit map (i.e. historical state\r\n         * of multiple fields).\r\n         * @param {Object} map\r\n         * The audit map to restore.\r\n         */\r\n        // restore: (map) => {\r\n        //   let keys = Object.keys(map)\r\n        //\r\n        //   for (let i = 0; i < keys.length; i++) {\r\n        //     if (this.METADATA.knownFieldNames.has(keys[i]) && typeof map[keys[i]] === 'symbol') {\r\n        //       console.log('Has', keys[i])\r\n        //\r\n        //     }\r\n        //   }\r\n        // },\r\n\r\n        // Deprecations\r\n        setSilent: NGN.deprecate(this.setSilentFieldValue, 'setSilent has been deprecated. Use setSilentFieldValue instead.'),\r\n\r\n        /**\r\n         * @cfgproperty {object} fieldmap\r\n         * An object mapping model attribute names to data storage field names.\r\n         *\r\n         * _Example_\r\n         * ```\r\n         * {\r\n         *   ModelFieldName: 'inputName',\r\n         *   father: 'dad',\r\n         *   email: 'eml',\r\n         *   image: 'img',\r\n         *   displayName: 'dn',\r\n         *   firstName: 'gn',\r\n         *   lastName: 'sn',\r\n         *   middleName: 'mn',\r\n         *   gender: 'sex',\r\n         *   dob: 'bd'\r\n         * }\r\n         * ```\r\n         */\r\n        DATAMAP: null\r\n      }),\r\n\r\n      MAP: NGN.get(() => {\r\n        return NGN.coalesce(\r\n          this.METADATA.DATAMAP,\r\n          this.METADATA.store instanceof NGN.DATA.Store\r\n            ? this.METADATA.store.map\r\n            : null\r\n        )\r\n      })\r\n    })\r\n\r\n    if (cfg.fieldmap instanceof NGN.DATA.FieldMap) {\r\n      this.METADATA.DATAMAP = cfg.fieldmap\r\n    } else if (NGN.typeof(cfg.fieldmap) === 'object') {\r\n      this.METADATA.DATAMAP = new NGN.DATA.FieldMap(cfg.fieldmap)\r\n    }\r\n\r\n    // Bubble events to the BUS\r\n    // this.relay('*', NGN.BUS, 'record.')\r\n\r\n    // Add data fields.\r\n    let fields = Object.keys(this.METADATA.fields)\r\n    for (let i = 0; i < fields.length; i++) {\r\n      let name = fields[i]\r\n\r\n      if (this.METADATA.knownFieldNames.has(name)) {\r\n        NGN.WARN(`Duplicate field \"${name}\" detected.`)\r\n      } else {\r\n        // Configure a data field for each configuration.\r\n        this.METADATA.applyField(name, this.METADATA.fields[name], true)\r\n      }\r\n    }\r\n\r\n    // Apply automatic ID's when applicable\r\n    if (this.METADATA.autoid) {\r\n      let autoIdValue = null\r\n\r\n      Object.defineProperty(this.METADATA, 'IdentificationValue', NGN.get(() => {\r\n        if (autoIdValue === null) {\r\n          autoIdValue = NGN.DATA.UTILITY.UUID()\r\n        }\r\n\r\n        return autoIdValue\r\n      }))\r\n    }\r\n\r\n    // Apply auditing if configured\r\n    this.auditable = NGN.coalesce(cfg.audit, false)\r\n\r\n    // Clear any cached checksums when the model changes.\r\n    this.on(['field.update', 'field.create', 'field.delete', 'field.hidden', 'field.unhidden'], () => {\r\n      if (this.METADATA.checksum) {\r\n        this.METADATA.checksum = null\r\n      }\r\n    })\r\n\r\n    // Configure TTL/Expiration\r\n    if (cfg.expires) {\r\n      this.expires = cfg.expires\r\n    }\r\n\r\n    // Configure model-level validation rules\r\n    if (this.METADATA.validators !== null) {\r\n      switch (NGN.typeof(this.METADATA.validators)) {\r\n        // Support key/value objects where the key is the name and value is a function.\r\n        case 'object':\r\n          let keys = Object.keys(this.METADATA.validators)\r\n          let rules = []\r\n\r\n          for (let i = 0; i < keys.length; i++) {\r\n            rules.push(new NGN.DATA.Rule(this.METADATA.validators[keys[i]], keys[i], this))\r\n          }\r\n\r\n          break\r\n\r\n        // Support an array of existing data rules.\r\n        case 'array':\r\n          for (let i = 0; i < this.METADATA.validators.length; i++) {\r\n            if (this.METADATA.validators[i].hasOwnProperty('RULE')) {\r\n              this.METADATA.validators[i].RULE.scope = this\r\n            } else {\r\n              throw new Error(`Invalid data rule configuration for ${this.name} model. Rule #${i} is not a valid NGN.DATA.Rule instance.`)\r\n            }\r\n          }\r\n\r\n          break\r\n\r\n        // Diasllow any other kinds of rules.\r\n        default:\r\n          throw new Error(`Invalid data rule configuration for ${this.name} model. Expected an object or array of NGN.DATA.Rule instances. Received \"${NGN.typeof(this.METADATA.validators)}\"`)\r\n      }\r\n    }\r\n  }\r\n\r\n  get name () {\r\n    return this.METADATA.name\r\n  }\r\n\r\n  set auditable (value) {\r\n    value = NGN.forceBoolean(value)\r\n\r\n    if (value !== this.METADATA.AUDITABLE) {\r\n      this.METADATA.AUDITABLE = value\r\n      this.METADATA.AUDITLOG = value ? new NGN.DATA.TransactionLog() : null\r\n      this.METADATA.auditFieldNames = value ? new Set() : null\r\n\r\n      // Set each field to an auditable state (or not).\r\n      this.METADATA.knownFieldNames.forEach(fieldname => {\r\n        if (!this.METADATA.fields[fieldname].virtual) {\r\n          this.METADATA.fields[fieldname].auditable = value\r\n\r\n          if (value) {\r\n            this.METADATA.auditFieldNames.add(fieldname)\r\n          }\r\n        }\r\n      })\r\n\r\n      if (value) {\r\n        // Track Changes (if auditing enabled)\r\n        this.on('field.transaction.*', (id) => {\r\n          this.METADATA.AUDIT_HANDLER({ cursor: id })\r\n        })\r\n      } else {\r\n        this.METADATA.auditFieldNames.clear()\r\n\r\n        this.off('field.transaction.*')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The unique ID assigned to the model.\r\n   * @return {string}\r\n   */\r\n  get id () {\r\n    return this.get(this.METADATA.IdentificationField)\r\n  }\r\n\r\n  set id (value) {\r\n    this.set('id', value)\r\n  }\r\n\r\n  /**\r\n   * @property ID\r\n   * An alias for #id.\r\n   */\r\n  get ID () {\r\n    return this.id\r\n  }\r\n\r\n  set ID (value) {\r\n    this.set('id', value)\r\n  }\r\n\r\n  /**\r\n   * @property {Array} changelog\r\n   * The changelog returns the underlying NGN.DATA.TransactionLog#log if\r\n   * auditing is available. The array will be empty if auditing is disabled.\r\n   */\r\n  get changelog () {\r\n    return this.METADATA.AUDITLOG.log.map(entry => {\r\n      let result = {\r\n        timestamp: entry.timestamp,\r\n        activeCursor: entry.activeCursor,\r\n        value: {}\r\n      }\r\n\r\n      let data = entry.value\r\n      let field = Object.keys(data)\r\n\r\n      for (let i = 0; i < field.length; i++) {\r\n        if (typeof data[field[i]] === 'symbol') {\r\n          result.value[field[i]] = NGN.coalesce(\r\n            this.METADATA.fields[field[i]].METADATA.AUDITLOG.getCommit(data[field[i]]).value,\r\n            this.METADATA.fields[field[i]].default\r\n          )\r\n        } else {\r\n          result.value[field[i]] = NGN.coalesce(this.METADATA.fields[field[i]].default)\r\n        }\r\n      }\r\n\r\n      return result\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @property {Number} createDate\r\n   * The date/time when the model is created.\r\n   */\r\n  get createDate () {\r\n    return this.METADATA.created\r\n  }\r\n\r\n  /**\r\n   * @property {object} data\r\n   * A serialized version of the data represented by the model. This\r\n   * only includes non-virtual fields. See #representation to use\r\n   * a representation of data containing virtual fields.\r\n   */\r\n  get data () {\r\n    if (this.MAP) {\r\n      return this.MAP.applyInverseMap(this.serializeFields())\r\n    }\r\n\r\n    return this.serializeFields()\r\n  }\r\n\r\n  /**\r\n   * @property {object} unmappedData\r\n   * Returns #data _without applying_ the data #map.\r\n   */\r\n  get unmappedData () {\r\n    return this.serializeFields()\r\n  }\r\n\r\n  /**\r\n   * @property {object} representation\r\n   * A serialized version of the data represented by the model. This\r\n   * includes virtual fields. See #data to use just the raw values.\r\n   */\r\n  get representation () {\r\n    if (this.MAP) {\r\n      return this.MAP.applyInverseMap(this.serializeFields(false, false))\r\n    }\r\n\r\n    return this.serializeFields(false, false)\r\n  }\r\n\r\n  /**\r\n   * @property {object} unmappedRepresentation\r\n   * Returns #representation _without applying_ the data #map.\r\n   */\r\n  get unmappedRepresentation () {\r\n    return this.serializeFields(false, false)\r\n  }\r\n\r\n  /**\r\n   * @property {string} checksum\r\n   * The checksum is a unique \"fingerprint\" of the data stored in the model.\r\n   * Please note that generating a checksum for an individual record is\r\n   * usually a quick operation, but generating large quantities of checksums\r\n   * simultaneously/sequentially can be computationally expensive. On average,\r\n   * a checksum takes 3-125ms to generate.\r\n   */\r\n  get checksum () {\r\n    this.METADATA.checksum = NGN.coalesce(this.METADATA.checksum, NGN.DATA.UTILITY.checksum(JSON.stringify(this.data)))\r\n\r\n    return this.METADATA.checksum\r\n  }\r\n\r\n  /**\r\n   * @property {Date} expires\r\n   * The date/time when the record expires. This may be set to\r\n   * a future date, or a numeric value. Numeric values\r\n   * represent the number of milliseconds from the current time\r\n   * before the record expires. For example, set this to `3000`\r\n   * to force the record to expire 3 seconds from now.\r\n   *\r\n   * Set this to `0` to immediately expire the record. Set this to\r\n   * `-1` or `null` to prevent the record from expiring.\r\n   */\r\n  get expires () {\r\n    return this.METADATA.expiration\r\n  }\r\n\r\n  set expires (value) {\r\n    if (value === null) {\r\n      clearTimeout(this.METADATA.expirationTimeout)\r\n      this.METADATA.expiration = null\r\n      return\r\n    }\r\n\r\n    let now = new Date()\r\n\r\n    if (!isNaN(value) && !(value instanceof Date)) {\r\n      // Handle numeric (millisecond) expiration\r\n      if (value < 0) {\r\n        this.METADATA.expiration = null\r\n\r\n        return\r\n      }\r\n\r\n      if (value === 0) {\r\n        this.METADATA.expiration = now\r\n        this.emit('expire')\r\n\r\n        return\r\n      }\r\n\r\n      this.METADATA.expiration = new Date()\r\n      this.METADATA.expiration.setTime(now.getTime() + value)\r\n    } else if (!(value instanceof Date) || value <= now) {\r\n      throw new Error(`${this.name} expiration (TTL) value must be a positive number (milliseconds) or future date.`)\r\n    } else {\r\n      // Handle date-based expiration\r\n      this.METADATA.expiration = value\r\n    }\r\n\r\n    clearTimeout(this.METADATA.expirationTimeout)\r\n\r\n    this.METADATA.expirationTimeout = setTimeout(() => this.emit('expire'), this.METADATA.expiration.getTime() - now.getTime())\r\n  }\r\n\r\n  get expired () {\r\n    if (this.METADATA.expiration === null) {\r\n      return false\r\n    }\r\n\r\n    return this.METADATA.expiration <= (new Date())\r\n  }\r\n\r\n  get fieldDefinitions () {\r\n    return this.METADATA.fields\r\n    // if (this.METADATA.knownFieldNames.size === 0) {\r\n    //   return {}\r\n    // }\r\n    //\r\n    // let fields = this.METADATA.knownFieldNames.keys()\r\n    // let result = {}\r\n    // let fieldname = fields.next()\r\n    //\r\n    // while (!fieldname.done) {\r\n    //   let field = this.METADATA.fields[fieldname.value]\r\n    //\r\n    //   if ((\r\n    //     field.value === undefined ||\r\n    //     (ignoreID && fieldname.value === this.IdentificationField) ||\r\n    //     (!field.virtual || (!ignoreVirtualFields && field.virtual))\r\n    //   )) {\r\n    //     // Do not serialize hidden values or virtuals\r\n    //     if (!field.hidden) {\r\n    //       switch (NGN.typeof(field.value)) {\r\n    //         case 'array':\r\n    //         case 'object':\r\n    //           result[fieldname.value] = NGN.DATA.UTILITY.serialize(field.value)\r\n    //           break\r\n    //\r\n    //         default:\r\n    //           result[fieldname.value] = field.value\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  serializeFields (ignoreID = false, ignoreVirtualFields = true) {\r\n    if (this.METADATA.knownFieldNames.size === 0) {\r\n      return {}\r\n    }\r\n\r\n    let fields = this.METADATA.knownFieldNames.keys()\r\n    let result = {}\r\n    let fieldname = fields.next()\r\n\r\n    while (!fieldname.done) {\r\n      let field = this.METADATA.fields[fieldname.value]\r\n\r\n      // Ignore unserializable fields\r\n      if ((\r\n        field.value === undefined ||\r\n        (ignoreID && fieldname.value === this.IdentificationField) ||\r\n        (!field.virtual || (!ignoreVirtualFields && field.virtual))\r\n      )) {\r\n        // Do not serialize hidden values or virtuals\r\n        if (!field.hidden) {\r\n          switch (NGN.typeof(field.value)) {\r\n            case 'array':\r\n            case 'object':\r\n              result[fieldname.value] = NGN.DATA.UTILITY.serialize(field.value)\r\n              break\r\n\r\n            default:\r\n              result[fieldname.value] = field.value\r\n          }\r\n        }\r\n      }\r\n\r\n      fieldname = fields.next()\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  serialize () {\r\n    return NGN.deprecate(this.serializeFields, 'serialize is now serializeFields. Use NGN.DATA.UTILITY.serialize for generic object serialization.')\r\n  }\r\n\r\n  /**\r\n   * Determines whether a field exists in the model or not.\r\n   * @param  {string} field\r\n   * Name of the field to check for.\r\n   * @return {boolean}\r\n   */\r\n  fieldExists (field) {\r\n    return this.METADATA.knownFieldNames.has(field)\r\n  }\r\n\r\n  /**\r\n   * Retrieve the value of the specified field.\r\n   * @param  {string} field\r\n   * Name of the field whose value should be returned.\r\n   * @return {any}\r\n   * Returns the value of the field.\r\n   */\r\n  get (field) {\r\n    if (field === 'id' || field === 'ID' || field === this.METADATA.IdentificationField) {\r\n      field = this.METADATA.IdentificationField\r\n\r\n      if (this.METADATA.autoid) {\r\n        if (!this.METADATA.knownFieldNames.has(field)) {\r\n          return this.METADATA.IdentificationValue\r\n        } else {\r\n          return NGN.coalesce(this.METADATA.fields[field].value, this.METADATA.IdentificationValue)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.METADATA.knownFieldNames.has(field)) {\r\n      return this.METADATA.fields[field].value\r\n    } else {\r\n      NGN.WARN(`Cannot get \"${field}\". The field is not part of the model.`)\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set a new value for the specified field.\r\n   * @param {string} field\r\n   * Name of the field whose value will be changed.\r\n   * @param {any} value\r\n   * The new value of the field.\r\n   */\r\n  set (field, value) {\r\n    if (field === 'id' || field === 'ID') {\r\n      field = this.METADATA.IdentificationField\r\n    }\r\n\r\n    if (this.METADATA.knownFieldNames.has(field)) {\r\n      this.METADATA.fields[field].value = value\r\n    } else {\r\n      NGN.WARN(`Cannot set \"${field}\". Unrecognized field name.`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a data field after the initial model definition.\r\n   * @param {string} fieldname\r\n   * The name of the field.\r\n   * @param {NGN.DATA.Field|Object|Primitive} [fieldConfiguration=null]\r\n   * The field configuration (see cfg#fields for syntax).\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set to `true` to prevent events from firing when the field is added.\r\n   */\r\n  addField (name, fieldConfiguration = null, suppressEvents = false) {\r\n    if (name instanceof NGN.DATA.Field) {\r\n      fieldConfiguration = name\r\n      name = fieldConfiguration.name\r\n    } else if (typeof name !== 'string') {\r\n      throw new Error('Cannot add a non-string based field.')\r\n    }\r\n\r\n    this.METADATA.applyField(name, fieldConfiguration, suppressEvents)\r\n  }\r\n\r\n  /**\r\n   * @method removeField\r\n   * Remove a field from the data model.\r\n   * @param {string} name\r\n   * Name of the field to remove.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set to `true` to prevent events from firing when the field is removed.\r\n   */\r\n  removeField (name, suppressEvents = false) {\r\n    if (this.METADATA.knownFieldNames.has(name)) {\r\n      this.METADATA.knownFieldNames.delete(name)\r\n      this.METADATA.invalidFieldNames.delete(name)\r\n\r\n      const field = this.METADATA.fields[name]\r\n\r\n      delete this[name]\r\n      delete this.METADATA.fields[name] // eslint-disable-line no-undef\r\n\r\n      // let change = {\r\n      //   action: 'delete',\r\n      //   field: field.name,\r\n      //   value: field,\r\n      //   join: field instanceof NGN.DATA.Relationship\r\n      // }\r\n\r\n      if (!suppressEvents) {\r\n        this.emit('field.remove', field)\r\n      }\r\n\r\n      if (this.METADATA.store !== null) {\r\n        this.METADATA.store.emit(this.METADATA.store.PRIVATE.EVENT.DELETE_RECORD_FIELD, {\r\n          record: this,\r\n          field\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the NGN.DATA.Field object for the specified field.\r\n   * @param  {string} fieldName\r\n   * Name of the field to retrieve.\r\n   * @return {NGN.DATA.Field}\r\n   * The raw field.\r\n   */\r\n  getField (name) {\r\n    if (name.toLowerCase() === 'id' && !this.METADATA.fields.hasOwnProperty(name) && this.METADATA.fields.hasOwnProperty(this.METADATA.IdentificationField)) {\r\n      return this.METADATA.fields[this.METADATA.IdentificationField]\r\n    }\r\n\r\n    return this.METADATA.fields[name]\r\n  }\r\n\r\n  /**\r\n   * @method setSilent\r\n   * A method to set a field value without triggering an update event.\r\n   * This is designed primarily for use with live update proxies to prevent\r\n   * endless event loops.\r\n   * @param {string} fieldname\r\n   * The name of the #field to update.\r\n   * @param {any} value\r\n   * The new value of the field.\r\n   * @private\r\n   */\r\n  setSilentFieldValue (field, value) {\r\n    this.METADATA.fields[field].silentValue = value\r\n  }\r\n\r\n  /**\r\n   * @method undo\r\n   * A rollback function to undo changes. This operation affects\r\n   * the changelog (transaction log). To \"undo\" an \"undo\", use #redo.\r\n   * @param {number} [OperationCount=1]\r\n   * The number of operations to \"undo\". Defaults to a single operation.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set to `true` to quietly update the value (prevents `update` event from\r\n   * firing).\r\n   */\r\n  undo (count = 1, suppressEvents = false) {\r\n    this.METADATA.applyChange('undo', ...arguments)\r\n  }\r\n\r\n  /**\r\n   * @method redo\r\n   * A function to reapply known changes. This operation affects\r\n   * the changelog (transaction log).\r\n   *\r\n   * The redo operation only works after an undo operation, but before a new\r\n   * value is committed to the transaction log. In other words, `undo -> redo`\r\n   * will work, but `undo -> update -> redo` will not. For details, see how\r\n   * the NGN.DATA.TransactionLog cursor system works.\r\n   * @param {number} [OperationCount=1]\r\n   * The number of operations to \"undo\". Defaults to a single operation.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set to `true` to quietly update the value (prevents `update` event from\r\n   * firing).\r\n   */\r\n  redo (count = 1, suppressEvents = false) {\r\n    this.METADATA.applyChange('redo', ...arguments)\r\n  }\r\n\r\n  /**\r\n   * @method load\r\n   * Load a data record.\r\n   * @param {object} data\r\n   * The data to apply to the model.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Do not emit a change event when the data is loaded.\r\n   */\r\n  load (data, suppressEvents = false) {\r\n    if (this.MAP) {\r\n      data = this.MAP.applyMap(data)\r\n    }\r\n\r\n    let keys = Object.keys(data)\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (this.METADATA.knownFieldNames.has(keys[i])) {\r\n        this.METADATA.fields[keys[i]].METADATA.setValue(data[keys[i]], suppressEvents)\r\n      } else {\r\n        NGN.WARN(`Failed to load ${keys[i]} field of ${this.name} model. \"${keys[i]}\" is not a recognized field.`)\r\n      }\r\n    }\r\n\r\n    if (!suppressEvents) {\r\n      this.emit('load')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * @info This method only works on records within a store. If this method is\r\n   * called on a model that is not part of a store, the model itself will be\r\n   * returned.\r\n   *\r\n   * Retrieve the next record (after this one) from the store.\r\n   * This can be used to iterate through a store by calling `model.next()`.\r\n   * This is operation acts as a linked list iterator.\r\n   * @param  {Number}  [count=1]\r\n   * The number of records to retrieve. For example, `1` retrieves the next record.\r\n   * `2` retrieves the second record after this one. A negative number will\r\n   * automatically use the #previous method to retrieve prior records. Setting this\r\n   * to `0` will return the current record (i.e. no change).\r\n   * @param  {Boolean}  [cycle=false] [description]\r\n   * If this `next` is called on the last record, it will fail. Setting `cycle` to\r\n   * `true` will automatically restart the iteration, returning the first record in\r\n   * the store.\r\n   * @return {NGN.DATA.Model}\r\n   * Returns the next model in the store (after this one.)\r\n   */\r\n  next (count = 1, cycle = false) {\r\n    if (count === 0) {\r\n      return this\r\n    }\r\n\r\n    if (this.METADATA.store) {\r\n      if (typeof count === 'boolean') {\r\n        cycle = count\r\n        count = 1\r\n      }\r\n\r\n      return this.METADATA.store.getRecordSibling(this, count, cycle)\r\n    } else {\r\n      NGN.WARN('Attempted to call next() on a model that does not belong to a store.')\r\n      return this\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the previous record (before this one) from the store.\r\n   * This can be used to iterate through a store in reverse by calling\r\n   * `model.previous()`. This is operation acts as a doubly linked list iterator.\r\n   *\r\n   * @info This method only works on records within a store. If this method is\r\n   * called on a model that is not part of a store, the model itself will be\r\n   * returned.\r\n   * @param  {Number}  [count=1]\r\n   * The number of records to retrieve. For example, `1` retrieves the prior record.\r\n   * `2` retrieves the second record before this one. A negative number will\r\n   * automatically use the #next method to retrieve forward records. Setting this\r\n   * to `0` will return the current record (i.e. no change).\r\n   * @param  {Boolean}  [cycle=false]\r\n   * If this `next` is called on the first record, it will fail. Setting `cycle` to\r\n   * `true` will automatically restart the iteration, returning the last record in\r\n   * the store.\r\n   * @return {NGN.DATA.Model}\r\n   * Returns the previous model in the store (before this one.)\r\n   */\r\n  previous (count = 1, cycle = false) {\r\n    if (count === 0) {\r\n      return this\r\n    }\r\n\r\n    if (this.METADATA.store) {\r\n      if (typeof count === 'boolean') {\r\n        cycle = count\r\n        count = 1\r\n      }\r\n\r\n      return this.METADATA.store.getRecordSibling(this, 0 - count, cycle)\r\n    } else {\r\n      NGN.WARN('Attempted to call previous() on a model that does not belong to a store.')\r\n      return this\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove this model from the NGN.DATA.Store it is a part of.\r\n   *\r\n   * @info This method only works on records within a store. If this method is\r\n   * called on a model that is not part of a store, nothing will happen.\r\n   */\r\n  destroy () {\r\n    if (this.METADATA.store) {\r\n      this.METADATA.store.remove(this.OID)\r\n    } else {\r\n      NGN.WARN('Attempted to call remove() on a model that does not belong to a store.')\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from '../../emitter/core'\r\n\r\n/**\r\n * @class NGN.DATA.Index\r\n * Data indexes are a data structure that improves the speed\r\n * of data retrieval from an NGN.DATA.Store, at the cost of\r\n * additional memory usage. Even though memory usage is increased\r\n * for each index applied to a store, it tends to be a very small\r\n * fraction of the memory required for storing data.\r\n *\r\n * Indexes help locate data within a store without having to read\r\n * every record. They will, in the overwhelming majority of cases,\r\n * speed up queries. However; if overused or misused, they may\r\n * marginally _increase_ query processing time.\r\n *\r\n * NGN data indexes were designed to be used the same way relational\r\n * data indexes and graph data vertices are used.\r\n * @fires create {Symbol}\r\n * Triggered when a new record is indexed. The payload (Symbol)\r\n * represents the NGN.DATA.Model#oid.\r\n * @fires delete {Symbol}\r\n * Triggered when a record is de-indexed. The payload (Symbol)\r\n * represents the NGN.DATA.Model#oid.\r\n * @fires update {Symbol}\r\n * Triggered when a record is re-indexed (updated). The payload (Symbol)\r\n * represents the NGN.DATA.Model#oid.\r\n * @fires reset\r\n * Triggered when the index is completely cleared/reset to it's original state.\r\n * @private\r\n */\r\nexport default class NGNDataIndex extends EventEmitter { // eslint-disable-line\r\n  /**\r\n   * Create a new data index.\r\n   * @param {Boolean} [BTree=false]\r\n   * Use a B-Tree index. This is only available for numeric values and dates.\r\n   * @param {String} [name='Untitled Index']\r\n   * Optional name for index. This is useful for debugging when multiple\r\n   * indexes exist.\r\n   */\r\n  constructor (btree = false, name = 'Untitled Index') {\r\n    super()\r\n\r\n    Object.defineProperties(this, {\r\n      // Private constants\r\n      CREATE_EVENT: NGN.privateconst(Symbol('create')),\r\n      REMOVE_EVENT: NGN.privateconst(Symbol('delete')),\r\n      UPDATE_EVENT: NGN.privateconst(Symbol('update')),\r\n\r\n      // Private data attributes\r\n      uniqueValues: NGN.privateconst(new Set()),\r\n      knownRecords: NGN.privateconst([]), // Linked list of Sets\r\n      name: NGN.const(name),\r\n      isBTree: NGN.privateconst(btree)\r\n    })\r\n\r\n    // Bubble up private events when applicable\r\n    const me = this\r\n    this.on([\r\n      this.CREATE_EVENT,\r\n      this.REMOVE_EVENT,\r\n      this.UPDATE_EVENT\r\n    ], function (oid, value, suppressEvent = false) {\r\n      if (!suppressEvent) {\r\n        me.emit(this.event.toString().replace(/^Symbol\\(|\\)$/g, ''), oid)\r\n      }\r\n    })\r\n\r\n    // When all known records for a given value are removed,\r\n    // clear the unique value index.\r\n    this.on(this.REMOVE_EVENT, (oid, value) => {\r\n      if (this.recordsFor(value).length === 0) {\r\n        let index = this.indexOf(value)\r\n\r\n        if (index >= 0) {\r\n          this.knownRecords.splice(index, 1)\r\n          this.uniqueValues.delete(value)\r\n        }\r\n      }\r\n    })\r\n\r\n    // Support BTree Indexing\r\n    if (this.isBTree) {\r\n      Object.defineProperty(this, 'BTREE', NGN.privateconst(new NGN.DATA.BTree(2, name)))\r\n    }\r\n  }\r\n\r\n  get keys () {\r\n    if (this.uniqueValues.size === 0) {\r\n      return []\r\n    }\r\n\r\n    return Array.from(this.uniqueValues.values())\r\n  }\r\n\r\n  /**\r\n   * Add a field/value to the index.\r\n   * @param {any} value\r\n   * The value of the model/record indexed field.\r\n   * @param {Symbol} oid\r\n   * The record's object ID (NGN.DATA.Model#OID)\r\n   */\r\n  add (value, oid, suppressEvent = false) {\r\n    let valueIndex = -1\r\n\r\n    // Create or identify the index of the unique value\r\n    if (!this.uniqueValues.has(value)) {\r\n      this.uniqueValues.add(value)\r\n      this.knownRecords.push(new Set())\r\n      valueIndex += this.uniqueValues.size\r\n    } else {\r\n      valueIndex = this.indexOf(value)\r\n    }\r\n\r\n    this.knownRecords[valueIndex].add(oid)\r\n\r\n    // Add BTree indexing\r\n    if (this.isBTree) {\r\n      let btreeValue = value instanceof Date ? value.getTime() : value\r\n\r\n      if (this.BTREE.get(btreeValue) === undefined) {\r\n        this.BTREE.put(btreeValue, valueIndex)\r\n      }\r\n    }\r\n\r\n    this.emit(this.CREATE_EVENT, oid, value, suppressEvent)\r\n  }\r\n\r\n  /**\r\n   * Remove a record from the index.\r\n   * @param  {Symbol} oid\r\n   * The record's object ID (NGN.DATA.Model#OID)\r\n   * @param  {any} [value=undefined]\r\n   * When specified, the field value will be used to identify\r\n   * the index value. Specifying this value will make the remove\r\n   * operation faster (uses introspection).\r\n   */\r\n  remove (oid, value, suppressEvent = false) {\r\n    // If a value is specified, attempt to lookup the OID by value.\r\n    if (value !== undefined) {\r\n      let index = this.recordsOf(value)\r\n\r\n      // If a value index is found, remove the OID\r\n      if (index) {\r\n        if (index.delete(oid)) { // Returns false if nothing is actually deleted.\r\n          if (this.isBTree && (!index || index.size === 0)) {\r\n            this.BTREE.delete(value instanceof Date ? value.getTime() : value)\r\n          }\r\n\r\n          this.emit(this.REMOVE_EVENT, oid, value, suppressEvent)\r\n\r\n          return\r\n        }\r\n      }\r\n\r\n      NGN.WARN(`Index value \"${value}\" not found in index.`)\r\n    }\r\n\r\n    // Iterate through all index values to remove the OID (slow)\r\n    let removed = false\r\n    for (let i = 0; i < this.knownRecords.length; i++) {\r\n      if (this.knownRecords[i].delete(oid) && !removed) {\r\n        removed = true\r\n        value = Array.from(this.uniqueValues.values())[i]\r\n\r\n        if (this.isBTree) {\r\n          this.BTREE.delete(value instanceof Date ? value.getTime() : value)\r\n        }\r\n\r\n        break\r\n      }\r\n    }\r\n\r\n    if (removed) {\r\n      this.emit(this.REMOVE_EVENT, oid, value, suppressEvent)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update an index to reflect an updated value.\r\n   * @param  {[type]} oid      [description]\r\n   * @param  {[type]} oldvalue [description]\r\n   * @param  {[type]} newvalue [description]\r\n   * @return {[type]}          [description]\r\n   */\r\n  update (oid, oldValue, newValue, suppressEvent = false) {\r\n    if (oldValue !== newValue) {\r\n      this.remove(oid, oldValue, true)\r\n      this.add(newValue, oid, true)\r\n      this.emit(this.UPDATE_EVENT, oid, null, suppressEvent)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Forcibly reset the index (clears everything).\r\n   */\r\n  reset () {\r\n    this.uniqueValues.clear()\r\n    this.knownRecords.splice(0)\r\n\r\n    if (this.isBTree) {\r\n      this.BTREE.reset()\r\n    }\r\n\r\n    this.emit('reset')\r\n  }\r\n\r\n  /**\r\n   * Retrieve the index number of known records for the\r\n   * specified value.\r\n   * @private\r\n   * @param  {any} value\r\n   * The unique value for which records are known.\r\n   * @return {[numeric]}\r\n   * The 0-based index of known records. Returns `-1` if no\r\n   * index exists.\r\n   */\r\n  indexOf (value) {\r\n    return Array.from(this.uniqueValues.keys()).indexOf(value)\r\n  }\r\n\r\n  /**\r\n   * The records of a particular value.\r\n   * @private\r\n   * @param  {any} value\r\n   * The index field value to use as a lookup.\r\n   * @return {Set}\r\n   * An set of object ID's or `null` if none exist.\r\n   */\r\n  recordsOf (value) {\r\n    let valueIndex = this.indexOf(value)\r\n\r\n    return valueIndex < 0 ? null : this.knownRecords[valueIndex]\r\n  }\r\n\r\n  /**\r\n   * Get the list of records for the given value.\r\n   * @param  {any} value\r\n   * The value of the index to lookup.\r\n   * @return {array}\r\n   * The array contains OID reference values (records).\r\n   */\r\n  recordsFor (value) {\r\n    let index = this.recordsOf(value)\r\n\r\n    if (index === null || index.size === 0) {\r\n      return []\r\n    }\r\n\r\n    return Array.from(index.values())\r\n  }\r\n}\r\n","import EventEmitter from '../emitter/core'\r\n\r\nNGN.createException({\r\n  name: 'NGNDuplicateRecordError',\r\n  message: 'A duplicate record exists within the unique data set.'\r\n})\r\n\r\n/**\r\n * @class NGN.DATA.Store\r\n * Represents a collection of data.\r\n * @fires record.create\r\n * Fired when a new record is created. The new\r\n * record is provided as an argument to the event\r\n * handler.\r\n * @fires record.delete\r\n * Fired when a record(s) is removed. The old record\r\n * is provided as an argument to the event handler.\r\n * @fires record.update\r\n * Fired when a record(s) is modified. A change object\r\n * is provided as an argument to event handlers. The object\r\n * contains a reference to the store, the old record, and\r\n * the new record.\r\n *\r\n * ```\r\n * {\r\n *   store: <current data store>,\r\n *   new: <NGN.DATA.Model>,\r\n *   old: <NGN.DATA.Model>\r\n * }\r\n * ```\r\n */\r\nexport default class NGNDataStore extends EventEmitter { // eslint-disable-line\r\n  constructor (cfg = {}) {\r\n    if (NGN.typeof(cfg) === 'model') {\r\n      cfg = { model: cfg }\r\n    } else if (!cfg.model || !NGN.DATA.UTILITY.isDataModel(cfg.model)) {\r\n      throw new InvalidConfigurationError('Missing or invalid \"model\" configuration property.')\r\n    }\r\n\r\n    super()\r\n\r\n    const me = this\r\n\r\n    Object.defineProperties(this, {\r\n      /**\r\n       * @cfgproperty {string} [name]\r\n       * A descriptive name for the store. This is typically used for\r\n       * debugging, logging, and (somtimes) data proxies.\r\n       */\r\n      name: NGN.const(NGN.coalesce(cfg.name, 'Untitled Data Store')),\r\n\r\n      METADATA: NGN.private({\r\n        // Holds the models/records\r\n        records: [],\r\n\r\n        /**\r\n         * @cfgproperty {NGN.DATA.Model} model\r\n         * An NGN Data Model to which data records conform.\r\n         */\r\n        Model: NGN.coalesce(cfg.model),\r\n\r\n        /**\r\n         * @cfg {boolean} [allowDuplicates=true]\r\n         * Set to `false` to prevent duplicate records from being added.\r\n         * If a duplicate record is added, it will be ignored and an\r\n         * error will be thrown.\r\n         *\r\n         * **Identifying duplicates _may_ be slow** on data sets with 200+ records.\r\n         * Uniqueness is determined by a checksum of the current NGN.DATA.Model#data\r\n         * of a record. The amount of time required to generate a checksum can range\r\n         * from 3ms to 150ms per record depending on data complexity.\r\n         *\r\n         * In most scenarios, the performance impact will be negligible/indistinguishable\r\n         * to the naked eye. However; if an application experiences slow data\r\n         * load or processing times, setting this to `false` may help.\r\n         */\r\n        allowDuplicates: NGN.coalesce(cfg.allowDuplicates, true),\r\n\r\n        /**\r\n         * @cfg {boolean} [errorOnDuplicate=false]\r\n         * Set to `true` to throw an error when a duplicate record is detected.\r\n         * If this is not set, it will default to the value of #allowDuplicates.\r\n         * If #allowDuplicates is not defined either, this will be `true`\r\n         */\r\n        errorOnDuplicate: NGN.coalesce(cfg.errorOnDuplicate, cfg.allowDuplicates, false),\r\n\r\n        /**\r\n         * @cfg {boolean} [allowInvalid=true]\r\n         * Allow invalid records to be added to the store.\r\n         */\r\n        allowInvalid: NGN.coalesce(cfg.allowInvalid, true),\r\n\r\n        /**\r\n         * @cfg {boolean} [errorOnInvalid=false]\r\n         * Set to `true` to throw an error when an attempt is made to add an\r\n         * invalid record.\r\n         */\r\n        errorOnInvalid: NGN.coalesce(cfg.errorOnInvalid, cfg.allowInvalid, false),\r\n\r\n        /**\r\n         * @cfgproperty {boolean} [autoRemoveExpiredRecords=true]\r\n         * When set to `true`, the store will automatically delete expired records.\r\n         */\r\n        autoRemoveExpiredRecords: NGN.coalesce(cfg.autoRemoveExpiredRecords, true),\r\n\r\n        /**\r\n         * @cfg {boolean} [softDelete=false]\r\n         * When set to `true`, the store makes a copy of a record before removing\r\n         * it from the store. The store will still emit a `record.delete` event,\r\n         * and it will still behanve as though the record has been completely\r\n         * removed. However; the record copy can be retrieved using the #restore\r\n         * method.\r\n         *\r\n         * Since it is not always desirable to store a copy of every deleted\r\n         * record indefinitely, it is possible to expire and permanently remove\r\n         * records by setting the #softDeleteTtl.\r\n         *\r\n         * ```js\r\n         * var People = new NGN.DATA.Store({\r\n         *   model: Person,\r\n         *   softDelete: true,\r\n         *   softDeleteTtl: 10000\r\n         * })\r\n         *\r\n         * People.add(somePerson)\r\n         *\r\n         * var removedRecordId\r\n         * People.once('record.delete', function (record) {\r\n         *   removedRecordId = record.id\r\n         * })\r\n         *\r\n         * People.remove(somePerson)\r\n         *\r\n         * setTimeout(function () {\r\n         *   People.restore(removedRecordId)\r\n         * }, 5000)\r\n         *\r\n         * ```\r\n         *\r\n         * The code above creates a new store and adds a person to it.\r\n         * Then a placeholder variable (`removedRecordId`) is created.\r\n         * Next, a one-time event listener is added to the store, specifically\r\n         * for handling the removal of a record. Then the record is removed,\r\n         * which triggers the `record.delete` event, which populates\r\n         * `removedRecordId` with the ID of the record that was deleted.\r\n         * Finally, the code waits for 5 seconds, then restores the record. If\r\n         * the #restore method _wasn't_ called, the record would be purged\r\n         * from memory after 10 seconds (because `softDeleteTtl` is set to 10000\r\n         * milliseconds).\r\n         */\r\n        softDelete: NGN.coalesce(cfg.softDelete, false),\r\n\r\n        /**\r\n         * @cfg {number} [softDeleteTtl=-1]\r\n         * This is the number of milliseconds the store waits before purging a\r\n         * soft-deleted record from memory. `-1` = Infinite (no TTL).\r\n         */\r\n        softDeleteTtl: NGN.coalesce(cfg.softDeleteTtl, -1),\r\n\r\n        // ARCHIVE contains soft deleted records\r\n\r\n        /**\r\n         * @cfg {Number} [FIFO=-1]\r\n         * Configures the store to use \"**F**irst **I**n **F**irst **O**ut\"\r\n         * record processing when it reaches a maximum number of records.\r\n         *\r\n         * For example, assume `FIFO=10`. When the 11th record is added, it\r\n         * will replace the oldest record (i.e. the 1st). This guarantees the\r\n         * store will never have more than 10 records at any given time and it\r\n         * will always maintain the latest records.\r\n         *\r\n         * FIFO and LIFO cannot be applied at the same time.\r\n         *\r\n         * **BE CAREFUL** when using this in combination with #insert,\r\n         * #insertBefore, or #insertAfter. FIFO is applied _after_ the record\r\n         * is added to the store but _before_ it is moved to the desired index.\r\n         */\r\n        fifo: NGN.coalesce(cfg.FIFO, -1),\r\n\r\n        /**\r\n         * @cfg {Number} [LIFO=-1]\r\n         * Configures the store to use \"**L**ast **I**n **F**irst **O**ut\"\r\n         * record processing when it reaches a maximum number of records.\r\n         *\r\n         * This methos acts in the opposite manner as #FIFO. However; for\r\n         * all intents and purposes, this merely replaces the last record in\r\n         * the store when a new record is added.\r\n         *\r\n         * For example, assume `FIFO=10`. When the 11th record is added, it\r\n         * will replace the latest record (i.e. the 10th). This guarantees the\r\n         * store will never have more than 10 records at any given time. Every\r\n         * time a new record is added (assuming the store already has the maximum\r\n         * allowable records), it replaces the last record (10th) with the new\r\n         * record.\r\n         *\r\n         * LIFO and FIFO cannot be applied at the same time.\r\n         *\r\n         * **BE CAREFUL** when using this in combination with #insert,\r\n         * #insertBefore, or #insertAfter. LIFO is applied _after_ the record\r\n         * is added to the store but _before_ it is moved to the desired index.\r\n         */\r\n        lifo: NGN.coalesce(cfg.LIFO, -1),\r\n\r\n        /**\r\n         * @cfg {Number} [maxRecords=-1]\r\n         * Setting this will prevent new records from being added past this limit.\r\n         * Attempting to add a record to the store beyond it's maximum will throw\r\n         * an error.\r\n         */\r\n        maxRecords: NGN.coalesce(cfg.maxRecords, -1),\r\n\r\n        /**\r\n         * @cfg {Number} [minRecords=0]\r\n         * Setting this will prevent removal of records if the removal would\r\n         * decrease the count below this limit.\r\n         * Attempting to remove a record below the store's minimum will throw\r\n         * an error.\r\n         */\r\n        minRecords: NGN.coalesce(cfg.minRecords, 0),\r\n\r\n        /**\r\n         * @cfg {Number} [autocompact=50000]\r\n         * Identify the number of deletions that should occur before\r\n         * the store is compacted. See #compact. Set this to any value\r\n         * below `100` (the minimum) to disable autocompact.\r\n         */\r\n        autocompact: NGN.coalesce(cfg.autocompact, 50000),\r\n\r\n        /**\r\n         * @cfgproperty {object} fieldmap\r\n         * An object mapping model attribute names to data storage field names.\r\n         *\r\n         * _Example_\r\n         * ```\r\n         * {\r\n         *   ModelFieldName: 'inputName',\r\n         *   father: 'dad',\r\n         *   email: 'eml',\r\n         *   image: 'img',\r\n         *   displayName: 'dn',\r\n         *   firstName: 'gn',\r\n         *   lastName: 'sn',\r\n         *   middleName: 'mn',\r\n         *   gender: 'sex',\r\n         *   dob: 'bd'\r\n         * }\r\n         * ```\r\n         */\r\n        MAP: NGN.coalesce(cfg.fieldmap),\r\n\r\n        EVENTS: new Set([\r\n          'record.duplicate',\r\n          'record.create',\r\n          'record.update',\r\n          'record.delete',\r\n          'record.restored',\r\n          'record.purged',\r\n          'record.move',\r\n          'record.invalid',\r\n          'record.valid',\r\n          'clear',\r\n          'filter.create',\r\n          'filter.delete',\r\n          'index.create',\r\n          'index.delete',\r\n          'compact.start',\r\n          'compact.complete'\r\n        ]),\r\n\r\n        /**\r\n         * @cfg {boolean} [audit=false]\r\n         * Enable auditing to support #undo/#redo operations. This creates and\r\n         * manages a NGN.DATA.TransactionLog.\r\n         */\r\n        AUDITABLE: NGN.coalesce(cfg.audit, false),\r\n        AUDITLOG: NGN.coalesce(cfg.audit, false) ? new NGN.DATA.TransactionLog() : null,\r\n        AUDIT_HANDLER: (change) => {\r\n          if (change.hasOwnProperty('cursor')) {\r\n            this.METADATA.AUDITLOG.commit(this.METADATA.getAuditMap())\r\n          }\r\n        },\r\n\r\n        // The first and last indexes are maintained to determine which active\r\n        // record is considered first/last. Sometimes data is filtered out,\r\n        // so the first/last active record is not guaranteed to represent the\r\n        // first/last actual record. These indexes are maintained to prevent\r\n        // unnecessary iteration in large data sets.\r\n        FIRSTRECORDINDEX: 0,\r\n        LASTRECORDINDEX: 0,\r\n\r\n        /**\r\n         * @cfg {array} [index]\r\n         * An array of #model fields that will be indexed.\r\n         * See NGN.DATA.Index for details.\r\n         */\r\n        INDEX: null\r\n      }),\r\n\r\n      // Internal attributes that should not be extended.\r\n      PRIVATE: NGN.privateconst({\r\n        STUB: Symbol('record.stub'),\r\n\r\n        // A private indexing method\r\n        INDEX: function (record, delta) {\r\n          if (typeof this.event === 'symbol') {\r\n            switch (this.event) {\r\n              case me.PRIVATE.EVENT.CREATE_RECORD:\r\n                me.METADATA.INDEXFIELDS.forEach(field => me.METADATA.INDEX[field].add(record[field], record.OID))\r\n                break\r\n\r\n              case me.PRIVATE.EVENT.DELETE_RECORD:\r\n                me.METADATA.INDEXFIELDS.forEach(field => me.METADATA.INDEX[field].remove(record.OID, record[field]))\r\n                break\r\n\r\n              case me.PRIVATE.EVENT.LOAD_RECORDS:\r\n                for (let i = 0; i < me.METADATA.records.length; i++) {\r\n                  me.METADATA.INDEXFIELDS.forEach(field => me.METADATA.INDEX[field].add(me.METADATA.records[i][field], me.METADATA.records[i].OID))\r\n                }\r\n\r\n                break\r\n\r\n              case me.PRIVATE.EVENT.DELETE_RECORD_FIELD:\r\n                if (me.METADATA.INDEXFIELDS.has(record.field.name)) {\r\n                  me.METADATA.INDEX[record.field.name].remove(record.record.OID, record.field.value)\r\n                }\r\n\r\n                break\r\n            }\r\n          } else {\r\n            switch (this.event) {\r\n              case 'record.update':\r\n                if (me.METADATA.INDEXFIELDS.has(delta.field.name)) {\r\n                  me.METADATA.INDEX[delta.field.name].update(record.OID, delta.old, delta.new)\r\n                }\r\n                break\r\n\r\n              case 'clear':\r\n                me.METADATA.INDEXFIELDS.forEach(field => me.METADATA.INDEX[field].reset())\r\n                break\r\n            }\r\n          }\r\n        },\r\n\r\n        // Contains a map of all records\r\n        RECORDMAP: new Map(),\r\n\r\n        // A reference to active records\r\n        ACTIVERECORDMAP: null,\r\n\r\n        // A reference to filtered records (non-active/non-deleted)\r\n        FILTEREDRECORDMAP: null,\r\n\r\n        // Internal events\r\n        EVENT: {\r\n          CREATE_RECORD: Symbol('record.create'),\r\n          DELETE_RECORD: Symbol('record.delete'),\r\n          DELETE_RECORD_FIELD: Symbol('records.field.delete'),\r\n          LOAD_RECORDS: Symbol('records.load')\r\n        },\r\n\r\n        // Makes sure the model configuration specifies a valid and indexable field.\r\n        checkModelIndexField: (field) => {\r\n          let metaconfig = this.METADATA.Model.prototype.CONFIGURATION\r\n\r\n          if (metaconfig.fields && metaconfig.fields.hasOwnProperty(field)) {\r\n            if (metaconfig.fields[field] !== null) {\r\n              if (['model', 'store', 'entity', 'function'].indexOf(NGN.typeof(metaconfig.fields[field])) >= 0) {\r\n                throw new Error(`Cannot create index for \"${field}\" field. Only basic NGN.DATA.Field types can be indexed. Relationship and virtual fields cannot be indexed.`)\r\n              } else if (NGN.typeof(metaconfig.fields[field]) === 'object') {\r\n                if (['model', 'store', 'entity', 'function'].indexOf(NGN.typeof(NGN.coalesce(metaconfig.fields[field].type))) >= 0) {\r\n                  throw new Error(`Cannot create index for \"${field}\" field. Only basic NGN.DATA.Field types can be indexed. Relationship and virtual fields cannot be indexed.`)\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            throw new Error(`Cannot create index for unrecognized field \"${field}\".`)\r\n          }\r\n        },\r\n\r\n        // Get the type of field from the model definition\r\n        getModelFieldType: (field) => {\r\n          let metaconfig = this.METADATA.Model.prototype.CONFIGURATION\r\n\r\n          if (metaconfig.fields[field] === null) {\r\n            return NGN.typeof(metaconfig.fields[field])\r\n          }\r\n\r\n          if (metaconfig.fields[field].type) {\r\n            return NGN.typeof(metaconfig.fields[field].type)\r\n          }\r\n\r\n          if (metaconfig.fields[field].default) {\r\n            return NGN.typeof(metaconfig.fields[field].default)\r\n          }\r\n\r\n          return NGN.typeof(NGN.coalesce(metaconfig.fields[field]))\r\n        },\r\n\r\n        // Add a record\r\n        addRecord: (data, suppressEvents = false) => {\r\n          const record = new me.METADATA.Model(data)\r\n\r\n          if (!(record instanceof NGN.DATA.Entity)) {\r\n            throw new Error(`Only a NGN.DATA.Model or JSON object may be used in NGN.DATA.Store#add. Received a \"${NGN.typeof(data)}\" value.`)\r\n          }\r\n\r\n          // Prevent invalid record addition (if configured)\r\n          if (!me.METADATA.allowInvalid && !record.valid) {\r\n            NGN.WARN(`An attempt to add invalid data to the \"${this.name}\" store was prevented. The following fields are invalid: ${Array.from(record.METADATA.invalidFieldNames.keys()).join(', ')}`)\r\n\r\n            if (!suppressEvents) {\r\n              this.emit('record.invalid', record)\r\n            }\r\n\r\n            if (this.METADATA.errorOnInvalid) {\r\n              throw new Error(`Invalid data cannot be added to the \"${this.name}\" store.`)\r\n            }\r\n          }\r\n\r\n          // If duplicates are prevented, check the new data.\r\n          if (!me.METADATA.allowDuplicates) {\r\n            for (let i = 0; i < this.METADATA.records.length; i++) {\r\n              if (this.METADATA.records[i].checksum === record.checksum) {\r\n                NGN.WARN(`An attempt to add a duplicate record to the \"${this.name}\" store was prevented.`)\r\n\r\n                if (!suppressEvents) {\r\n                  this.emit('record.duplicate', record)\r\n                }\r\n\r\n                if (this.METADATA.errorOnDuplicate) {\r\n                  throw new Error(`Duplicate records are not allowed in the \"${this.name}\" data store.`)\r\n                }\r\n\r\n                break\r\n              }\r\n            }\r\n          }\r\n\r\n          // Handle special record count processing (LIFO/FIFO support)\r\n          if (me.METADATA.lifo > 0 && me.METADATA.records.length + 1 > me.METADATA.lifo) {\r\n            me.remove(me.METADATA.records.length - 1, suppressEvents)\r\n          } else if (this.METADATA.fifo > 0 && me.METADATA.records.length + 1 > me.METADATA.fifo) {\r\n            me.remove(0, suppressEvents)\r\n          }\r\n\r\n          // Relay model events to this store.\r\n          // record.relay('*', this, 'record.')\r\n          record.on('*', function () {\r\n            switch (this.event) {\r\n              // case 'field.update':\r\n              // case 'field.delete':\r\n              //   // TODO: Update indices\r\n              //   return\r\n\r\n              case 'field.invalid':\r\n              case 'field.valid':\r\n                return me.emit(this.event.replace('field.', 'record.'), record)\r\n\r\n              case 'expired':\r\n                // TODO: Handle expiration\r\n            }\r\n          })\r\n\r\n          delete record.METADATA.store\r\n          Object.defineProperty(record.METADATA, 'store', NGN.get(() => me))\r\n\r\n          // Indexing is handled in an internal event handler\r\n          me.METADATA.records.push(record)\r\n\r\n          // Add the record to the map for efficient retrievel by OID\r\n          me.PRIVATE.RECORDMAP.set(record.OID, me.METADATA.records.length - 1)\r\n\r\n          return record\r\n        },\r\n\r\n        convertStubToRecord: (index, record) => {\r\n          if (record.hasOwnProperty(this.PRIVATE.STUB)) {\r\n            let newRecord = this.PRIVATE.addRecord(record.metadata, false)\r\n            newRecord.OID = record.OID\r\n\r\n            this.METADATA.records[index] = newRecord\r\n\r\n            return newRecord\r\n          } else {\r\n            return record\r\n          }\r\n        }\r\n      }),\r\n\r\n      // Create a convenience alias for the remove method.\r\n      delete: NGN.const(NGN.deprecate(this.remove, 'Store.delete is deprecated. Use Store.remove instead.'))\r\n    })\r\n\r\n    // Create a smart reference to record lists\r\n    Object.defineProperties(this.PRIVATE, {\r\n      ACTIVERECORDS: NGN.get(() => {\r\n        if (this.PRIVATE.ACTIVERECORDMAP === null) {\r\n          return this.PRIVATE.RECORDMAP\r\n        }\r\n\r\n        return this.PRIVATE.ACTIVERECORDMAP\r\n      }),\r\n\r\n      FILTEREDRECORDS: NGN.get(() => {\r\n        if (this.PRIVATE.FILTEREDRECORDMAP === null) {\r\n          return this.PRIVATE.RECORDMAP\r\n        }\r\n\r\n        return this.PRIVATE.FILTEREDRECORDMAP\r\n      })\r\n    })\r\n\r\n    // Disallow modification of internal events\r\n    Object.freeze(this.PRIVATE.EVENT)\r\n\r\n    // Support LIFO (Last In First Out) & FIFO(First In First Out)\r\n    if (this.METADATA.lifo > 0 && this.METADATA.fifo > 0) {\r\n      throw new InvalidConfigurationError('NGN.DATA.Store can be configured to use FIFO or LIFO, but not both simultaneously.')\r\n    }\r\n\r\n    // If LIFO/FIFO is used, disable alternative record count limitations.\r\n    if (this.METADATA.lifo > 0 || this.METADATA.fifo > 0) {\r\n      this.METADATA.minRecords = 0\r\n      this.METADATA.maxRecords = -1\r\n    } else {\r\n      this.METADATA.minRecords = this.METADATA.minRecords < 0 ? 0 : this.METADATA.minRecords\r\n    }\r\n\r\n    // Bubble events to the BUS\r\n    // this.relay('*', NGN.BUS, 'store.')\r\n\r\n    // Configure Indices\r\n    if (NGN.coalesce(cfg.index) && NGN.typeof(this.METADATA.Model.prototype.CONFIGURATION.fields) === 'object') {\r\n      this.createIndex(cfg.index)\r\n    }\r\n\r\n    // Setup auto-compact\r\n    if (this.METADATA.autocompact < 100) {\r\n      this.METADATA.DELETECOUNT = 0\r\n      this.on(this.PRIVATE.EVENTS.DELETE_RECORD, () => {\r\n        this.METADATA.DELETECOUNT++\r\n\r\n        if (this.METADATA >= this.METADATA.autocompact) {\r\n          this.METADATA.DELETECOUNT = 0\r\n          this.compact()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {array} snapshots\r\n   * Contains the data snapshot of the entire store.\r\n   * @readonly\r\n   * @private\r\n   */\r\n  get snapshots () {\r\n    return NGN.coalesce(this.snapshotarchive, [])\r\n  }\r\n\r\n  // Deprecation notice\r\n  get history () {\r\n    NGN.WARN('history is deprecated. Use NGN.DATA.Store#changelog instead.')\r\n    return this.changelog\r\n  }\r\n\r\n  // Deprecation notice\r\n  get recordCount () {\r\n    NGN.WARN('recordCount is deprecated. Use NGN.DATA.Store#size instead.')\r\n    return this.size\r\n  }\r\n\r\n  /**\r\n   * @property {number} count\r\n   * The total number of **active** records contained in the store.\r\n   * Active records are any records that aren't filtered out.\r\n   */\r\n  get size () {\r\n    return this.PRIVATE.ACTIVERECORDS.size\r\n  }\r\n\r\n  /**\r\n   * @property {number} length\r\n   * The total number of records contained in the store.\r\n   * This value does not include any soft-deleted/volatile records.\r\n   */\r\n  get length () {\r\n    return this.METADATA.records.length\r\n  }\r\n\r\n  /**\r\n   * @property {NGN.DATA.Model} first\r\n   * Return the first active record in the store. Returns `null`\r\n   * if the store is empty.\r\n   */\r\n  get first () {\r\n    let record = NGN.coalesce(this.METADATA.records[this.METADATA.FIRSTRECORDINDEX])\r\n\r\n    return this.PRIVATE.convertStubToRecord(this.METADATA.FIRSTRECORDINDEX, record)\r\n    // return NGN.coalesce(this.METADATA.records[this.METADATA.FIRSTRECORDINDEX])\r\n  }\r\n\r\n  /**\r\n   * @property {NGN.DATA.Model} last\r\n   * Return the last active record in the store. Returns `null`\r\n   * if the store is empty.\r\n   */\r\n  get last () {\r\n    let record = NGN.coalesce(this.METADATA.records[this.METADATA.LASTRECORDINDEX])\r\n\r\n    return this.PRIVATE.convertStubToRecord(this.METADATA.LASTRECORDINDEX, record)\r\n  }\r\n\r\n  /**\r\n   * @property {object} data\r\n   * A serialized version of the data represented by the store. This\r\n   * only includes non-virtual fields. See #representation to use\r\n   * a representation of data containing virtual fields.\r\n   */\r\n  get data () {\r\n    const recordList = this.PRIVATE.ACTIVERECORDS\r\n\r\n    // If no records exist, skip\r\n    if (recordList.size === 0) {\r\n      return []\r\n    }\r\n\r\n    let rec = this.PRIVATE.convertStubToRecord(this.METADATA.FIRSTRECORDINDEX, this.METADATA.records[this.METADATA.FIRSTRECORDINDEX])\r\n\r\n    if (this.METADATA.MAP === null) {\r\n      this.METADATA.MAP = NGN.coalesce(rec.MAP)\r\n    }\r\n\r\n    let defaults = null\r\n\r\n    if (rec instanceof NGN.DATA.Entity) {\r\n      let fieldDefinitions = rec.fieldDefinitions\r\n      let fields = Object.keys(fieldDefinitions)\r\n\r\n      defaults = {}\r\n\r\n      fields.forEach(field => {\r\n        if (!fieldDefinitions[field].hidden && !fieldDefinitions[field].virtual) {\r\n          defaults[field] = fieldDefinitions[field].default\r\n        }\r\n      })\r\n    }\r\n\r\n    const result = []\r\n    // const fields = defaults !== null ? Object.keys(defaults) : []\r\n\r\n    // Iterate through set\r\n    recordList.forEach(index => {\r\n      if (this.METADATA.records[index] !== null) {\r\n        // If the value is a stub, map it.\r\n        if (this.METADATA.records[index].hasOwnProperty(this.PRIVATE.STUB)) {\r\n          let applicableData = Object.assign({}, defaults)\r\n          let data = Object.assign(applicableData, this.METADATA.records[index].metadata)\r\n\r\n          if (this.METADATA.MAP !== null) {\r\n            result.push(this.METADATA.MAP.applyInverseMap(data))\r\n          } else {\r\n            result.push(data)\r\n          }\r\n        } else {\r\n          result.push(this.METADATA.records[index].data)\r\n        }\r\n      }\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * @property {array} representation\r\n   * The complete and unfiltered underlying representation dataset\r\n   * (data + virtuals of each model).\r\n   */\r\n  get representation () {\r\n    const result = []\r\n    const recordList = this.PRIVATE.ACTIVERECORDS\r\n\r\n    recordList.forEach(index => {\r\n      if (this.METADATA.records[index] !== null) {\r\n        result.push(this.METADATA.records[index].representation)\r\n      }\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  get auditable () {\r\n    return this.METADATA.AUDITABLE\r\n  }\r\n\r\n  set auditable (value) {\r\n    value = NGN.forceBoolean(value)\r\n\r\n    if (value !== this.METADATA.AUDITABLE) {\r\n      this.METADATA.AUDITABLE = value\r\n      this.METADATA.AUDITLOG = value ? new NGN.DATA.TransactionLog() : null\r\n    }\r\n  }\r\n\r\n  get model () {\r\n    return this.METADATA.Model\r\n  }\r\n\r\n  // set model (value) {\r\n  //   if (value !== this.METADATA.Model) {\r\n  //     if (NGN.typeof(value) !== 'model') {\r\n  //       throw new InvalidConfigurationError(`\"${this.name}\" model could not be set because the value is a ${NGN.typeof(value)} type (requires NGN.DATA.Model).`)\r\n  //     }\r\n  //\r\n  //     this.METADATA.Model = value\r\n  //   }\r\n  // }\r\n\r\n  get map () {\r\n    return this.METADATA.MAP\r\n  }\r\n\r\n  /**\r\n   * @property {array} indexedFieldNames\r\n   * An array of the field names for which the store maintains indexes.\r\n   */\r\n  get indexedFieldNames () {\r\n    if (this.METADATA.INDEXFIELDS) {\r\n      return Array.from(this.METADATA.INDEXFIELDS)\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method add\r\n   * Append a data record to the store. This adds the record to the end of the list.\r\n   * @param {NGN.DATA.Model|object} data\r\n   * Accepts an existing NGN Data Model or a JSON object.\r\n   * If a JSON object is supplied, it will be applied to\r\n   * the data model specified in #model.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set this to `true` to prevent the `record.create` event\r\n   * from firing.\r\n   * @return {NGN.DATA.Model}\r\n   * Returns the new record.\r\n   */\r\n  add (data, suppressEvents = false) {\r\n    // Support array input\r\n    if (NGN.typeof(data) === 'array') {\r\n      let result = new Array(data.length)\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        result[i] = this.add(data[i], suppressEvents)\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    // Prevent creation if it will exceed maximum record count.\r\n    if (this.METADATA.maxRecords > 0 && this.METADATA.records.length + 1 > this.METADATA.maxRecords) {\r\n      throw new Error('Maximum record count exceeded.')\r\n    }\r\n\r\n    if (!(data instanceof this.METADATA.Model)) {\r\n      // Force a data model\r\n      if (NGN.typeof(data) === 'string') {\r\n        data = JSON.parse(data)\r\n      }\r\n\r\n      if (typeof data !== 'object') {\r\n        throw new Error(`${NGN.typeof(data)} is an invalid data type (must be an object conforming to the ${this.METADATA.Model.name} field configuration).`)\r\n      }\r\n    } else {\r\n      data = data.data\r\n    }\r\n\r\n    const record = this.PRIVATE.addRecord(data)\r\n\r\n    // TODO: Apply filters to new record before identifying the last record.\r\n    this.METADATA.LASTRECORDINDEX = this.METADATA.records.length - 1\r\n\r\n    this.emit(this.PRIVATE.EVENT.CREATE_RECORD, record)\r\n\r\n    if (!suppressEvents) {\r\n      this.emit('record.create', record)\r\n    }\r\n\r\n    return record\r\n  }\r\n\r\n  /**\r\n   * @method remove\r\n   * Remove a record.\r\n   * @param {NGN.DATA.Model|number|Symbol} record\r\n   * Accepts an existing NGN Data Model or index number.\r\n   * Using a model is slower than using an index number.\r\n   * This may also be the NGN.DATA.Model#OID value (for\r\n   * advanced use cases).\r\n   * @fires record.delete\r\n   * The record delete event sends 2 arguments to handler methods:\r\n   * `record` and `index`. The record refers to the model that was\r\n   * removed. The `index` refers to the position of the record within\r\n   * the store's data list. **NOTICE** the `index` refers to where\r\n   * the record _used to be_.\r\n   * @returns {NGN.DATA.Model}\r\n   * Returns the data model that was just removed. If a model\r\n   * is unavailable (i.e. remove didn't find the specified record),\r\n   * this will return `null`.\r\n   */\r\n  remove (record, suppressEvents = false) {\r\n    // Short-circuit processing if there are no records.\r\n    if (this.METADATA.records.length === 0) {\r\n      NGN.INFO(`\"${this.name}\" store called remove(), but the store contains no records.`)\r\n      return\r\n    }\r\n\r\n    // Support removal of simultaneously removing multiple records\r\n    if (NGN.typeof(record) === 'array') {\r\n      let result = new Array(record.length)\r\n\r\n      for (let i = 0; i < record.length; i++) {\r\n        result[i] = this.remove(record[i])\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    // Prevent removal if it will exceed minimum record count.\r\n    if (this.minRecords > 0 && this.METADATA.records.length - 1 < this.minRecords) {\r\n      throw new Error('Removing this record would violate the minimum record count.')\r\n    }\r\n\r\n    // Identify which record will be removed.\r\n    let index\r\n\r\n    switch (NGN.typeof(record)) {\r\n      case 'number':\r\n        if (record < 0 || !this.METADATA.records[record]) {\r\n          NGN.ERROR(`Record removal failed (record not found at index ${(record || 'undefined').toString()}).`)\r\n          return null\r\n        }\r\n\r\n        index = record\r\n\r\n        break\r\n\r\n      // The default case comes before the symbol case specifically\r\n      // so the record can be converted to an OID value (for use with\r\n      // the RECORDMAP lookup).\r\n      default:\r\n        if (!(record instanceof NGN.DATA.Entity)) {\r\n          NGN.ERROR('Invalid record value passed to Store.remove() method.')\r\n          return null\r\n        }\r\n\r\n        record = record.OID\r\n\r\n      case 'symbol': // eslint-disable-line no-fallthrough\r\n        index = this.PRIVATE.ACTIVERECORDS.get(record)\r\n\r\n        if (index < 0) {\r\n          NGN.ERROR(`Record removal failed. Record OID not found (\"${record.toString()}\").`)\r\n          return null\r\n        }\r\n\r\n        break\r\n    }\r\n\r\n    // If nothing has been deleted yet, create an active record map.\r\n    // The active record map contains Model OID values with a reference\r\n    // to the actual record index.\r\n    if (this.PRIVATE.ACTIVERECORDMAP === null) {\r\n      // Copy the record map to initialize the active records\r\n      this.PRIVATE.ACTIVERECORDMAP = new Map(this.PRIVATE.RECORDMAP)\r\n    }\r\n\r\n    // Identify the record to be removed.\r\n    const removedRecord = this.METADATA.records[index]\r\n\r\n    // If the record isn't among the active records, do not remove it.\r\n    if (removedRecord === null) {\r\n      NGN.WARN('Specified record does not exist.')\r\n      return null\r\n    }\r\n\r\n    let activeIndex = this.PRIVATE.ACTIVERECORDS.get(removedRecord.OID)\r\n\r\n    if (isNaN(activeIndex)) {\r\n      NGN.WARN(`Record not found for \"${removedRecord.OID.toString()}\".`)\r\n      return null\r\n    }\r\n\r\n    this.PRIVATE.ACTIVERECORDS.delete(removedRecord.OID)\r\n\r\n    // If the store is configured to soft-delete,\r\n    // don't actually remove it until it expires.\r\n    if (this.METADATA.softDelete) {\r\n      if (this.METADATA.softDeleteTtl >= 0) {\r\n        removedRecord.once('expired', () => {\r\n          this.METADATA.records[this.PRIVATE.RECORDMAP.get(removedRecord.OID)] = null\r\n          this.PRIVATE.RECORDMAP.delete(removedRecord.OID)\r\n\r\n          if (!suppressEvents) {\r\n            this.emit('record.purge', removedRecord)\r\n          }\r\n        })\r\n\r\n        removedRecord.expires = this.METADATA.softDeleteTtl\r\n      }\r\n    } else {\r\n      this.METADATA.records[this.PRIVATE.RECORDMAP.get(removedRecord.OID)] = null\r\n      this.PRIVATE.RECORDMAP.delete(removedRecord.OID)\r\n    }\r\n\r\n    // Update cursor indexes (to quickly reference first and last active records)\r\n    if (this.METADATA.LASTRECORDINDEX === activeIndex) {\r\n      if (this.PRIVATE.ACTIVERECORDS.size <= 1) {\r\n        this.METADATA.LASTRECORDINDEX = this.PRIVATE.ACTIVERECORDS.values().next().value\r\n        this.METADATA.FIRSTRECORDINDEX = this.METADATA.LASTRECORDINDEX\r\n      } else if (activeIndex !== 0) {\r\n        for (let i = (activeIndex - 1); i >= 0; i--) {\r\n          if (i === 0) {\r\n            this.METADATA.LASTRECORDINDEX = 0\r\n            break\r\n          }\r\n\r\n          const examinedRecord = this.METADATA.records[i]\r\n\r\n          if (examinedRecord !== null) {\r\n            if (this.PRIVATE.ACTIVERECORDS.has(examinedRecord.OID)) {\r\n              this.METADATA.LASTRECORDINDEX = this.PRIVATE.ACTIVERECORDS.get(examinedRecord.OID)\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (this.METADATA.FIRSTRECORDINDEX === activeIndex) {\r\n      let totalSize = this.PRIVATE.ACTIVERECORDS.size\r\n\r\n      for (let i = (activeIndex + 1); i < totalSize; i++) {\r\n        const examinedRecord = this.METADATA.records[i]\r\n\r\n        if (examinedRecord !== null) {\r\n          if (this.PRIVATE.ACTIVERECORDS.has(examinedRecord.OID)) {\r\n            this.METADATA.FIRSTRECORDINDEX = this.PRIVATE.ACTIVERECORDS.get(examinedRecord.OID)\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.emit(this.PRIVATE.EVENT.DELETE_RECORD, removedRecord)\r\n\r\n    if (!suppressEvents) {\r\n      this.emit('record.delete', removedRecord)\r\n    }\r\n\r\n    return removedRecord\r\n  }\r\n\r\n  /**\r\n   * Create a new index on the store.\r\n   * @param  {string} field\r\n   * The name of the field to index.\r\n   * @fires index.create\r\n   * Triggered when an index is created. The name of field is passed\r\n   * as the only argument.\r\n   */\r\n  createIndex (field) {\r\n    // Support multiple indexes\r\n    if (NGN.typeof(field) === 'array') {\r\n      for (let i = 0; i < field.length; i++) {\r\n        this.createIndex(field[i])\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    // Make sure index fields are known to the store\r\n    if (!this.METADATA.INDEXFIELDS) {\r\n      this.METADATA.INDEXFIELDS = new Set()\r\n\r\n      // this.on('record.*', this.PRIVATE.INDEX)\r\n      this.on([\r\n        this.PRIVATE.EVENT.CREATE_RECORD,\r\n        this.PRIVATE.EVENT.DELETE_RECORD,\r\n        this.PRIVATE.EVENT.LOAD_RECORDS,\r\n        this.PRIVATE.EVENT.DELETE_RECORD_FIELD,\r\n        'clear'\r\n      ], this.PRIVATE.INDEX)\r\n    }\r\n\r\n    // In an index already exists, ignore it.\r\n    if (this.METADATA.INDEXFIELDS.has(field)) {\r\n      return\r\n    }\r\n\r\n    // Guarantee the existance of the index list\r\n    this.METADATA.INDEX = NGN.coalesce(this.METADATA.INDEX, {})\r\n\r\n    this.PRIVATE.checkModelIndexField(field)\r\n\r\n    this.METADATA.INDEXFIELDS.add(field)\r\n\r\n    // Identify BTree\r\n    let btree = ['number', 'date'].indexOf(this.PRIVATE.getModelFieldType(field)) >= 0\r\n\r\n    this.METADATA.INDEX[field] = new NGN.DATA.Index(btree, `${field.toUpperCase()} ${btree ? 'BTREE ' : ''}INDEX`)\r\n\r\n    // Apply to any existing records\r\n    if (this.METADATA.records.length > 0) {\r\n      this.PRIVATE.INDEX.apply({ event: this.PRIVATE.EVENT.LOAD_RECORDS })\r\n    }\r\n\r\n    this.emit('index.created', field)\r\n  }\r\n\r\n  /**\r\n   * Remove an existing index from the store.\r\n   * @param  {string} [field=null]\r\n   * The name of the indexed field. Set this to `null` (or leave blank) to\r\n   * remove all existing indexes.\r\n   * @fires index.delete\r\n   * Triggered when an index is removed. The name of field is passed\r\n   * as the only argument.\r\n   */\r\n  removeIndex (field = null) {\r\n    if (!this.METADATA.INDEXFIELDS) {\r\n      return\r\n    }\r\n\r\n    if (NGN.coalesce(field) === null) {\r\n      field = this.indexedFieldNames\r\n    }\r\n\r\n    // Support multiple indexes\r\n    if (NGN.typeof(field) === 'array') {\r\n      for (let i = 0; i < field.length; i++) {\r\n        this.removeIndex(field[i])\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    // Remove the specific index.\r\n    this.METADATA.INDEXFIELDS.delete(field)\r\n    delete this.METADATA.INDEX[field]\r\n    this.emit('index.delete', field)\r\n\r\n    // When there are no more indexes, clear out event\r\n    // listeners and fields.\r\n    if (this.METADATA.INDEXFIELDS.size === 0) {\r\n      this.METADATA.INDEX = null\r\n      delete this.METADATA.INDEXFIELDS\r\n\r\n      this.off([\r\n        this.PRIVATE.EVENT.CREATE_RECORD,\r\n        this.PRIVATE.EVENT.DELETE_RECORD,\r\n        this.PRIVATE.EVENT.LOAD_RECORDS,\r\n        this.PRIVATE.EVENT.DELETE_RECORD_FIELD\r\n      ], this.PRIVATE.INDEX)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve a record based on it's relative position to another\r\n   * record. This method is used by NGN.DATA.Model#next and NGN.DATA.Model#previous\r\n   * to support \"doubly linked list\" approach to record iteration.\r\n   * @param  {[type]}  currentRecord [description]\r\n   * @param  {Number}  [count=1]     [description]\r\n   * @param  {Boolean} [cycle=false] [description]\r\n   * @return {[type]}                [description]\r\n   */\r\n  getRecordSibling (currentRecord, count = 1, cycle = false) {\r\n    let size = this.size\r\n\r\n    if (size === 0) {\r\n      NGN.WARN('Attempted to execute getRecordSibling with no active records.')\r\n      return null\r\n    }\r\n\r\n    // Make sure the iterator fits within the range\r\n    if (Math.abs(count) > size) {\r\n      count = count % size\r\n    }\r\n\r\n    if (size === 1 || count === 0) {\r\n      return currentRecord\r\n    }\r\n\r\n    let ActiveRecords = Array.from(this.PRIVATE.ACTIVERECORDS)\r\n    let currentIndex = ActiveRecords.findIndex(item => currentRecord.OID === item[0])\r\n\r\n    if (currentIndex < 0) {\r\n      throw new Error('Record not found.')\r\n    }\r\n\r\n    currentIndex += count\r\n\r\n    // Support cycling through records.\r\n    if ((currentIndex >= ActiveRecords.length || currentIndex < 0) && cycle) {\r\n      // Cycle forwards\r\n      if (count > 0) {\r\n        currentIndex = currentIndex % ActiveRecords.length\r\n      } else {\r\n        // Cycle Backwards\r\n        currentIndex = ActiveRecords.length - Math.abs(currentIndex)\r\n      }\r\n    }\r\n\r\n    if (currentIndex < 0 || currentIndex >= ActiveRecords.length) {\r\n      return null\r\n    }\r\n\r\n    return this.METADATA.records[ActiveRecords[currentIndex][1]]\r\n  }\r\n\r\n  /**\r\n   * Returns the index number of the model. If the same\r\n   * model exists more than once (duplicate records), only\r\n   * the first index is returned.\r\n   * @param  {NGN.DATA.Model} model\r\n   * The model/record to retrieve an index number for.\r\n   * @return {number}\r\n   * The zero-based index number of the model.\r\n   */\r\n  indexOf (record) {\r\n    return this.PRIVATE.RECORDMAP.get(record.OID)\r\n  }\r\n\r\n  /**\r\n   * Determine whether the store contains a record.\r\n   * This only checks the active record set (ignores filtered records).\r\n   * @param  {NGN.DATA.Model} record\r\n   * The record to test for inclusion.\r\n   * @return {boolean}\r\n   */\r\n  contains (record) {\r\n    return this.PRIVATE.ACTIVERECORDS.has(record.OID)\r\n  }\r\n\r\n  /**\r\n   * Get the list of records for the given value.\r\n   * @param {string} fieldName\r\n   * The name of the indexed field.\r\n   * @param  {any} fieldValue\r\n   * The value of the index field. This is used to lookup\r\n   * the list of records/models whose field is equal to\r\n   * the specified value.\r\n   * @return {NGN.DATA.Model[]}\r\n   * Returns an array of models/records within the index for\r\n   * the given value.\r\n   */\r\n  getIndexRecords (field, value) {\r\n    if (this.METADATA.INDEX && this.METADATA.INDEX.hasOwnProperty(field)) {\r\n      let oid = this.METADATA.INDEX[field].recordsFor(value)\r\n      let result = new Array(oid.length)\r\n\r\n      for (let i = 0; i < oid.length; i++) {\r\n        result[i] = this.METADATA.records[this.PRIVATE.RECORDMAP.get(oid[i])]\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * Retrieve an active record by index number (0-based, similar to an array).\r\n   * @param  {number} [index=0]\r\n   * The index of the record to retrieve.\r\n   */\r\n  getRecord (index = 0) {\r\n    if (typeof index === 'symbol') {\r\n      index = this.PRIVATE.ACTIVERECORDS.get(index)\r\n    }\r\n\r\n    if (index < 0) {\r\n      NGN.WARN('Cannot retrieve a record for a negative index.')\r\n      return null\r\n    }\r\n\r\n    if (index >= this.PRIVATE.ACTIVERECORDS.size) {\r\n      NGN.WARN('Cannot retrieve a record for an out-of-scope index (index greater than total record count.)')\r\n      return null\r\n    }\r\n\r\n    return this.METADATA.records[Array.from(this.PRIVATE.ACTIVERECORDS)[index][1]]\r\n  }\r\n\r\n  /**\r\n   * @method clear\r\n   * Removes all data. If auditing is enabled, the transaction log is reset.\r\n   * @param {boolean} [purgeSoftDelete=true]\r\n   * Purge soft deleted records from memory.\r\n   * @param {boolean} [suppressEvents=false]\r\n   * Set to `true` to prevent events from triggering when this method is run.\r\n   * @fires clear\r\n   * Fired when all data is removed\r\n   */\r\n  clear (purge = true, suppressEvents = false) {\r\n    if (this.METADATA.ARCHIVE) {\r\n      if (!purge) {\r\n        this.METADATA.ARCHIVE = this.records\r\n      } else {\r\n        delete this.METADATA.ARCHIVE\r\n      }\r\n    }\r\n\r\n    this.METADATA.records = []\r\n    this.PRIVATE.RECORDMAP = new Map()\r\n    this.PRIVATE.ACTIVERECORDMAP = null\r\n    this.PRIVATE.FILTEREDRECORDMAP = null\r\n    this.METADATA.LASTRECORDINDEX = 0\r\n    this.METADATA.FIRSTRECORDINDEX = 0\r\n\r\n    if (this.METADATA.AUDITABLE) {\r\n      this.METADATA.AUDITLOG.reset()\r\n    }\r\n\r\n    // Indexes updated automatically (listening for 'clear' event)\r\n\r\n    if (!suppressEvents) {\r\n      this.emit('clear')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A special method to clear events from the underlying event emitter.\r\n   * This exists because #clear has a special meaning in a data store (removing\r\n   * all data records vs removing all events).\r\n   * @private\r\n   */\r\n  clearEvents () {\r\n    super.clear(...arguments)\r\n  }\r\n\r\n  /**\r\n   * Replace a model.\r\n   * @deprecated 2.0.0\r\n   * @param  {NGN.DATA.Model} newModel\r\n   * The new model.\r\n   */\r\n  replaceModel (newModel) {\r\n    NGN.deprecate(\r\n      () => { this.model = newModel },\r\n      'replaceModel has been deprected. Set the model directly instead.'\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @method snapshot\r\n   * Add a snapshot of the current store to the #snapshot archive.\r\n   * This can potentially be a computationally/memory-expensive operation.\r\n   * The method creates a copy of all data in the store along with checksums\r\n   * of each element and holds the snapshot in RAM. Large stores may consume\r\n   * large amounts of RAM until the snapshots are released/cleared.\r\n   * Snapshots are most commonly used with data proxies to calculate\r\n   * differences in a data set before persisting them to a database.\r\n   * @fires snapshot\r\n   * Triggered when a new snapshot is created. The snapshot dataset is\r\n   * passed as the only argument to event handlers.\r\n   * @returns {object}\r\n   * Returns an object containing the following fields:\r\n   *\r\n   * ```js\r\n   * {\r\n   *   timestamp: 'ex: 2018-01-19T16:43:03.279Z',\r\n   *   checksum: 'snapshotchecksum',\r\n   *   modelChecksums: [\r\n   *     'record1_checksum',\r\n   *     'record2_checksum'\r\n   *   ],\r\n   *   data: { ... } // Actual data at the time of the snapshot\r\n   * }\r\n   * ```\r\n   */\r\n  snapshot () {\r\n    this.METADATA.snapshotarchive = NGN.coalesce(this.METADATA.snapshotarchive, [])\r\n\r\n    let data = this.data\r\n    let dataset = {\r\n      id: NGN.DATA.UTILITY.GUID(),\r\n      timestamp: (new Date()).toISOString(),\r\n      checksum: NGN.DATA.UTILITY.checksum(JSON.stringify(data)).toString(),\r\n      modelChecksums: this.data.map((item) => {\r\n        return NGN.DATA.UTILITY.checksum(JSON.stringify(item)).toString()\r\n      }),\r\n      data: data\r\n    }\r\n\r\n    this.METADATA.snapshotarchive.unshift(dataset)\r\n    this.emit('snapshot', dataset)\r\n\r\n    return dataset\r\n  }\r\n\r\n  /**\r\n   * @method clearSnapshots\r\n   * Remove all archived snapshots.\r\n   */\r\n  clearSnapshots () {\r\n    this.snapshotarchive = null\r\n  }\r\n\r\n  load (data) {\r\n    console.time('load')\r\n    let insertableData\r\n\r\n    // Guarantee unique records amongst only the new records\r\n    if (!this.METADATA.allowDuplicates) {\r\n      let uniqueValues = new Set()\r\n\r\n      insertableData = []\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (!uniqueValues.has(JSON.stringify(data[i]))) {\r\n          uniqueValues.add(JSON.stringify(data[i]))\r\n          insertableData.push(data[i])\r\n        } else if (this.METADATA.errorOnDuplicate) {\r\n          throw new NGNDuplicateRecordError()\r\n        }\r\n      }\r\n    } else {\r\n      insertableData = data\r\n    }\r\n\r\n    let newRecordCount = insertableData.length + this.METADATA.records.length\r\n\r\n    // Don't exceed the maximum record count if it exists.\r\n    if (this.METADATA.maxRecords > 0 && newRecordCount > this.METADATA.maxRecords) {\r\n      throw new Error('Maximum record count exceeded.')\r\n    }\r\n\r\n    if (newRecordCount > 4000000) {\r\n      throw new Error('Maximum load size exceeded. A store may contain a maximum of 4M records.')\r\n    }\r\n\r\n    for (let i = 0; i < insertableData.length; i++) {\r\n      let oid = Symbol('model.id')\r\n      this.METADATA.records.push({\r\n        [this.PRIVATE.STUB]: true,\r\n        OID: oid,\r\n        metadata: insertableData[i]\r\n      })\r\n\r\n      // Add the record to the map for efficient retrievel by OID\r\n      this.PRIVATE.RECORDMAP.set(oid, this.METADATA.records.length - 1)\r\n    }\r\n\r\n    // TODO: Apply filters to new record before identifying the last record.\r\n    this.METADATA.LASTRECORDINDEX = this.METADATA.records.length - 1\r\n\r\n    // this.emit(this.PRIVATE.EVENT.LOAD_RECORDS)\r\n  }\r\n\r\n  /**\r\n   * This rebuilds the local index of records, removing any dead records.\r\n   * While deleted records are destroyed (in accordance to #softDeleteTtl),\r\n   * the active record table contains a `null` or `undefined` value for each\r\n   * deleted/dead record. This method removes such records, akin in nature to\r\n   * the common JavaScript garbage collection process.\r\n   *\r\n   * This method almost never needs to be run, since stores\r\n   * attempt to manage this process for themselves automatically. However; if\r\n   * large volume deletions occur rapidly (50K+), it's possible (though not assured)\r\n   * performance could be negatively impacted. Compacting the store can\r\n   * improve performance in these cases. However; running this too often or\r\n   * excessively may degrade performance since it is essentially rewriting\r\n   * the store data each time.\r\n   *\r\n   * When in doubt, *don't* use this method.\r\n   * @info This method will not run when fewer than 100 cumulative records have\r\n   * existed in the store, due to the inefficient nature at such low volume.\r\n   * @fires compact.start\r\n   * Triggered when the compact process begins.\r\n   * @fires compact.complete\r\n   * Triggered when the compact process completes.\r\n   */\r\n  compact () {\r\n    this.emit('compact.start')\r\n\r\n    if (this.METADATA.records.length < 100) {\r\n      this.emit('compact.complete')\r\n\r\n      if (this.METADATA.records.length !== 0) {\r\n        NGN.WARN(`compact() called on ${this.name} with fewer than 100 elements.`)\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    let ranges = []\r\n    let currentRange = []\r\n    let empty = 0\r\n\r\n    // Identify null ranges (dead records)\r\n    for (let i = 0; i < this.METADATA.records.length; i++) {\r\n      if (this.METADATA.records[i] === null) {\r\n        empty++\r\n\r\n        if (currentRange.length === 0) {\r\n          currentRange.push(i)\r\n        }\r\n      } else {\r\n        // Identify new index values for remaining records\r\n        if (empty > 0) {\r\n          this.PRIVATE.RECORDMAP.set(this.METADATA.records[i].OID, i - empty)\r\n\r\n          if (this.METADATA.FIRSTRECORDINDEX === i) {\r\n            this.METADATA.FIRSTRECORDINDEX = i - empty\r\n          }\r\n\r\n          if (this.METADATA.LASTRECORDINDEX === i) {\r\n            this.METADATA.LASTRECORDINDEX = i - empty\r\n          }\r\n        }\r\n\r\n        if (currentRange.length === 1) {\r\n          currentRange.push(i - 1)\r\n          ranges.push(currentRange)\r\n          currentRange = []\r\n        }\r\n      }\r\n    }\r\n\r\n    // Clear null ranges\r\n    empty = 0\r\n    while (ranges.length > 0) {\r\n      this.METADATA.records.splice(ranges[0][0] - empty, ranges[0][1] - ranges[0][0] + 1)\r\n      empty += ranges[0][1] - ranges[0][0] + 1\r\n      ranges.shift()\r\n    }\r\n\r\n    // Reset the active record map\r\n    this.PRIVATE.ACTIVERECORDMAP = null\r\n\r\n    this.emit('compact.complete')\r\n  }\r\n\r\n  /**\r\n   * Performs executes the callback method on each active record\r\n   * within the store. For example:\r\n   *\r\n   * ```js\r\n   * Store.forEach(function (record) {\r\n   *   // Do Something\r\n   * })\r\n   * ```\r\n   * @param  {Function} callback\r\n   * The callback method is applied to each record.\r\n   */\r\n  forEach (fn) {\r\n    if (!NGN.isFn(fn)) {\r\n      throw new Error(`A ${NGN.typeof(fn)} was applied to ${this.name}'s each() method when a function was expected.`)\r\n    }\r\n\r\n    this.PRIVATE.ACTIVERECORDS.forEach((value, key, map) => {\r\n      fn(this.METADATA.records[value])\r\n    })\r\n  }\r\n}\r\n","import UTILITY from './Utility'\r\nimport BTree from './index/BTree'\r\nimport JSONSchema from './schema/JSON'\r\nimport TransactionLog from './TransactionLog'\r\nimport Rule from './rule/Rule'\r\nimport RangeRule from './rule/RangeRule'\r\nimport Field from './field/Field'\r\nimport VirtualField from './field/VirtualField'\r\nimport Relationship from './field/Relationship'\r\nimport FieldMap from './field/FieldMap'\r\nimport Entity from './Model'\r\nimport Index from './index/Index'\r\nimport Store from './Store'\r\n\r\nconst Model = function (cfg) {\r\n  if (NGN.typeof(cfg) !== 'object') {\r\n    throw new Error('Model must be configured.')\r\n  }\r\n\r\n  let Model = function (data, suppressEvents = false) {\r\n    let Entity = new NGN.DATA.Entity(cfg)\r\n\r\n    if (data) {\r\n      Entity.load(data, suppressEvents)\r\n    }\r\n\r\n    return Entity\r\n  }\r\n\r\n  const me = this\r\n\r\n  Object.defineProperty(Model.prototype, 'CONFIGURATION', NGN.const(cfg))\r\n  Object.defineProperty(Model.prototype, 'ENTITY', {\r\n    enumerable: false,\r\n    get () {\r\n      return me\r\n    }\r\n  })\r\n\r\n  return Model\r\n}\r\n\r\nconst util = NGN.deprecate(UTILITY, 'NGN.DATA.util is now NGN.DATA.UTILITY')\r\n\r\nexport {\r\n  UTILITY,\r\n  util,\r\n  TransactionLog,\r\n  Rule,\r\n  RangeRule,\r\n  Field,\r\n  VirtualField,\r\n  Relationship,\r\n  FieldMap,\r\n  Model,\r\n  Entity,\r\n  Index,\r\n  Store,\r\n  BTree,\r\n  JSONSchema\r\n}\r\n","import NGN from './core'\r\nimport EventEmitter from './emitter/core'\r\nimport * as Queue from './queue/core'\r\nimport * as Utility from './utility/core'\r\nimport * as Network from './net/core'\r\nimport * as Data from './data/core'\r\n\r\n// Add Event Emitter Class & Global Event Bus\r\nNGN.extend('EventEmitter', NGN.public(EventEmitter))\r\nNGN.extend('BUS', NGN.const(new NGN.EventEmitter()))\r\n\r\n// Add Queuing System\r\nNGN.extend('Task', NGN.const(Queue.Task))\r\nNGN.extend('Queue', NGN.const(Queue.Queue))\r\nNGN.extend('Tasks', NGN.deprecate(NGN.Queue, 'NGN.Tasks is now NGN.Queue'))\r\n\r\n// Add Networking\r\nNGN.extend('NET', NGN.const(Network.Library))\r\n\r\n// Add Utilities\r\nNGN.extend('UTILITY', NGN.const(Utility))\r\n\r\n// Add Data Library\r\nNGN.extend('DATA', NGN.const(Data))\r\n\r\nObject.defineProperty(NGN, 'version', {\r\n  enumerable: true,\r\n  writable: false,\r\n  configurable: false,\r\n  value: '[#REPLACE_VERSION#]'\r\n})\r\n"],"names":["NGN","EE","Resource","Utility","Rule","DataField","UTILITY","Queue.Task","Queue.Queue","Network.Library"],"mappings":"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"}